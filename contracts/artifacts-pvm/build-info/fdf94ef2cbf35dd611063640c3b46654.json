{"id":"fdf94ef2cbf35dd611063640c3b46654","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"contracts/LogisticsTracking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract LogisticsEvents {\n    address public owner;\n    \n    // Track authorized logistics providers\n    mapping(address => bool) public authorizedProviders;\n    \n    // Track which shipment IDs have been used\n    mapping(uint256 => bool) public shipmentExists;\n    \n    // Track shipment status\n    enum ShipmentStatus { Created, InTransit, Delivered, Cancelled }\n\n    constructor() {\n        owner = msg.sender;\n        authorizedProviders[msg.sender] = true;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not authorized: owner only\");\n        _;\n    }\n    \n    modifier onlyAuthorized() {\n        require(authorizedProviders[msg.sender], \"Not authorized: provider only\");\n        _;\n    }\n\n    struct ShipmentData {\n        uint256 shipmentId;\n        uint256 weight;\n        uint256 price;\n        uint256 batch;\n        string origin;\n        address receiver;\n        string destination;\n        string description;\n    }\n\n    struct ShipmentUpdateData {\n        ShipmentData shipment;\n        bytes32 previousBlockHash;\n        uint256 previousShipmentId;\n    }\n\n    event ShipmentCreated(\n        uint256 indexed shipmentId,\n        uint256 weight,\n        uint256 price,\n        uint256 indexed batch,\n        string origin,\n        address indexed sender,\n        address receiver,\n        string destination,\n        string description,\n        uint256 timestamp\n    );\n\n    event ShipmentUpdated(\n        uint256 indexed shipmentId,\n        uint256 weight,\n        uint256 price,\n        uint256 indexed batch,\n        string origin,\n        address indexed sender,\n        address receiver,\n        string destination,\n        string description,\n        bytes32 previousBlockHash,\n        uint256 previousShipmentId,\n        uint256 timestamp\n    );\n    \n    event ShipmentStatusChanged(\n        uint256 indexed shipmentId,\n        ShipmentStatus indexed status,\n        address indexed updatedBy,\n        uint256 timestamp\n    );\n    \n    event ProviderAuthorized(address indexed provider, uint256 timestamp);\n    event ProviderRevoked(address indexed provider, uint256 timestamp);\n\n    // Authorization management\n    function authorizeProvider(address provider) external onlyOwner {\n        require(provider != address(0), \"Invalid provider address\");\n        require(!authorizedProviders[provider], \"Provider already authorized\");\n        \n        authorizedProviders[provider] = true;\n        emit ProviderAuthorized(provider, block.timestamp);\n    }\n    \n    function revokeProvider(address provider) external onlyOwner {\n        require(provider != owner, \"Cannot revoke owner\");\n        require(authorizedProviders[provider], \"Provider not authorized\");\n        \n        authorizedProviders[provider] = false;\n        emit ProviderRevoked(provider, block.timestamp);\n    }\n\n    function createShipment(ShipmentData calldata data) external onlyAuthorized {\n        // Validation\n        require(!shipmentExists[data.shipmentId], \"Shipment ID already exists\");\n        require(data.weight > 0, \"Weight must be greater than 0\");\n        require(data.price > 0, \"Price must be greater than 0\");\n        require(bytes(data.origin).length > 0, \"Origin cannot be empty\");\n        require(bytes(data.destination).length > 0, \"Destination cannot be empty\");\n        require(data.receiver != address(0), \"Invalid receiver address\");\n        \n        // Mark shipment as existing\n        shipmentExists[data.shipmentId] = true;\n        \n        emit ShipmentCreated(\n            data.shipmentId,\n            data.weight,\n            data.price,\n            data.batch,\n            data.origin,\n            msg.sender,\n            data.receiver,\n            data.destination,\n            data.description,\n            block.timestamp\n        );\n    }\n\n    function updateShipment(ShipmentUpdateData calldata data) external onlyAuthorized {\n        // Validation\n        require(shipmentExists[data.shipment.shipmentId], \"Shipment does not exist\");\n        require(data.shipment.weight > 0, \"Weight must be greater than 0\");\n        require(data.shipment.price > 0, \"Price must be greater than 0\");\n        require(bytes(data.shipment.origin).length > 0, \"Origin cannot be empty\");\n        require(bytes(data.shipment.destination).length > 0, \"Destination cannot be empty\");\n        require(data.shipment.receiver != address(0), \"Invalid receiver address\");\n        \n        // Validate previous shipment reference if provided\n        if (data.previousShipmentId != 0) {\n            require(shipmentExists[data.previousShipmentId], \"Previous shipment does not exist\");\n        }\n        \n        emit ShipmentUpdated(\n            data.shipment.shipmentId,\n            data.shipment.weight,\n            data.shipment.price,\n            data.shipment.batch,\n            data.shipment.origin,\n            msg.sender,\n            data.shipment.receiver,\n            data.shipment.destination,\n            data.shipment.description,\n            data.previousBlockHash,\n            data.previousShipmentId,\n            block.timestamp\n        );\n    }\n    \n    function updateShipmentStatus(\n        uint256 shipmentId,\n        ShipmentStatus status\n    ) external onlyAuthorized {\n        require(shipmentExists[shipmentId], \"Shipment does not exist\");\n        \n        emit ShipmentStatusChanged(\n            shipmentId,\n            status,\n            msg.sender,\n            block.timestamp\n        );\n    }\n    \n    // Allow receivers to verify their shipments exist\n    function verifyShipment(uint256 shipmentId) external view returns (bool) {\n        return shipmentExists[shipmentId];\n    }\n    \n    // Transfer ownership\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        require(newOwner != owner, \"New owner same as current owner\");\n        \n        owner = newOwner;\n        authorizedProviders[newOwner] = true;\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","metadata","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers"],"":["ast"]}},"resolc":{"version":"latest","compilerSource":"binary","settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200}}}}},"output":{"errors":[],"version":"0.8.20","long_version":"0.8.20+commit.a1b79de6.Linux.g++","revive_version":"0.3.0+commit.ed60869.llvm-18.1.8","sources":{"contracts/LogisticsTracking.sol":{"id":0,"ast":{"absolutePath":"contracts/LogisticsTracking.sol","exportedSymbols":{"LogisticsEvents":[521]},"id":522,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"LogisticsEvents","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":521,"linearizedBaseContracts":[521],"name":"LogisticsEvents","nameLocation":"67:15:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":3,"mutability":"mutable","name":"owner","nameLocation":"104:5:0","nodeType":"VariableDeclaration","scope":521,"src":"89:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"89:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"69dc3ae2","id":7,"mutability":"mutable","name":"authorizedProviders","nameLocation":"196:19:0","nodeType":"VariableDeclaration","scope":521,"src":"164:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":6,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":4,"name":"address","nodeType":"ElementaryTypeName","src":"172:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"164:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":5,"name":"bool","nodeType":"ElementaryTypeName","src":"183:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"f83cc7e8","id":11,"mutability":"mutable","name":"shipmentExists","nameLocation":"305:14:0","nodeType":"VariableDeclaration","scope":521,"src":"273:46:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"typeName":{"id":10,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"273:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9,"name":"bool","nodeType":"ElementaryTypeName","src":"292:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"canonicalName":"LogisticsEvents.ShipmentStatus","id":16,"members":[{"id":12,"name":"Created","nameLocation":"381:7:0","nodeType":"EnumValue","src":"381:7:0"},{"id":13,"name":"InTransit","nameLocation":"390:9:0","nodeType":"EnumValue","src":"390:9:0"},{"id":14,"name":"Delivered","nameLocation":"401:9:0","nodeType":"EnumValue","src":"401:9:0"},{"id":15,"name":"Cancelled","nameLocation":"412:9:0","nodeType":"EnumValue","src":"412:9:0"}],"name":"ShipmentStatus","nameLocation":"364:14:0","nodeType":"EnumDefinition","src":"359:64:0"},{"body":{"id":31,"nodeType":"Block","src":"443:83:0","statements":[{"expression":{"id":22,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":19,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"453:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":20,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"461:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":21,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"465:6:0","memberName":"sender","nodeType":"MemberAccess","src":"461:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"453:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":23,"nodeType":"ExpressionStatement","src":"453:18:0"},{"expression":{"id":29,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":24,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"481:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":27,"indexExpression":{"expression":{"id":25,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"501:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":26,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"505:6:0","memberName":"sender","nodeType":"MemberAccess","src":"501:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"481:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":28,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"515:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"481:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":30,"nodeType":"ExpressionStatement","src":"481:38:0"}]},"id":32,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[],"src":"440:2:0"},"returnParameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"443:0:0"},"scope":521,"src":"429:97:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":43,"nodeType":"Block","src":"553:86:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":38,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":35,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"571:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"575:6:0","memberName":"sender","nodeType":"MemberAccess","src":"571:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":37,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"585:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"571:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a65643a206f776e6572206f6e6c79","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"592:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_ecad1603cb330663c05e0483c52118d1d2baa70e6422f097b6efb6e1f7939ab3","typeString":"literal_string \"Not authorized: owner only\""},"value":"Not authorized: owner only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ecad1603cb330663c05e0483c52118d1d2baa70e6422f097b6efb6e1f7939ab3","typeString":"literal_string \"Not authorized: owner only\""}],"id":34,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"563:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":40,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"563:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":41,"nodeType":"ExpressionStatement","src":"563:58:0"},{"id":42,"nodeType":"PlaceholderStatement","src":"631:1:0"}]},"id":44,"name":"onlyOwner","nameLocation":"541:9:0","nodeType":"ModifierDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"550:2:0"},"src":"532:107:0","virtual":false,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"675:101:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":47,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"693:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":50,"indexExpression":{"expression":{"id":48,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"713:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"717:6:0","memberName":"sender","nodeType":"MemberAccess","src":"713:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"693:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a65643a2070726f7669646572206f6e6c79","id":51,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"726:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_7fd4aec67b5b3e0bb1e415a1fa7cd60a1b19624d22abb2f507f0b20d67ed879e","typeString":"literal_string \"Not authorized: provider only\""},"value":"Not authorized: provider only"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7fd4aec67b5b3e0bb1e415a1fa7cd60a1b19624d22abb2f507f0b20d67ed879e","typeString":"literal_string \"Not authorized: provider only\""}],"id":46,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"685:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"685:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":53,"nodeType":"ExpressionStatement","src":"685:73:0"},{"id":54,"nodeType":"PlaceholderStatement","src":"768:1:0"}]},"id":56,"name":"onlyAuthorized","nameLocation":"658:14:0","nodeType":"ModifierDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"672:2:0"},"src":"649:127:0","virtual":false,"visibility":"internal"},{"canonicalName":"LogisticsEvents.ShipmentData","id":73,"members":[{"constant":false,"id":58,"mutability":"mutable","name":"shipmentId","nameLocation":"820:10:0","nodeType":"VariableDeclaration","scope":73,"src":"812:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":57,"name":"uint256","nodeType":"ElementaryTypeName","src":"812:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"weight","nameLocation":"848:6:0","nodeType":"VariableDeclaration","scope":73,"src":"840:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":62,"mutability":"mutable","name":"price","nameLocation":"872:5:0","nodeType":"VariableDeclaration","scope":73,"src":"864:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":61,"name":"uint256","nodeType":"ElementaryTypeName","src":"864:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":64,"mutability":"mutable","name":"batch","nameLocation":"895:5:0","nodeType":"VariableDeclaration","scope":73,"src":"887:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63,"name":"uint256","nodeType":"ElementaryTypeName","src":"887:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"mutability":"mutable","name":"origin","nameLocation":"917:6:0","nodeType":"VariableDeclaration","scope":73,"src":"910:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":65,"name":"string","nodeType":"ElementaryTypeName","src":"910:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"receiver","nameLocation":"941:8:0","nodeType":"VariableDeclaration","scope":73,"src":"933:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":70,"mutability":"mutable","name":"destination","nameLocation":"966:11:0","nodeType":"VariableDeclaration","scope":73,"src":"959:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":69,"name":"string","nodeType":"ElementaryTypeName","src":"959:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":72,"mutability":"mutable","name":"description","nameLocation":"994:11:0","nodeType":"VariableDeclaration","scope":73,"src":"987:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":71,"name":"string","nodeType":"ElementaryTypeName","src":"987:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ShipmentData","nameLocation":"789:12:0","nodeType":"StructDefinition","scope":521,"src":"782:230:0","visibility":"public"},{"canonicalName":"LogisticsEvents.ShipmentUpdateData","id":81,"members":[{"constant":false,"id":76,"mutability":"mutable","name":"shipment","nameLocation":"1067:8:0","nodeType":"VariableDeclaration","scope":81,"src":"1054:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_storage_ptr","typeString":"struct LogisticsEvents.ShipmentData"},"typeName":{"id":75,"nodeType":"UserDefinedTypeName","pathNode":{"id":74,"name":"ShipmentData","nameLocations":["1054:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":73,"src":"1054:12:0"},"referencedDeclaration":73,"src":"1054:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_storage_ptr","typeString":"struct LogisticsEvents.ShipmentData"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"previousBlockHash","nameLocation":"1093:17:0","nodeType":"VariableDeclaration","scope":81,"src":"1085:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":77,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1085:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":80,"mutability":"mutable","name":"previousShipmentId","nameLocation":"1128:18:0","nodeType":"VariableDeclaration","scope":81,"src":"1120:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":79,"name":"uint256","nodeType":"ElementaryTypeName","src":"1120:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ShipmentUpdateData","nameLocation":"1025:18:0","nodeType":"StructDefinition","scope":521,"src":"1018:135:0","visibility":"public"},{"anonymous":false,"eventSelector":"2e67bb7b05c9edf169046c89c5dc056b899ccb504aa01d02ac5008aa405e9302","id":103,"name":"ShipmentCreated","nameLocation":"1165:15:0","nodeType":"EventDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"indexed":true,"mutability":"mutable","name":"shipmentId","nameLocation":"1206:10:0","nodeType":"VariableDeclaration","scope":103,"src":"1190:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"1190:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1234:6:0","nodeType":"VariableDeclaration","scope":103,"src":"1226:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"1226:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1258:5:0","nodeType":"VariableDeclaration","scope":103,"src":"1250:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":86,"name":"uint256","nodeType":"ElementaryTypeName","src":"1250:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":true,"mutability":"mutable","name":"batch","nameLocation":"1289:5:0","nodeType":"VariableDeclaration","scope":103,"src":"1273:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":88,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":91,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"1311:6:0","nodeType":"VariableDeclaration","scope":103,"src":"1304:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":90,"name":"string","nodeType":"ElementaryTypeName","src":"1304:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":93,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1343:6:0","nodeType":"VariableDeclaration","scope":103,"src":"1327:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":92,"name":"address","nodeType":"ElementaryTypeName","src":"1327:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":95,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1367:8:0","nodeType":"VariableDeclaration","scope":103,"src":"1359:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":94,"name":"address","nodeType":"ElementaryTypeName","src":"1359:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":97,"indexed":false,"mutability":"mutable","name":"destination","nameLocation":"1392:11:0","nodeType":"VariableDeclaration","scope":103,"src":"1385:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":96,"name":"string","nodeType":"ElementaryTypeName","src":"1385:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":99,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1420:11:0","nodeType":"VariableDeclaration","scope":103,"src":"1413:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":98,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":101,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1449:9:0","nodeType":"VariableDeclaration","scope":103,"src":"1441:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1441:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1180:284:0"},"src":"1159:306:0"},{"anonymous":false,"eventSelector":"9f42ef51a9f3d588bcdf47445030f8bb28bbd1d52ca38d40ae3650052998fec9","id":129,"name":"ShipmentUpdated","nameLocation":"1477:15:0","nodeType":"EventDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"indexed":true,"mutability":"mutable","name":"shipmentId","nameLocation":"1518:10:0","nodeType":"VariableDeclaration","scope":129,"src":"1502:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"1502:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1546:6:0","nodeType":"VariableDeclaration","scope":129,"src":"1538:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":106,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":109,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1570:5:0","nodeType":"VariableDeclaration","scope":129,"src":"1562:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":108,"name":"uint256","nodeType":"ElementaryTypeName","src":"1562:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":111,"indexed":true,"mutability":"mutable","name":"batch","nameLocation":"1601:5:0","nodeType":"VariableDeclaration","scope":129,"src":"1585:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":110,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":113,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"1623:6:0","nodeType":"VariableDeclaration","scope":129,"src":"1616:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":112,"name":"string","nodeType":"ElementaryTypeName","src":"1616:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":115,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1655:6:0","nodeType":"VariableDeclaration","scope":129,"src":"1639:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":114,"name":"address","nodeType":"ElementaryTypeName","src":"1639:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":117,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1679:8:0","nodeType":"VariableDeclaration","scope":129,"src":"1671:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":116,"name":"address","nodeType":"ElementaryTypeName","src":"1671:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":119,"indexed":false,"mutability":"mutable","name":"destination","nameLocation":"1704:11:0","nodeType":"VariableDeclaration","scope":129,"src":"1697:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":118,"name":"string","nodeType":"ElementaryTypeName","src":"1697:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1732:11:0","nodeType":"VariableDeclaration","scope":129,"src":"1725:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":120,"name":"string","nodeType":"ElementaryTypeName","src":"1725:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":123,"indexed":false,"mutability":"mutable","name":"previousBlockHash","nameLocation":"1761:17:0","nodeType":"VariableDeclaration","scope":129,"src":"1753:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1753:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":125,"indexed":false,"mutability":"mutable","name":"previousShipmentId","nameLocation":"1796:18:0","nodeType":"VariableDeclaration","scope":129,"src":"1788:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1788:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":127,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1832:9:0","nodeType":"VariableDeclaration","scope":129,"src":"1824:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1824:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1492:355:0"},"src":"1471:377:0"},{"anonymous":false,"eventSelector":"f3d2211e54c75402b7f1a202586b4922f05c5191a3eaa61196354a280105b0ad","id":140,"name":"ShipmentStatusChanged","nameLocation":"1864:21:0","nodeType":"EventDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":131,"indexed":true,"mutability":"mutable","name":"shipmentId","nameLocation":"1911:10:0","nodeType":"VariableDeclaration","scope":140,"src":"1895:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1895:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":134,"indexed":true,"mutability":"mutable","name":"status","nameLocation":"1954:6:0","nodeType":"VariableDeclaration","scope":140,"src":"1931:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ShipmentStatus_$16","typeString":"enum LogisticsEvents.ShipmentStatus"},"typeName":{"id":133,"nodeType":"UserDefinedTypeName","pathNode":{"id":132,"name":"ShipmentStatus","nameLocations":["1931:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":16,"src":"1931:14:0"},"referencedDeclaration":16,"src":"1931:14:0","typeDescriptions":{"typeIdentifier":"t_enum$_ShipmentStatus_$16","typeString":"enum LogisticsEvents.ShipmentStatus"}},"visibility":"internal"},{"constant":false,"id":136,"indexed":true,"mutability":"mutable","name":"updatedBy","nameLocation":"1986:9:0","nodeType":"VariableDeclaration","scope":140,"src":"1970:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":135,"name":"address","nodeType":"ElementaryTypeName","src":"1970:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":138,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2013:9:0","nodeType":"VariableDeclaration","scope":140,"src":"2005:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":137,"name":"uint256","nodeType":"ElementaryTypeName","src":"2005:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1885:143:0"},"src":"1858:171:0"},{"anonymous":false,"eventSelector":"5ee18bb17d127d4409f69ab086fffad6d93acf3010f7a646b731b79ada5d2cdf","id":146,"name":"ProviderAuthorized","nameLocation":"2045:18:0","nodeType":"EventDefinition","parameters":{"id":145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"2080:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2064:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"2064:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2098:9:0","nodeType":"VariableDeclaration","scope":146,"src":"2090:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2063:45:0"},"src":"2039:70:0"},{"anonymous":false,"eventSelector":"9bb673ad8a87cc3127dff95aacd54437e94c3262aca5f99a5ddc8a0e9ac71b19","id":152,"name":"ProviderRevoked","nameLocation":"2120:15:0","nodeType":"EventDefinition","parameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"indexed":true,"mutability":"mutable","name":"provider","nameLocation":"2152:8:0","nodeType":"VariableDeclaration","scope":152,"src":"2136:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":147,"name":"address","nodeType":"ElementaryTypeName","src":"2136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":150,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2170:9:0","nodeType":"VariableDeclaration","scope":152,"src":"2162:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2135:45:0"},"src":"2114:67:0"},{"body":{"id":189,"nodeType":"Block","src":"2283:271:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":160,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2301:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2321:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2313:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"2313:7:0","typeDescriptions":{}}},"id":164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2301:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642070726f76696465722061646472657373","id":166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2325:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_4bcfdad90cbd61c8c5caa292df03d86574ade1e344f67f3d41fe4d00b98774fc","typeString":"literal_string \"Invalid provider address\""},"value":"Invalid provider address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4bcfdad90cbd61c8c5caa292df03d86574ade1e344f67f3d41fe4d00b98774fc","typeString":"literal_string \"Invalid provider address\""}],"id":159,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2293:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:59:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"2293:59:0"},{"expression":{"arguments":[{"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2370:30:0","subExpression":{"baseExpression":{"id":170,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2371:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":172,"indexExpression":{"id":171,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2391:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2371:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f766964657220616c726561647920617574686f72697a6564","id":174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2402:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a","typeString":"literal_string \"Provider already authorized\""},"value":"Provider already authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a","typeString":"literal_string \"Provider already authorized\""}],"id":169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2362:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2362:70:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":176,"nodeType":"ExpressionStatement","src":"2362:70:0"},{"expression":{"id":181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":177,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2451:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":179,"indexExpression":{"id":178,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2471:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2451:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2483:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2451:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":182,"nodeType":"ExpressionStatement","src":"2451:36:0"},{"eventCall":{"arguments":[{"id":184,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":154,"src":"2521:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2531:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2537:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"2531:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":183,"name":"ProviderAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2502:18:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2502:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"EmitStatement","src":"2497:50:0"}]},"functionSelector":"112ea262","id":190,"implemented":true,"kind":"function","modifiers":[{"id":157,"kind":"modifierInvocation","modifierName":{"id":156,"name":"onlyOwner","nameLocations":["2273:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":44,"src":"2273:9:0"},"nodeType":"ModifierInvocation","src":"2273:9:0"}],"name":"authorizeProvider","nameLocation":"2228:17:0","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"provider","nameLocation":"2254:8:0","nodeType":"VariableDeclaration","scope":190,"src":"2246:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":153,"name":"address","nodeType":"ElementaryTypeName","src":"2246:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2245:18:0"},"returnParameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2283:0:0"},"scope":521,"src":"2219:335:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":223,"nodeType":"Block","src":"2625:254:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":198,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2643:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":199,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"2655:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2643:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207265766f6b65206f776e6572","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2662:21:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_8c3d573cf77ce63447440ddf3121120e5a09006d9547e99aaef8a42e7ebeedda","typeString":"literal_string \"Cannot revoke owner\""},"value":"Cannot revoke owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8c3d573cf77ce63447440ddf3121120e5a09006d9547e99aaef8a42e7ebeedda","typeString":"literal_string \"Cannot revoke owner\""}],"id":197,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2635:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:49:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":203,"nodeType":"ExpressionStatement","src":"2635:49:0"},{"expression":{"arguments":[{"baseExpression":{"id":205,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2702:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":207,"indexExpression":{"id":206,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2722:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2702:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726f7669646572206e6f7420617574686f72697a6564","id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2733:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c","typeString":"literal_string \"Provider not authorized\""},"value":"Provider not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c","typeString":"literal_string \"Provider not authorized\""}],"id":204,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2694:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:65:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":210,"nodeType":"ExpressionStatement","src":"2694:65:0"},{"expression":{"id":215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":211,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2778:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":213,"indexExpression":{"id":212,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2798:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2778:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2810:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2778:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":216,"nodeType":"ExpressionStatement","src":"2778:37:0"},{"eventCall":{"arguments":[{"id":218,"name":"provider","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"2846:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":219,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2856:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2862:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"2856:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":217,"name":"ProviderRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":152,"src":"2830:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2830:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":222,"nodeType":"EmitStatement","src":"2825:47:0"}]},"functionSelector":"ac1e8b8e","id":224,"implemented":true,"kind":"function","modifiers":[{"id":195,"kind":"modifierInvocation","modifierName":{"id":194,"name":"onlyOwner","nameLocations":["2615:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":44,"src":"2615:9:0"},"nodeType":"ModifierInvocation","src":"2615:9:0"}],"name":"revokeProvider","nameLocation":"2573:14:0","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"provider","nameLocation":"2596:8:0","nodeType":"VariableDeclaration","scope":224,"src":"2588:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"2588:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2587:18:0"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[],"src":"2625:0:0"},"scope":521,"src":"2564:315:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":322,"nodeType":"Block","src":"2961:884:0","statements":[{"expression":{"arguments":[{"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3001:32:0","subExpression":{"baseExpression":{"id":233,"name":"shipmentExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3002:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":236,"indexExpression":{"expression":{"id":234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3017:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3022:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3017:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3002:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536869706d656e7420494420616c726561647920657869737473","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3035:28:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f09038f29754b987ab4210eb7aa6e17aa7381c8c592648233edeebcc5662710","typeString":"literal_string \"Shipment ID already exists\""},"value":"Shipment ID already exists"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f09038f29754b987ab4210eb7aa6e17aa7381c8c592648233edeebcc5662710","typeString":"literal_string \"Shipment ID already exists\""}],"id":232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2993:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2993:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":240,"nodeType":"ExpressionStatement","src":"2993:71:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":242,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3082:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:6:0","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":60,"src":"3082:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3096:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3082:15:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576569676874206d7573742062652067726561746572207468616e2030","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3099:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""},"value":"Weight must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""}],"id":241,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3074:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3074:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"ExpressionStatement","src":"3074:57:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":250,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3149:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3154:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":62,"src":"3149:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3162:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3149:14:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d7573742062652067726561746572207468616e2030","id":254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3165:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""},"value":"Price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""}],"id":249,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3141:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3141:55:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":256,"nodeType":"ExpressionStatement","src":"3141:55:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":260,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3220:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3225:6:0","memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":66,"src":"3220:11:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3214:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":258,"name":"bytes","nodeType":"ElementaryTypeName","src":"3214:5:0","typeDescriptions":{}}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3214:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3233:6:0","memberName":"length","nodeType":"MemberAccess","src":"3214:25:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3242:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3214:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726967696e2063616e6e6f7420626520656d707479","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3245:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_810c256df7e5d41acbd662e3c3b0be249f9bd6cf5f43ceb24d1d9f9faad3dc2a","typeString":"literal_string \"Origin cannot be empty\""},"value":"Origin cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_810c256df7e5d41acbd662e3c3b0be249f9bd6cf5f43ceb24d1d9f9faad3dc2a","typeString":"literal_string \"Origin cannot be empty\""}],"id":257,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3206:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3206:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":268,"nodeType":"ExpressionStatement","src":"3206:64:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":272,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3294:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3299:11:0","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3294:16:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3288:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":270,"name":"bytes","nodeType":"ElementaryTypeName","src":"3288:5:0","typeDescriptions":{}}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3288:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3312:6:0","memberName":"length","nodeType":"MemberAccess","src":"3288:30:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3321:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3288:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44657374696e6174696f6e2063616e6e6f7420626520656d707479","id":278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3324:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_96b7ffd9f4a0568ea5d3aefc350b7024b7728126f81d958b94206b6710063c4a","typeString":"literal_string \"Destination cannot be empty\""},"value":"Destination cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96b7ffd9f4a0568ea5d3aefc350b7024b7728126f81d958b94206b6710063c4a","typeString":"literal_string \"Destination cannot be empty\""}],"id":269,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3280:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3280:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":280,"nodeType":"ExpressionStatement","src":"3280:74:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":282,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3372:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3377:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":68,"src":"3372:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3389:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"3389:7:0","typeDescriptions":{}}},"id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3389:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3372:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072656365697665722061646472657373","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3401:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef","typeString":"literal_string \"Invalid receiver address\""},"value":"Invalid receiver address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef","typeString":"literal_string \"Invalid receiver address\""}],"id":281,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3364:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3364:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":291,"nodeType":"ExpressionStatement","src":"3364:64:0"},{"expression":{"id":297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":292,"name":"shipmentExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3484:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":295,"indexExpression":{"expression":{"id":293,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3499:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3504:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3499:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3484:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3518:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3484:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":298,"nodeType":"ExpressionStatement","src":"3484:38:0"},{"eventCall":{"arguments":[{"expression":{"id":300,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3575:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3580:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3575:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":302,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3604:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3609:6:0","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":60,"src":"3604:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":304,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3629:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3634:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":62,"src":"3629:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":306,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3653:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3658:5:0","memberName":"batch","nodeType":"MemberAccess","referencedDeclaration":64,"src":"3653:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":308,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3677:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3682:6:0","memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":66,"src":"3677:11:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":310,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3702:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3706:6:0","memberName":"sender","nodeType":"MemberAccess","src":"3702:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":312,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3726:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3731:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":68,"src":"3726:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":314,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3753:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3758:11:0","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":70,"src":"3753:16:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":316,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"3783:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3788:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":72,"src":"3783:16:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":318,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3813:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3819:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"3813:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":299,"name":"ShipmentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"3546:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,string memory,address,address,string memory,string memory,uint256)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3546:292:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":321,"nodeType":"EmitStatement","src":"3541:297:0"}]},"functionSelector":"16f7af7c","id":323,"implemented":true,"kind":"function","modifiers":[{"id":230,"kind":"modifierInvocation","modifierName":{"id":229,"name":"onlyAuthorized","nameLocations":["2946:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":56,"src":"2946:14:0"},"nodeType":"ModifierInvocation","src":"2946:14:0"}],"name":"createShipment","nameLocation":"2894:14:0","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"data","nameLocation":"2931:4:0","nodeType":"VariableDeclaration","scope":323,"src":"2909:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData"},"typeName":{"id":226,"nodeType":"UserDefinedTypeName","pathNode":{"id":225,"name":"ShipmentData","nameLocations":["2909:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":73,"src":"2909:12:0"},"referencedDeclaration":73,"src":"2909:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_storage_ptr","typeString":"struct LogisticsEvents.ShipmentData"}},"visibility":"internal"}],"src":"2908:28:0"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[],"src":"2961:0:0"},"scope":521,"src":"2885:960:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":445,"nodeType":"Block","src":"3933:1206:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":332,"name":"shipmentExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"3973:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":336,"indexExpression":{"expression":{"expression":{"id":333,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"3988:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3993:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"3988:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4002:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":58,"src":"3988:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3973:40:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536869706d656e7420646f6573206e6f74206578697374","id":337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4015:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb5218df5dd7db3ac2aac417080e190057695f40bdda51ddfcd066711ae63918","typeString":"literal_string \"Shipment does not exist\""},"value":"Shipment does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb5218df5dd7db3ac2aac417080e190057695f40bdda51ddfcd066711ae63918","typeString":"literal_string \"Shipment does not exist\""}],"id":331,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3965:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3965:76:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":339,"nodeType":"ExpressionStatement","src":"3965:76:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":341,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4059:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4064:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4059:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4073:6:0","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":60,"src":"4059:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4082:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4059:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576569676874206d7573742062652067726561746572207468616e2030","id":346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4085:31:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""},"value":"Weight must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588","typeString":"literal_string \"Weight must be greater than 0\""}],"id":340,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4051:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4051:66:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"4051:66:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4135:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4140:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4135:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4149:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4135:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4157:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4135:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5072696365206d7573742062652067726561746572207468616e2030","id":355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4160:30:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""},"value":"Price must be greater than 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde","typeString":"literal_string \"Price must be greater than 0\""}],"id":349,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4127:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4127:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":357,"nodeType":"ExpressionStatement","src":"4127:64:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"expression":{"id":361,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4215:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4220:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4215:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4229:6:0","memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":66,"src":"4215:20:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4209:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":359,"name":"bytes","nodeType":"ElementaryTypeName","src":"4209:5:0","typeDescriptions":{}}},"id":364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4209:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4237:6:0","memberName":"length","nodeType":"MemberAccess","src":"4209:34:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4209:38:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f726967696e2063616e6e6f7420626520656d707479","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4249:24:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_810c256df7e5d41acbd662e3c3b0be249f9bd6cf5f43ceb24d1d9f9faad3dc2a","typeString":"literal_string \"Origin cannot be empty\""},"value":"Origin cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_810c256df7e5d41acbd662e3c3b0be249f9bd6cf5f43ceb24d1d9f9faad3dc2a","typeString":"literal_string \"Origin cannot be empty\""}],"id":358,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4201:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4201:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"4201:73:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"expression":{"id":374,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4298:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4303:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4298:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4312:11:0","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4298:25:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4292:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":372,"name":"bytes","nodeType":"ElementaryTypeName","src":"4292:5:0","typeDescriptions":{}}},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4325:6:0","memberName":"length","nodeType":"MemberAccess","src":"4292:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4334:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4292:43:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"44657374696e6174696f6e2063616e6e6f7420626520656d707479","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4337:29:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_96b7ffd9f4a0568ea5d3aefc350b7024b7728126f81d958b94206b6710063c4a","typeString":"literal_string \"Destination cannot be empty\""},"value":"Destination cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96b7ffd9f4a0568ea5d3aefc350b7024b7728126f81d958b94206b6710063c4a","typeString":"literal_string \"Destination cannot be empty\""}],"id":371,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4284:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4284:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":383,"nodeType":"ExpressionStatement","src":"4284:83:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":385,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4385:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4385:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4399:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":68,"src":"4385:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4419:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4411:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"4411:7:0","typeDescriptions":{}}},"id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4411:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4385:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642072656365697665722061646472657373","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4423:26:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef","typeString":"literal_string \"Invalid receiver address\""},"value":"Invalid receiver address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5cbb24ca678c0bc148b6d1d734942e230f1d3686258ae74c758d5ae27e1715ef","typeString":"literal_string \"Invalid receiver address\""}],"id":384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4377:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4377:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"4377:73:0"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":396,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4533:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4538:18:0","memberName":"previousShipmentId","nodeType":"MemberAccess","referencedDeclaration":80,"src":"4533:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4560:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4533:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":409,"nodeType":"IfStatement","src":"4529:143:0","trueBody":{"id":408,"nodeType":"Block","src":"4563:109:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":401,"name":"shipmentExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"4585:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":404,"indexExpression":{"expression":{"id":402,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4600:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4605:18:0","memberName":"previousShipmentId","nodeType":"MemberAccess","referencedDeclaration":80,"src":"4600:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4585:39:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"50726576696f757320736869706d656e7420646f6573206e6f74206578697374","id":405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4626:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_c284b93911a33adc7f30830d0c2507fbec2c353ecb0f0a4bf38dcfe10953f965","typeString":"literal_string \"Previous shipment does not exist\""},"value":"Previous shipment does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c284b93911a33adc7f30830d0c2507fbec2c353ecb0f0a4bf38dcfe10953f965","typeString":"literal_string \"Previous shipment does not exist\""}],"id":400,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4577:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4577:84:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":407,"nodeType":"ExpressionStatement","src":"4577:84:0"}]}},{"eventCall":{"arguments":[{"expression":{"expression":{"id":411,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4724:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4729:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4724:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4738:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":58,"src":"4724:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":414,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4762:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4767:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4762:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4776:6:0","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":60,"src":"4762:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":417,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4796:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4801:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4796:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4810:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":62,"src":"4796:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":420,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4829:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4834:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4829:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4843:5:0","memberName":"batch","nodeType":"MemberAccess","referencedDeclaration":64,"src":"4829:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":423,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4862:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4867:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4862:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4876:6:0","memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":66,"src":"4862:20:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":426,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:6:0","memberName":"sender","nodeType":"MemberAccess","src":"4896:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":428,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4920:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4925:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4920:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4934:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":68,"src":"4920:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":431,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4956:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4961:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4956:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4970:11:0","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":70,"src":"4956:25:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"expression":{"id":434,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"4995:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5000:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":76,"src":"4995:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$73_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5009:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":72,"src":"4995:25:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":437,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5034:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5039:17:0","memberName":"previousBlockHash","nodeType":"MemberAccess","referencedDeclaration":78,"src":"5034:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":439,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5070:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:18:0","memberName":"previousShipmentId","nodeType":"MemberAccess","referencedDeclaration":80,"src":"5070:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":441,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5107:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5113:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"5107:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":410,"name":"ShipmentUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4695:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,string memory,address,address,string memory,string memory,bytes32,uint256,uint256)"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4695:437:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"EmitStatement","src":"4690:442:0"}]},"functionSelector":"11d48f8c","id":446,"implemented":true,"kind":"function","modifiers":[{"id":329,"kind":"modifierInvocation","modifierName":{"id":328,"name":"onlyAuthorized","nameLocations":["3918:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":56,"src":"3918:14:0"},"nodeType":"ModifierInvocation","src":"3918:14:0"}],"name":"updateShipment","nameLocation":"3860:14:0","nodeType":"FunctionDefinition","parameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"data","nameLocation":"3903:4:0","nodeType":"VariableDeclaration","scope":446,"src":"3875:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData"},"typeName":{"id":325,"nodeType":"UserDefinedTypeName","pathNode":{"id":324,"name":"ShipmentUpdateData","nameLocations":["3875:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":81,"src":"3875:18:0"},"referencedDeclaration":81,"src":"3875:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$81_storage_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData"}},"visibility":"internal"}],"src":"3874:34:0"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"3933:0:0"},"scope":521,"src":"3851:1288:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":472,"nodeType":"Block","src":"5268:231:0","statements":[{"expression":{"arguments":[{"baseExpression":{"id":457,"name":"shipmentExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"5286:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":459,"indexExpression":{"id":458,"name":"shipmentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5301:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5286:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536869706d656e7420646f6573206e6f74206578697374","id":460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5314:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb5218df5dd7db3ac2aac417080e190057695f40bdda51ddfcd066711ae63918","typeString":"literal_string \"Shipment does not exist\""},"value":"Shipment does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb5218df5dd7db3ac2aac417080e190057695f40bdda51ddfcd066711ae63918","typeString":"literal_string \"Shipment does not exist\""}],"id":456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5278:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5278:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":462,"nodeType":"ExpressionStatement","src":"5278:62:0"},{"eventCall":{"arguments":[{"id":464,"name":"shipmentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"5399:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":465,"name":"status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5423:6:0","typeDescriptions":{"typeIdentifier":"t_enum$_ShipmentStatus_$16","typeString":"enum LogisticsEvents.ShipmentStatus"}},{"expression":{"id":466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5443:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5447:6:0","memberName":"sender","nodeType":"MemberAccess","src":"5443:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":468,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5467:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5473:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"5467:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_ShipmentStatus_$16","typeString":"enum LogisticsEvents.ShipmentStatus"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":463,"name":"ShipmentStatusChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":140,"src":"5364:21:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_ShipmentStatus_$16_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,enum LogisticsEvents.ShipmentStatus,address,uint256)"}},"id":470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5364:128:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":471,"nodeType":"EmitStatement","src":"5359:133:0"}]},"functionSelector":"7defa920","id":473,"implemented":true,"kind":"function","modifiers":[{"id":454,"kind":"modifierInvocation","modifierName":{"id":453,"name":"onlyAuthorized","nameLocations":["5253:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":56,"src":"5253:14:0"},"nodeType":"ModifierInvocation","src":"5253:14:0"}],"name":"updateShipmentStatus","nameLocation":"5158:20:0","nodeType":"FunctionDefinition","parameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"shipmentId","nameLocation":"5196:10:0","nodeType":"VariableDeclaration","scope":473,"src":"5188:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5188:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":451,"mutability":"mutable","name":"status","nameLocation":"5231:6:0","nodeType":"VariableDeclaration","scope":473,"src":"5216:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ShipmentStatus_$16","typeString":"enum LogisticsEvents.ShipmentStatus"},"typeName":{"id":450,"nodeType":"UserDefinedTypeName","pathNode":{"id":449,"name":"ShipmentStatus","nameLocations":["5216:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":16,"src":"5216:14:0"},"referencedDeclaration":16,"src":"5216:14:0","typeDescriptions":{"typeIdentifier":"t_enum$_ShipmentStatus_$16","typeString":"enum LogisticsEvents.ShipmentStatus"}},"visibility":"internal"}],"src":"5178:65:0"},"returnParameters":{"id":455,"nodeType":"ParameterList","parameters":[],"src":"5268:0:0"},"scope":521,"src":"5149:350:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":484,"nodeType":"Block","src":"5637:50:0","statements":[{"expression":{"baseExpression":{"id":480,"name":"shipmentExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11,"src":"5654:14:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":482,"indexExpression":{"id":481,"name":"shipmentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":475,"src":"5669:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5654:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":479,"id":483,"nodeType":"Return","src":"5647:33:0"}]},"functionSelector":"92d15fc4","id":485,"implemented":true,"kind":"function","modifiers":[],"name":"verifyShipment","nameLocation":"5573:14:0","nodeType":"FunctionDefinition","parameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"shipmentId","nameLocation":"5596:10:0","nodeType":"VariableDeclaration","scope":485,"src":"5588:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"5588:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5587:20:0"},"returnParameters":{"id":479,"nodeType":"ParameterList","parameters":[{"constant":false,"id":478,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":485,"src":"5631:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":477,"name":"bool","nodeType":"ElementaryTypeName","src":"5631:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5630:6:0"},"scope":521,"src":"5564:123:0","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":519,"nodeType":"Block","src":"5787:229:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":493,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5805:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5825:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5817:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"5817:7:0","typeDescriptions":{}}},"id":497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5805:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206e6577206f776e65722061646472657373","id":499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5829:27:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","typeString":"literal_string \"Invalid new owner address\""},"value":"Invalid new owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222","typeString":"literal_string \"Invalid new owner address\""}],"id":492,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5797:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5797:60:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":501,"nodeType":"ExpressionStatement","src":"5797:60:0"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":503,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5875:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":504,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"5887:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5875:17:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6577206f776e65722073616d652061732063757272656e74206f776e6572","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5894:33:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_a01151ef9aa8ef4dddb4d65515066a9556f1a2df65d39f7f711f7781e25c113a","typeString":"literal_string \"New owner same as current owner\""},"value":"New owner same as current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a01151ef9aa8ef4dddb4d65515066a9556f1a2df65d39f7f711f7781e25c113a","typeString":"literal_string \"New owner same as current owner\""}],"id":502,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5867:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5867:61:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"5867:61:0"},{"expression":{"id":511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":509,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"5947:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":510,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5955:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5947:16:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":512,"nodeType":"ExpressionStatement","src":"5947:16:0"},{"expression":{"id":517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":513,"name":"authorizedProviders","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"5973:19:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":515,"indexExpression":{"id":514,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"5993:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5973:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6005:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5973:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":518,"nodeType":"ExpressionStatement","src":"5973:36:0"}]},"functionSelector":"f2fde38b","id":520,"implemented":true,"kind":"function","modifiers":[{"id":490,"kind":"modifierInvocation","modifierName":{"id":489,"name":"onlyOwner","nameLocations":["5777:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":44,"src":"5777:9:0"},"nodeType":"ModifierInvocation","src":"5777:9:0"}],"name":"transferOwnership","nameLocation":"5732:17:0","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"newOwner","nameLocation":"5758:8:0","nodeType":"VariableDeclaration","scope":520,"src":"5750:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"5750:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5749:18:0"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"5787:0:0"},"scope":521,"src":"5723:293:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":522,"src":"58:5960:0","usedErrors":[],"usedEvents":[103,129,140,146,152]}],"src":"32:5987:0"}}},"contracts":{"contracts/LogisticsTracking.sol":{"LogisticsEvents":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ProviderAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"provider","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ProviderRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"shipmentId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batch","type":"uint256"},{"indexed":false,"internalType":"string","name":"origin","type":"string"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"string","name":"destination","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShipmentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"shipmentId","type":"uint256"},{"indexed":true,"internalType":"enum LogisticsEvents.ShipmentStatus","name":"status","type":"uint8"},{"indexed":true,"internalType":"address","name":"updatedBy","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShipmentStatusChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"shipmentId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batch","type":"uint256"},{"indexed":false,"internalType":"string","name":"origin","type":"string"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"string","name":"destination","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"bytes32","name":"previousBlockHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"previousShipmentId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShipmentUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"authorizeProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedProviders","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"shipmentId","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"batch","type":"uint256"},{"internalType":"string","name":"origin","type":"string"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"string","name":"destination","type":"string"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct LogisticsEvents.ShipmentData","name":"data","type":"tuple"}],"name":"createShipment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"provider","type":"address"}],"name":"revokeProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"shipmentExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"uint256","name":"shipmentId","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"batch","type":"uint256"},{"internalType":"string","name":"origin","type":"string"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"string","name":"destination","type":"string"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct LogisticsEvents.ShipmentData","name":"shipment","type":"tuple"},{"internalType":"bytes32","name":"previousBlockHash","type":"bytes32"},{"internalType":"uint256","name":"previousShipmentId","type":"uint256"}],"internalType":"struct LogisticsEvents.ShipmentUpdateData","name":"data","type":"tuple"}],"name":"updateShipment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shipmentId","type":"uint256"},{"internalType":"enum LogisticsEvents.ShipmentStatus","name":"status","type":"uint8"}],"name":"updateShipmentStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"shipmentId","type":"uint256"}],"name":"verifyShipment","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.3.0+commit.ed60869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProviderAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProviderRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShipmentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum LogisticsEvents.ShipmentStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"updatedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShipmentStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"previousBlockHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousShipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShipmentUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"authorizeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedProviders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.ShipmentData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"createShipment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"revokeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"shipmentExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.ShipmentData\",\"name\":\"shipment\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"previousBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"previousShipmentId\",\"type\":\"uint256\"}],\"internalType\":\"struct LogisticsEvents.ShipmentUpdateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"updateShipment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"internalType\":\"enum LogisticsEvents.ShipmentStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"updateShipmentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"}],\"name\":\"verifyShipment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LogisticsTracking.sol\":\"LogisticsEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LogisticsTracking.sol\":{\"keccak256\":\"0x4fee6a5b86fc2ddf264f53ce377760756e0d79ee26d2bfd412a5e87a39275bab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e44b6983ca2df08094d24f68c90200005a6bd1e4dbdb2ff79e673fb518dd571\",\"dweb:/ipfs/QmdnEsGrW5icbc5LWTYoTnJ7SK5WRsoi14W9GwjN7DhNqT\"]}},\"version\":1}","solc_version":"0.8.20+commit.a1b79de6.Linux.g++"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 536/66128 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 6557\n// Code size = 23650 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20220]\n     5: jump @42 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30250\n    14: i32 a0 = a0 + 0\n    16: ecalli 9 // 'set_immutable_data'\n    18: jump @42\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @13\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @13\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 5 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 10 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 (gas: 24)\n   811: sp = sp + 0xffffffffffffff60\n   815: u64 [sp + 0x98] = ra\n   819: u64 [sp + 0x90] = s0\n   823: u64 [sp + 0x88] = s1\n   827: s0 = sp + 0xa0\n   831: sp = sp & 0xffffffffffffffe0\n   834: a4 = u64 [a3]\n   836: u64 [sp + 0x38] = a4\n   839: a4 = u64 [a3 + 0x8]\n   842: u64 [sp + 0x30] = a4\n   845: a4 = u64 [a3 + 0x10]\n   848: u64 [sp + 0x28] = a4\n   851: a3 = u64 [a3 + 0x18]\n   854: u64 [sp + 0x20] = a3\n   857: a3 = u64 [a2]\n   859: u64 [sp + 0x18] = a3\n   862: a3 = u64 [a2 + 0x8]\n   865: u64 [sp + 0x10] = a3\n   868: a3 = u64 [a2 + 0x10]\n   871: u64 [sp + 0x8] = a3\n   874: a2 = u64 [a2 + 0x18]\n   877: u64 [sp] = a2\n   879: s1 = a1\n   881: ra = 6, jump @13\n      : @9 [@dyn 3] (gas: 35)\n   886: a1 = u64 [sp]\n   888: a1 = reverse a1\n   890: a2 = u64 [sp + 0x8]\n   893: a2 = reverse a2\n   895: a3 = u64 [sp + 0x10]\n   898: a3 = reverse a3\n   900: a4 = u64 [sp + 0x18]\n   903: a4 = reverse a4\n   905: u64 [sp + 0x58] = a4\n   908: u64 [sp + 0x50] = a3\n   911: u64 [sp + 0x48] = a2\n   914: u64 [sp + 0x40] = a1\n   917: a1 = u64 [sp + 0x20]\n   920: a1 = reverse a1\n   922: a2 = u64 [sp + 0x28]\n   925: a2 = reverse a2\n   927: a3 = u64 [sp + 0x30]\n   930: a3 = reverse a3\n   932: a4 = u64 [sp + 0x38]\n   935: a4 = reverse a4\n   937: u64 [sp + 0x78] = a4\n   940: u64 [sp + 0x70] = a3\n   943: u64 [sp + 0x68] = a2\n   946: u64 [sp + 0x60] = a1\n   949: i32 a2 = a0 + 0\n   951: i32 a3 = s1 + 0\n   953: i32 a0 = sp + 0x40\n   956: a1 = 0x2\n   959: ecalli 4 // 'deposit_event'\n   961: sp = s0 + 0xffffffffffffff60\n   965: ra = u64 [sp + 0x98]\n   969: s0 = u64 [sp + 0x90]\n   973: s1 = u64 [sp + 0x88]\n   977: sp = sp + 0xa0\n   981: ret\n      : @10 (gas: 41)\n   983: sp = sp + 0xfffffffffffffee0\n   987: u64 [sp + 0x118] = ra\n   991: u64 [sp + 0x110] = s0\n   995: u64 [sp + 0x108] = s1\n   999: s0 = sp + 0x120\n  1003: sp = sp & 0xffffffffffffffe0\n  1006: s1 = u64 [a5]\n  1008: u64 [sp + 0x60] = s1\n  1011: s1 = u64 [a5 + 0x8]\n  1014: u64 [sp + 0x68] = s1\n  1017: s1 = u64 [a5 + 0x10]\n  1020: u64 [sp + 0x70] = s1\n  1023: a5 = u64 [a5 + 0x18]\n  1026: u64 [sp + 0x78] = a5\n  1029: a5 = u64 [a4]\n  1031: u64 [sp + 0x38] = a5\n  1034: a5 = u64 [a4 + 0x8]\n  1037: u64 [sp + 0x40] = a5\n  1040: a5 = u64 [a4 + 0x10]\n  1043: u64 [sp + 0x48] = a5\n  1046: a4 = u64 [a4 + 0x18]\n  1049: u64 [sp + 0x50] = a4\n  1052: t0 = 0x8\n  1055: a4 = u64 [a3]\n  1057: u64 [sp + 0x18] = a4\n  1060: a4 = u64 [a3 + 0x8]\n  1063: u64 [sp + 0x20] = a4\n  1066: a4 = u64 [a3 + 0x10]\n  1069: u64 [sp + 0x28] = a4\n  1072: a3 = u64 [a3 + 0x18]\n  1075: u64 [sp + 0x30] = a3\n  1078: s1 = u64 [a2]\n  1080: a3 = u64 [a2 + 0x8]\n  1083: u64 [sp] = a3\n  1085: a3 = u64 [a2 + 0x10]\n  1088: u64 [sp + 0x8] = a3\n  1091: a2 = u64 [a2 + 0x18]\n  1094: u64 [sp + 0x10] = a2\n  1097: u64 [sp + 0x58] = a1\n  1100: ra = 0xa\n  1103: jump @13\n      : @11 [@dyn 4] (gas: 2)\n  1106: u64 [sp + 0x58] = a1\n  1109: ra = 10, jump @13\n      : @12 [@dyn 5] (gas: 58)\n  1114: a1 = reverse s1\n  1116: u64 [sp + 0x98] = a1\n  1120: a1 = u64 [sp]\n  1122: a1 = reverse a1\n  1124: u64 [sp + 0x90] = a1\n  1128: a1 = u64 [sp + 0x8]\n  1131: a1 = reverse a1\n  1133: u64 [sp + 0x88] = a1\n  1137: a1 = u64 [sp + 0x10]\n  1140: a1 = reverse a1\n  1142: u64 [sp + 0x80] = a1\n  1146: a1 = u64 [sp + 0x18]\n  1149: a1 = reverse a1\n  1151: u64 [sp + 0xb8] = a1\n  1155: a1 = u64 [sp + 0x20]\n  1158: a1 = reverse a1\n  1160: u64 [sp + 0xb0] = a1\n  1164: a1 = u64 [sp + 0x28]\n  1167: a1 = reverse a1\n  1169: u64 [sp + 0xa8] = a1\n  1173: a1 = u64 [sp + 0x30]\n  1176: a1 = reverse a1\n  1178: u64 [sp + 0xa0] = a1\n  1182: a1 = u64 [sp + 0x38]\n  1185: a1 = reverse a1\n  1187: u64 [sp + 0xd8] = a1\n  1191: a1 = u64 [sp + 0x40]\n  1194: a1 = reverse a1\n  1196: u64 [sp + 0xd0] = a1\n  1200: a1 = u64 [sp + 0x48]\n  1203: a1 = reverse a1\n  1205: u64 [sp + 0xc8] = a1\n  1209: a1 = u64 [sp + 0x50]\n  1212: a1 = reverse a1\n  1214: u64 [sp + 0xc0] = a1\n  1218: a1 = u64 [sp + 0x60]\n  1221: a1 = reverse a1\n  1223: u64 [sp + 0xf8] = a1\n  1227: a1 = u64 [sp + 0x68]\n  1230: a1 = reverse a1\n  1232: u64 [sp + 0xf0] = a1\n  1236: a1 = u64 [sp + 0x70]\n  1239: a1 = reverse a1\n  1241: u64 [sp + 0xe8] = a1\n  1245: a1 = u64 [sp + 0x78]\n  1248: a1 = reverse a1\n  1250: u64 [sp + 0xe0] = a1\n  1254: i32 a2 = a0 + 0\n  1256: a3 = i32 [sp + 0x58]\n  1259: i32 a0 = sp + 0x80\n  1263: a1 = 0x4\n  1266: ecalli 4 // 'deposit_event'\n  1268: sp = s0 + 0xfffffffffffffee0\n  1272: ra = u64 [sp + 0x118]\n  1276: s0 = u64 [sp + 0x110]\n  1280: s1 = u64 [sp + 0x108]\n  1284: sp = sp + 0x120\n  1288: ret\n      : @13 (gas: 2)\n  1290: i32 a2 = a0 >> 0x10\n  1293: jump @18 if a2 != 0\n      : @14 (gas: 4)\n  1296: a1 = a1 + a0\n  1299: i32 a1 = a1 + 0x1f\n  1302: a1 = a1 & 0xffffffffffffffe0\n  1305: jump @18 if a1 >u 65536\n      : @15 (gas: 3)\n  1311: a2 = 0x2021c\n  1316: a3 = i32 [0x2021c]\n  1321: jump @17 if a3 >=u a1\n      : @16 (gas: 2)\n  1324: u32 [0x2021c] = a1\n  1329: fallthrough\n      : @17 (gas: 4)\n  1330: a1 = 0x20230\n  1335: i32 a0 = a0 + 0\n  1337: a0 = a0 + a1\n  1340: ret\n      : @18 (gas: 1)\n  1342: trap\n      : @19 (gas: 6)\n  1343: sp = sp + 0xfffffffffffffff0\n  1346: u64 [sp + 0x8] = ra\n  1349: u64 [sp] = s0\n  1351: s0 = a0 & 0x1\n  1354: ecalli 2 // 'call_data_size'\n  1356: fallthrough\n      : @20 (gas: 2)\n  1357: u32 [0x20218] = a0\n  1362: jump @22 if s0 == 0\n      : @21 (gas: 1)\n  1365: ra = 12, jump @23\n      : @22 [@dyn 6] (gas: 1)\n  1369: ra = 14, jump @44\n      : @23 [@dyn 7] (gas: 14)\n  1374: sp = sp + 0xfffffffffffffe60\n  1378: u64 [sp + 0x198] = ra\n  1382: u64 [sp + 0x190] = s0\n  1386: u64 [sp + 0x188] = s1\n  1390: s0 = sp + 0x1a0\n  1394: sp = sp & 0xffffffffffffffe0\n  1397: s1 = sp\n  1399: u64 [s1 + 216] = 0\n  1403: u64 [s1 + 208] = 0\n  1407: u64 [s1 + 192] = 0x80\n  1413: a0 = 0x40\n  1416: a1 = s1 + 0xc0\n  1420: u64 [s1 + 200] = 0\n  1424: ra = 16, jump @4\n      : @24 [@dyn 8] (gas: 7)\n  1429: u64 [s1 + 248] = 0\n  1433: u64 [s1 + 240] = 0\n  1437: u64 [s1 + 232] = 0\n  1441: u64 [s1 + 224] = 0\n  1445: i32 a0 = s1 + 0xe0\n  1449: ecalli 11 // 'value_transferred'\n  1451: fallthrough\n      : @25 (gas: 8)\n  1452: a0 = u64 [s1 + 0xf0]\n  1456: a1 = u64 [s1 + 0xf8]\n  1460: a2 = u64 [s1 + 0xe8]\n  1464: a3 = u64 [s1 + 0xe0]\n  1468: a1 = a1 | a2\n  1471: a0 = a0 | a3\n  1474: a0 = a0 | a1\n  1477: jump @27 if a0 == 0\n      : @26 (gas: 7)\n  1480: a1 = 0x20230\n  1485: i32 a1 = a1 + 0\n  1487: a0 = 0x1\n  1490: a2 = 0\n  1492: ra = 0x28\n  1495: ecalli 8 // 'seal_return'\n  1497: jump @44\n      : @27 (gas: 29)\n  1500: a0 = 0x30230\n  1505: u64 [s1 + 0x38] = a0\n  1508: i32 a0 = a0 + 0\n  1510: u64 [s1 + 0x30] = a0\n  1513: ecalli 3 // 'caller'\n  1515: a2 = u64 [s1 + 0x38]\n  1518: a0 = u64 [a2 + 0x8]\n  1521: a1 = i32 [a2 + 0x10]\n  1524: a2 = u64 [a2]\n  1526: a0 = reverse a0\n  1528: a3 = a0 << 0x20\n  1531: a1 = reverse a1\n  1533: a1 = a1 >> 0x20\n  1536: a1 = a1 | a3\n  1539: u64 [s1 + 0x28] = a1\n  1542: a0 = a0 >> 0x20\n  1545: a1 = reverse a2\n  1547: a2 = a1 << 0x20\n  1550: a0 = a0 | a2\n  1553: u64 [s1 + 0x20] = a0\n  1556: a1 = a1 >> 0x20\n  1559: u64 [s1 + 0x18] = a1\n  1562: u64 [s1 + 280] = 0\n  1566: u64 [s1 + 272] = 0\n  1570: u64 [s1 + 264] = 0\n  1574: u64 [s1 + 256] = 0\n  1578: a0 = s1 + 0xa0\n  1582: a1 = s1 + 0x100\n  1586: ra = 18, jump @6\n      : @28 [@dyn 9] (gas: 19)\n  1591: a0 = u32 [s1 + 0xb4]\n  1595: a0 = a0 << 0x20\n  1598: a1 = u64 [s1 + 0xb8]\n  1602: a2 = u64 [s1 + 0x18]\n  1605: a0 = a0 | a2\n  1608: u64 [s1 + 312] = 0\n  1612: u64 [s1 + 304] = 0\n  1616: u64 [s1 + 296] = 0\n  1620: u64 [s1 + 288] = 0\n  1624: a2 = s1 + 0x100\n  1628: u64 [a2 + 0x58] = a1\n  1631: a1 = u64 [s1 + 0x20]\n  1634: u64 [a2 + 0x48] = a1\n  1637: a1 = u64 [s1 + 0x28]\n  1640: u64 [a2 + 0x40] = a1\n  1643: u64 [a2 + 0x50] = a0\n  1646: a0 = s1 + 0x120\n  1650: a1 = s1 + 0x140\n  1654: ra = 20, jump @7\n      : @29 [@dyn 10] (gas: 6)\n  1659: a0 = u64 [s1 + 0x30]\n  1662: ra = 0x16\n  1665: ecalli 3 // 'caller'\n  1667: a2 = u64 [s1 + 0x38]\n  1670: t0 = 0x18\n  1673: jump @880\n      : @30 [@dyn 11] (gas: 2)\n  1676: a2 = u64 [s1 + 0x38]\n  1679: t0 = 24, jump @880\n      : @31 [@dyn 12] (gas: 7)\n  1684: u64 [s1 + 152] = 0\n  1688: u64 [s1 + 0x90] = a1\n  1692: u64 [s1 + 0x88] = a0\n  1696: a1 = s1 + 0x80\n  1700: u64 [s1 + 0x80] = a3\n  1704: a0 = 0\n  1706: ra = 26, jump @4\n      : @32 [@dyn 13] (gas: 7)\n  1711: u64 [s1 + 120] = 0\n  1714: u64 [s1 + 112] = 0\n  1717: u64 [s1 + 96] = 0x1\n  1721: a0 = 0x20\n  1724: a1 = s1 + 0x60\n  1727: u64 [s1 + 104] = 0\n  1730: ra = 28, jump @4\n      : @33 [@dyn 14] (gas: 7)\n  1735: a0 = sp + 0xffffffffffffffe0\n  1738: a0 = a0 & 0xffffffffffffffe0\n  1741: u64 [s1 + 0x38] = a0\n  1744: sp = a0\n  1746: a2 = 0x2021c\n  1751: a0 = i32 [0x2021c]\n  1756: jump @35 if a0 >u 63\n      : @34 (gas: 2)\n  1760: u32 [0x2021c] = 0x40\n  1766: fallthrough\n      : @35 (gas: 15)\n  1767: a0 = sp + 0xffffffffffffffe0\n  1770: a1 = a0 & 0xffffffffffffffe0\n  1773: u64 [s1 + 0x20] = a1\n  1776: sp = a1\n  1778: a0 = 0x20230\n  1783: u64 [s1 + 0x28] = a0\n  1786: i32 a0 = a0 + 0\n  1788: u64 [s1 + 0x30] = a2\n  1791: i32 a2 = a1 + 0\n  1793: a1 = 0x40\n  1796: ra = 0x1e\n  1799: ecalli 6 // 'hash_keccak_256'\n  1801: a3 = u64 [s1 + 0x20]\n  1804: t0 = 0x20\n  1807: jump @879\n      : @36 [@dyn 15] (gas: 2)\n  1810: a3 = u64 [s1 + 0x20]\n  1813: t0 = 32, jump @879\n      : @37 [@dyn 16] (gas: 7)\n  1818: a1 = u64 [s1 + 0x38]\n  1821: u64 [a1 + 0x18] = a3\n  1824: u64 [a1 + 0x10] = a2\n  1827: u64 [a1 + 0x8] = a4\n  1830: u64 [a1] = a0\n  1832: a0 = s1 + 0x40\n  1835: ra = 34, jump @6\n      : @38 [@dyn 17] (gas: 14)\n  1840: a0 = u64 [s1 + 0x40]\n  1843: a1 = u64 [s1 + 0x48]\n  1846: a2 = u64 [s1 + 0x58]\n  1849: a3 = u64 [s1 + 0x50]\n  1852: a0 = a0 & 0xffffffffffffff00\n  1856: a0 = a0 | 0x1\n  1859: a4 = s1 + 0x100\n  1863: u64 [a4 + 0x78] = a2\n  1866: u64 [a4 + 0x70] = a3\n  1869: u64 [a4 + 0x68] = a1\n  1872: u64 [a4 + 0x60] = a0\n  1875: a1 = s1 + 0x160\n  1879: a0 = u64 [s1 + 0x38]\n  1882: ra = 36, jump @7\n      : @39 [@dyn 18] (gas: 3)\n  1887: a2 = u64 [s1 + 0x30]\n  1890: a0 = i32 [a2]\n  1892: jump @41 if a0 >u 127\n      : @40 (gas: 2)\n  1896: u32 [a2 + 0] = 0x80\n  1900: fallthrough\n      : @41 (gas: 6)\n  1901: a0 = u64 [s1 + 0x28]\n  1904: i32 a0 = a0 + 0x80\n  1908: a1 = 0\n  1910: a2 = 0\n  1912: ecalli 0 // 'call_data_copy'\n  1913: jump @0\n      : @42 (gas: 3)\n  1916: a0 = 0x80\n  1920: a1 = 0\n  1922: ra = 38, jump @13\n      : @43 [@dyn 19] (gas: 6)\n  1927: i32 a1 = a0 + 0\n  1929: a0 = 0\n  1931: a2 = 0\n  1933: ra = 0x28\n  1936: ecalli 8 // 'seal_return'\n  1938: fallthrough\n      : @44 [@dyn 20] (gas: 11)\n  1939: sp = sp + 0xfffffffffffffe10\n  1943: u64 [sp + 0x1e8] = ra\n  1947: u64 [sp + 0x1e0] = s0\n  1951: u64 [sp + 0x1d8] = s1\n  1955: s0 = sp + 0x1f0\n  1959: sp = sp + 0xffffffffffffd6f0\n  1963: sp = sp & 0xffffffffffffffe0\n  1966: s1 = sp\n  1968: t0 = 0x2a\n  1971: a2 = s1 + 0x2118\n  1975: fallthrough\n      : @45 [@dyn 21] (gas: 7)\n  1976: u64 [a2 + 704] = 0\n  1980: u64 [a2 + 696] = 0\n  1984: u64 [a2 + 680] = 0x80\n  1990: a0 = 0x40\n  1993: a1 = s1 + 0x23c0\n  1997: u64 [a2 + 688] = 0\n  2001: ra = 44, jump @4\n      : @46 [@dyn 22] (gas: 4)\n  2006: a0 = 0x20218\n  2011: u64 [s1 + 0x1b8] = a0\n  2015: a0 = i32 [0x20218]\n  2020: jump @48 if a0 >=u 4\n      : @47 (gas: 1)\n  2024: jump @615\n      : @48 (gas: 16)\n  2027: a0 = sp + 0xffffffffffffffe0\n  2030: a0 = a0 & 0xffffffffffffffe0\n  2033: sp = a0\n  2035: u64 [a0 + 24] = 0\n  2038: u64 [a0 + 16] = 0\n  2041: u64 [a0 + 8] = 0\n  2044: u64 [s1 + 0x1b0] = a0\n  2048: u64 [a0 + 0] = 0\n  2050: a0 = s1 + 0x2000\n  2054: i32 a0 = a0 + 0x3e0\n  2058: a1 = 0\n  2060: ra = 0x2e\n  2063: ecalli 1 // 'call_data_load'\n  2065: t0 = 0x30\n  2068: a2 = s1 + 0x2118\n  2072: jump @50\n      : @49 [@dyn 23] (gas: 3)\n  2074: t0 = 0x30\n  2077: a2 = s1 + 0x2118\n  2081: fallthrough\n      : @50 [@dyn 24] (gas: 2)\n  2082: a0 = i32 [a2 + 0x2e4]\n  2086: jump @52 if a0 != 2376452955\n      : @51 (gas: 1)\n  2093: jump @243\n      : @52 (gas: 2)\n  2096: a3 = s1 + 0x2918\n  2100: jump @54 if a0 != 2463195076\n      : @53 (gas: 1)\n  2107: jump @399\n      : @54 (gas: 1)\n  2110: jump @56 if a0 != 2887682958\n      : @55 (gas: 1)\n  2117: jump @366\n      : @56 (gas: 1)\n  2120: jump @90 if a0 == 4076725131\n      : @57 (gas: 1)\n  2128: jump @59 if a0 != 4164732904\n      : @58 (gas: 1)\n  2135: jump @223\n      : @59 (gas: 1)\n  2138: jump @61 if a0 != 288268898\n      : @60 (gas: 1)\n  2145: jump @335\n      : @61 (gas: 1)\n  2148: jump @63 if a0 != 299143052\n      : @62 (gas: 1)\n  2155: jump @255\n      : @63 (gas: 1)\n  2158: jump @121 if a0 == 385331068\n      : @64 (gas: 1)\n  2166: jump @66 if a0 == 1776040674\n      : @65 (gas: 1)\n  2173: jump @420\n      : @66 (gas: 11)\n  2176: u64 [a2 + 1728] = 0\n  2180: u64 [a2 + 1720] = 0\n  2184: u64 [a2 + 1712] = 0\n  2188: u64 [a2 + 1704] = 0\n  2192: a0 = s1 + 0x2000\n  2196: i32 a0 = a0 + 0x7c0\n  2200: ra = 0x32\n  2203: ecalli 11 // 'value_transferred'\n  2205: a0 = 0x2000\n  2209: t0 = 0x34\n  2212: jump @891\n      : @67 [@dyn 25] (gas: 2)\n  2215: a0 = 0x2000\n  2219: t0 = 52, jump @891\n      : @68 [@dyn 26] (gas: 8)\n  2224: a0 = u64 [a4 + 0xb8]\n  2228: a1 = u64 [a4 + 0xc0]\n  2232: a2 = u64 [a4 + 0xb0]\n  2236: a3 = u64 [a4 + 0xa8]\n  2240: a1 = a1 | a2\n  2243: a0 = a0 | a3\n  2246: a0 = a0 | a1\n  2249: jump @70 if a0 == 0\n      : @69 (gas: 1)\n  2252: jump @612\n      : @70 (gas: 1)\n  2255: t0 = 54, jump @890\n      : @71 [@dyn 27] (gas: 1)\n  2260: jump @73 if a1 <u a0\n      : @72 (gas: 1)\n  2263: jump @612\n      : @73 (gas: 5)\n  2266: a0 = s1 + 0x2000\n  2270: i32 a0 = a0 + 0x7e0\n  2274: a1 = 0x4\n  2277: ecalli 1 // 'call_data_load'\n  2279: fallthrough\n      : @74 (gas: 11)\n  2280: a4 = s1 + 0x2118\n  2284: a1 = u64 [a4 + 0x6d8]\n  2288: a0 = u64 [a4 + 0x6e0]\n  2292: a2 = 0x100000000\n  2302: a2 = a2 ^ a1\n  2305: a2 = a2 | a0\n  2308: a3 = a1 >> 0x20\n  2311: a3 = a3 <u 0x1\n  2314: a3 = 0 if a0 != 0\n  2316: a3 = 0 if a2 == 0\n  2318: jump @76 if a3 != 0\n      : @75 (gas: 1)\n  2321: jump @612\n      : @76 (gas: 11)\n  2324: a2 = u64 [a4 + 0x6d0]\n  2328: a3 = u64 [a4 + 0x6c8]\n  2332: a4 = s1 + 0x1918\n  2336: a5 = a4 + 0x200\n  2340: u64 [a5 + 0x88] = a3\n  2344: u64 [a5 + 0x90] = a2\n  2348: u64 [a5 + 0x98] = a1\n  2352: a1 = s1 + 0x1ba0\n  2356: u64 [a5 + 0xa0] = a0\n  2360: a0 = 0\n  2362: ra = 56, jump @4\n      : @77 [@dyn 28] (gas: 3)\n  2367: t0 = 0x3a\n  2370: a2 = s1 + 0x1918\n  2374: fallthrough\n      : @78 [@dyn 29] (gas: 7)\n  2375: u64 [a2 + 640] = 0\n  2379: u64 [a2 + 632] = 0\n  2383: u64 [a2 + 616] = 0x1\n  2388: a0 = 0x20\n  2391: a1 = s1 + 0x1b80\n  2395: u64 [a2 + 624] = 0\n  2399: ra = 60, jump @4\n      : @79 [@dyn 30] (gas: 3)\n  2404: a1 = 0x40\n  2407: a0 = 0\n  2409: ra = 62, jump @13\n      : @80 [@dyn 31] (gas: 4)\n  2414: a1 = sp + 0xffffffffffffffe0\n  2417: a1 = a1 & 0xffffffffffffffe0\n  2420: u64 [s1 + 0x1b8] = a1\n  2424: t0 = 64, jump @870\n      : @81 [@dyn 32] (gas: 5)\n  2429: ra = 0x42\n  2432: ecalli 6 // 'hash_keccak_256'\n  2434: a3 = u64 [s1 + 0x1b8]\n  2438: t0 = 0x44\n  2441: jump @872\n      : @82 [@dyn 33] (gas: 2)\n  2444: a3 = u64 [s1 + 0x1b8]\n  2448: t0 = 68, jump @872\n      : @83 [@dyn 34] (gas: 8)\n  2453: u64 [a4 + 0x700] = a3\n  2457: a3 = a4 + 0x600\n  2461: u64 [a3 + 0xf8] = a2\n  2465: u64 [a3 + 0xf0] = a1\n  2469: u64 [a3 + 0xe8] = a0\n  2473: a0 = s1 + 0x1b60\n  2477: a1 = s1 + 0x2800\n  2481: ra = 70, jump @6\n      : @84 [@dyn 35] (gas: 6)\n  2486: a0 = s1 + 0x1918\n  2490: a0 = u64 [a0 + 0x248]\n  2494: u64 [s1 + 0x1b8] = a0\n  2498: a0 = s1 + 0x1b40\n  2502: a1 = 0x40\n  2505: ra = 72, jump @2\n      : @85 [@dyn 36] (gas: 7)\n  2510: a3 = s1 + 0x1918\n  2514: a5 = a3 + 0x200\n  2518: a4 = u64 [a5 + 0x40]\n  2521: a1 = u64 [a5 + 0x38]\n  2524: a2 = u64 [a5 + 0x30]\n  2527: a0 = u64 [a5 + 0x28]\n  2530: t0 = 74, jump @882\n      : @86 [@dyn 37] (gas: 1)\n  2535: jump @88 if a1 == 0\n      : @87 (gas: 1)\n  2538: jump @558\n      : @88 (gas: 1)\n  2541: t0 = 76, jump @889\n      : @89 [@dyn 38] (gas: 6)\n  2546: i32 a1 = a1 + 0xfffffffffffffb20\n  2550: a1 = a1 + s1\n  2553: u64 [a3 + 528] = 0\n  2557: u64 [s1 + 0x1b8] = a0\n  2561: ra = 0x1c2\n  2565: jump @4\n      : @90 (gas: 9)\n  2568: u64 [a3 + 256] = 0\n  2572: u64 [a3 + 248] = 0\n  2576: u64 [a3 + 240] = 0\n  2580: u64 [a3 + 232] = 0\n  2584: a0 = s1 + 0x3000\n  2588: i32 a0 = a0 + 0xfffffffffffffa00\n  2592: ra = 0x4e\n  2595: ecalli 11 // 'value_transferred'\n  2597: fallthrough\n      : @91 [@dyn 39] (gas: 9)\n  2598: a3 = s1 + 0x2918\n  2602: a0 = u64 [a3 + 0xf8]\n  2606: a1 = u64 [a3 + 0x100]\n  2610: a2 = u64 [a3 + 0xf0]\n  2614: a3 = u64 [a3 + 0xe8]\n  2618: a1 = a1 | a2\n  2621: a0 = a0 | a3\n  2624: a0 = a0 | a1\n  2627: jump @93 if a0 == 0\n      : @92 (gas: 1)\n  2630: jump @612\n      : @93 (gas: 1)\n  2633: t0 = 80, jump @890\n      : @94 [@dyn 40] (gas: 1)\n  2638: jump @96 if a1 <u a0\n      : @95 (gas: 1)\n  2641: jump @612\n      : @96 (gas: 5)\n  2644: a0 = s1 + 0x3000\n  2648: i32 a0 = a0 + 0xfffffffffffffa20\n  2652: a1 = 0x4\n  2655: ecalli 1 // 'call_data_load'\n  2657: fallthrough\n      : @97 (gas: 12)\n  2658: a2 = s1 + 0x2918\n  2662: a3 = u64 [a2 + 0x118]\n  2666: a4 = u64 [a2 + 0x120]\n  2670: a0 = 0x100000000\n  2680: a0 = a0 ^ a3\n  2683: a0 = a0 | a4\n  2686: a1 = a3 >> 0x20\n  2689: a1 = a1 <u 0x1\n  2692: u64 [s1 + 0x170] = a4\n  2696: a1 = 0 if a4 != 0\n  2698: a1 = 0 if a0 == 0\n  2700: jump @99 if a1 != 0\n      : @98 (gas: 1)\n  2703: jump @617\n      : @99 (gas: 11)\n  2706: a0 = u64 [a2 + 0x110]\n  2710: u64 [s1 + 0x198] = a0\n  2714: a0 = u64 [a2 + 0x108]\n  2718: u64 [s1 + 0x190] = a0\n  2722: u64 [s1 + 0x178] = a3\n  2726: a0 = a3 << 0x20\n  2729: a0 = a0 >> 0x20\n  2732: u64 [s1 + 0x188] = a0\n  2736: a0 = s1 + 0x2300\n  2740: a1 = u64 [s1 + 0x1b0]\n  2744: ra = 82, jump @6\n      : @100 [@dyn 41] (gas: 18)\n  2749: a1 = s1 + 0x2118\n  2753: a0 = u64 [a1 + 0x200]\n  2757: u64 [s1 + 0x168] = a0\n  2761: a2 = a1 + 0x100\n  2765: a0 = u64 [a2 + 0xf8]\n  2769: u64 [s1 + 0x1b8] = a0\n  2773: a0 = u64 [a2 + 0xf0]\n  2777: u64 [s1 + 0x1a0] = a0\n  2781: a0 = u64 [a2 + 0xe8]\n  2785: u64 [s1 + 0x1a8] = a0\n  2789: a0 = 0x30230\n  2794: u64 [s1 + 0x180] = a0\n  2798: i32 a0 = a0 + 0\n  2800: ra = 0x54\n  2803: ecalli 3 // 'caller'\n  2805: a2 = u64 [s1 + 0x180]\n  2809: t0 = 0x56\n  2812: jump @871\n      : @101 [@dyn 42] (gas: 2)\n  2815: a2 = u64 [s1 + 0x180]\n  2819: t0 = 86, jump @871\n      : @102 [@dyn 43] (gas: 20)\n  2824: a2 = u64 [s1 + 0x1b8]\n  2828: a2 = a2 << 0x20\n  2831: a2 = a2 >> 0x20\n  2834: a1 = a1 ^ a2\n  2837: a2 = u64 [s1 + 0x1a8]\n  2841: a0 = a0 ^ a2\n  2844: a0 = a0 | a1\n  2847: a1 = u64 [s1 + 0x1a0]\n  2851: a1 = a1 ^ a3\n  2854: a0 = a0 | a1\n  2857: a0 = a0 <u 0x1\n  2860: a1 = s1 + 0x2118\n  2864: u64 [a1 + 480] = 0\n  2868: u64 [a1 + 472] = 0\n  2872: u64 [a1 + 0x1c8] = a0\n  2876: a0 = s1 + 0x22e0\n  2880: u64 [a1 + 464] = 0\n  2884: ra = 0x58\n  2887: t0 = 0x2ec\n  2891: jump @859\n      : @103 [@dyn 44] (gas: 7)\n  2894: a0 = s1 + 0x100\n  2898: a5 = u64 [a0 + 0x88]\n  2902: a4 = u64 [a0 + 0x98]\n  2906: a3 = u64 [a0 + 0x90]\n  2910: a0 = a3 | a4\n  2913: a0 = a0 | a5\n  2916: jump @105 if a0 == 0\n      : @104 (gas: 1)\n  2919: jump @459\n      : @105 (gas: 3)\n  2922: a0 = s1 + 0x21c0\n  2926: a1 = 0x40\n  2929: ra = 90, jump @2\n      : @106 [@dyn 45] (gas: 13)\n  2934: a4 = s1 + 0x2118\n  2938: t0 = u64 [a4 + 0xc0]\n  2942: a5 = u64 [a4 + 0xb8]\n  2946: a3 = u64 [a4 + 0xb0]\n  2950: a0 = u64 [a4 + 0xa8]\n  2954: a2 = a3 | t0\n  2957: a1 = a0 | a5\n  2960: a1 = a1 | a2\n  2963: a1 = a1 >> 0x20\n  2966: a2 = a2 | a5\n  2969: a2 = a2 << 0x20\n  2972: a1 = a1 | a2\n  2975: jump @108 if a1 == 0\n      : @107 (gas: 1)\n  2978: jump @558\n      : @108 (gas: 11)\n  2981: u64 [a4 + 152] = 0\n  2985: u64 [a4 + 144] = 0\n  2989: u64 [a4 + 136] = 0\n  2993: u64 [s1 + 0x1b0] = a3\n  2997: a3 = 0x8c379a000000000\n  3007: a1 = s1 + 0x21a0\n  3011: u64 [a4 + 0xa0] = a3\n  3015: u64 [s1 + 0x1b8] = a0\n  3019: u64 [s1 + 0x1a8] = t0\n  3023: u64 [s1 + 0x1a0] = a5\n  3027: ra = 92, jump @4\n      : @109 [@dyn 46] (gas: 6)\n  3032: a5 = s1 + 0x100\n  3036: a1 = u64 [a5 + 0xb8]\n  3040: a0 = u64 [a5 + 0xa8]\n  3044: a3 = u64 [a5 + 0xa0]\n  3048: a3 = a3 | a0\n  3051: t0 = 94, jump @862\n      : @110 [@dyn 47] (gas: 1)\n  3056: jump @112 if a0 != 0\n      : @111 (gas: 1)\n  3059: jump @558\n      : @112 (gas: 11)\n  3062: i32 a0 = a1 + 0x4\n  3065: a2 = s1 + 0x2118\n  3069: a5 = 0\n  3071: u64 [a2 + 128] = 0\n  3075: u64 [a2 + 120] = 0\n  3078: u64 [a2 + 104] = 0x20\n  3082: a1 = s1 + 0x2180\n  3086: u64 [a2 + 112] = 0\n  3089: u64 [s1 + 0x1a8] = a3\n  3093: u64 [s1 + 0x1a0] = a4\n  3097: ra = 96, jump @4\n      : @113 [@dyn 48] (gas: 1)\n  3102: t0 = 98, jump @867\n      : @114 [@dyn 49] (gas: 1)\n  3107: jump @116 if a0 != 0\n      : @115 (gas: 1)\n  3110: jump @558\n      : @116 (gas: 8)\n  3113: i32 a0 = a1 + 0x24\n  3116: a2 = s1 + 0x2118\n  3120: u64 [a2 + 96] = 0\n  3123: u64 [a2 + 88] = 0\n  3126: u64 [a2 + 72] = 0x19\n  3130: a1 = s1 + 0x2160\n  3134: u64 [a2 + 80] = 0\n  3137: ra = 100, jump @4\n      : @117 [@dyn 50] (gas: 1)\n  3142: t0 = 102, jump @863\n      : @118 [@dyn 51] (gas: 1)\n  3147: jump @120 if a0 != 0\n      : @119 (gas: 1)\n  3150: jump @558\n      : @120 (gas: 13)\n  3153: i32 a0 = a3 + 0x44\n  3156: a1 = u64 [0x20020]\n  3161: a2 = u64 [0x20028]\n  3166: a3 = u64 [0x20030]\n  3171: a4 = s1 + 0x2118\n  3175: u64 [a4 + 0x40] = a1\n  3178: u64 [a4 + 0x38] = a2\n  3181: u64 [a4 + 0x30] = a3\n  3184: a2 = 0x7300000000000000\n  3194: a1 = s1 + 0x2140\n  3198: u64 [a4 + 0x28] = a2\n  3201: ra = 0x26c\n  3205: jump @4\n      : @121 (gas: 9)\n  3208: u64 [a2 + 1408] = 0\n  3212: u64 [a2 + 1400] = 0\n  3216: u64 [a2 + 1392] = 0\n  3220: u64 [a2 + 1384] = 0\n  3224: a0 = s1 + 0x2000\n  3228: i32 a0 = a0 + 0x680\n  3232: ra = 0x68\n  3235: ecalli 11 // 'value_transferred'\n  3237: fallthrough\n      : @122 [@dyn 52] (gas: 10)\n  3238: a3 = s1 + 0x2118\n  3242: a4 = a3 + 0x500\n  3246: a0 = u64 [a4 + 0x78]\n  3249: a1 = u64 [a4 + 0x80]\n  3253: a2 = u64 [a4 + 0x70]\n  3256: a3 = u64 [a4 + 0x68]\n  3259: a1 = a1 | a2\n  3262: a0 = a0 | a3\n  3265: a0 = a0 | a1\n  3268: jump @124 if a0 == 0\n      : @123 (gas: 1)\n  3271: jump @612\n      : @124 (gas: 1)\n  3274: t0 = 106, jump @890\n      : @125 [@dyn 53] (gas: 1)\n  3279: jump @127 if a1 <u a0\n      : @126 (gas: 1)\n  3282: jump @612\n      : @127 (gas: 5)\n  3285: a0 = s1 + 0x2000\n  3289: i32 a0 = a0 + 0x6a0\n  3293: a1 = 0x4\n  3296: ecalli 1 // 'call_data_load'\n  3298: fallthrough\n      : @128 (gas: 8)\n  3299: a3 = s1 + 0x2118\n  3303: t2 = u64 [a3 + 0x5a0]\n  3307: a1 = u64 [a3 + 0x598]\n  3311: a5 = u64 [a3 + 0x590]\n  3315: a4 = a1 | t2\n  3318: a0 = a5 <u 0x1\n  3321: a0 = 0 if a4 != 0\n  3323: jump @130 if a0 != 0\n      : @129 (gas: 1)\n  3326: jump @613\n      : @130 (gas: 31)\n  3329: u64 [s1 + 0x1a0] = a4\n  3333: a2 = u64 [a3 + 0x588]\n  3337: a0 = u64 [s1 + 0x1b8]\n  3341: t1 = u32 [a0]\n  3343: a0 = t1 <u a2\n  3346: a3 = a5 >u 0\n  3348: a3 = a0 if a5 == 0\n  3351: a4 = -a1\n  3353: t0 = a4 - a3\n  3356: a3 = a4 <u a3\n  3359: u64 [s1 + 0x188] = a1\n  3363: a4 = a1 >u 0\n  3365: u64 [s1 + 0x190] = t2\n  3369: a4 = a4 + t2\n  3372: a4 = -a4\n  3374: a4 = a4 - a3\n  3377: a3 = -a5\n  3379: a3 = a3 - a0\n  3382: u64 [s1 + 0x1b0] = a2\n  3386: a1 = t1 - a2\n  3389: a1 = a1 <u 0x104\n  3393: a1 = a1 ^ 0x1\n  3396: a2 = a3 >u 0\n  3398: a2 = a1 if a3 == 0\n  3401: a1 = a4 >s 0\n  3403: a3 = t0 >u 0\n  3405: a3 = a1 if a4 != 0\n  3408: a0 = t0 | a4\n  3411: a2 = a3 if a0 != 0\n  3414: u64 [s1 + 0x1a8] = a5\n  3418: jump @132 if a2 != 0\n      : @131 (gas: 1)\n  3421: jump @612\n      : @132 (gas: 9)\n  3424: a0 = 0x30230\n  3429: u64 [s1 + 0x1b8] = a0\n  3433: i32 a0 = a0 + 0\n  3435: u64 [s1 + 0x180] = a0\n  3439: ra = 0x6c\n  3442: ecalli 3 // 'caller'\n  3444: a2 = u64 [s1 + 0x1b8]\n  3448: t0 = 0x6e\n  3451: jump @874\n      : @133 [@dyn 54] (gas: 2)\n  3454: a2 = u64 [s1 + 0x1b8]\n  3458: t0 = 110, jump @874\n      : @134 [@dyn 55] (gas: 8)\n  3463: u64 [a2 + 512] = 0\n  3467: a4 = a2 + 0x100\n  3471: u64 [a4 + 0xf8] = a1\n  3475: u64 [a4 + 0xf0] = a0\n  3479: a1 = s1 + 0x1b00\n  3483: u64 [a4 + 0xe8] = a3\n  3487: a0 = 0\n  3489: ra = 112, jump @4\n      : @135 [@dyn 56] (gas: 9)\n  3494: a0 = s1 + 0x1918\n  3498: u64 [a0 + 480] = 0\n  3502: u64 [a0 + 472] = 0\n  3506: u64 [a0 + 464] = 0\n  3510: a3 = a0\n  3512: a0 = 0x20\n  3515: a1 = s1 + 0x1ae0\n  3519: u64 [a3 + 456] = 0x1\n  3524: ra = 114, jump @4\n      : @136 [@dyn 57] (gas: 3)\n  3529: a1 = 0x40\n  3532: a0 = 0\n  3534: ra = 116, jump @13\n      : @137 [@dyn 58] (gas: 4)\n  3539: a1 = sp + 0xffffffffffffffe0\n  3542: a1 = a1 & 0xffffffffffffffe0\n  3545: u64 [s1 + 0x198] = a1\n  3549: t0 = 118, jump @870\n      : @138 [@dyn 59] (gas: 5)\n  3554: ra = 0x78\n  3557: ecalli 6 // 'hash_keccak_256'\n  3559: a3 = u64 [s1 + 0x198]\n  3563: t0 = 0x7a\n  3566: jump @872\n      : @139 [@dyn 60] (gas: 2)\n  3569: a3 = u64 [s1 + 0x198]\n  3573: t0 = 122, jump @872\n      : @140 [@dyn 61] (gas: 8)\n  3578: a5 = a4 + 0x500\n  3582: u64 [a5 + 0xc0] = a3\n  3586: u64 [a5 + 0xb8] = a2\n  3590: u64 [a5 + 0xb0] = a1\n  3594: u64 [a5 + 0xa8] = a0\n  3598: a0 = s1 + 0x1ac0\n  3602: a1 = s1 + 0x26c0\n  3606: ra = 124, jump @6\n      : @141 [@dyn 62] (gas: 10)\n  3611: a1 = s1 + 0x1918\n  3615: a0 = u8 [a1 + 0x1a8]\n  3619: u64 [a1 + 416] = 0\n  3623: u64 [a1 + 408] = 0\n  3627: u64 [a1 + 0x188] = a0\n  3631: a0 = s1 + 0x1aa0\n  3635: u64 [a1 + 400] = 0\n  3639: ra = 0x7e\n  3642: t0 = 0x30c\n  3646: jump @859\n      : @142 [@dyn 63] (gas: 9)\n  3649: a0 = 0xfffffffc\n  3659: a3 = s1 + 0x100\n  3663: a2 = u64 [a3 + 0xb0]\n  3667: a0 = a2 <u a0\n  3670: a1 = u64 [a3 + 0xa8]\n  3674: a0 = 0 if a1 != 0\n  3676: a1 = u64 [a3 + 0xa0]\n  3680: a0 = 0 if a1 != 0\n  3682: jump @144 if a0 != 0\n      : @143 (gas: 1)\n  3685: jump @558\n      : @144 (gas: 9)\n  3688: a0 = a2 + 0x4\n  3691: u64 [s1 + 0x178] = a0\n  3695: i32 a1 = a0 + 0\n  3697: a0 = s1 + 0x2000\n  3701: i32 a0 = a0 + 0x6e0\n  3705: ecalli 1 // 'call_data_load'\n  3707: t0 = 0x80\n  3711: a2 = s1 + 0x2118\n  3715: fallthrough\n      : @145 [@dyn 64] (gas: 18)\n  3716: a4 = a2 + 0x500\n  3720: a0 = u64 [a4 + 0xe0]\n  3724: a1 = u64 [a4 + 0xd8]\n  3728: a3 = u64 [a4 + 0xd0]\n  3732: a2 = u64 [a4 + 0xc8]\n  3736: u64 [s1 + 0x170] = a0\n  3740: a4 = s1 + 0x1918\n  3744: a5 = a4 + 0x100\n  3748: u64 [a5 + 0x80] = a0\n  3752: u64 [s1 + 0x168] = a1\n  3756: u64 [a5 + 0x78] = a1\n  3759: u64 [s1 + 0x158] = a3\n  3763: u64 [a5 + 0x70] = a3\n  3766: a1 = s1 + 0x1a80\n  3770: u64 [s1 + 0x160] = a2\n  3774: u64 [a5 + 0x68] = a2\n  3777: a0 = 0\n  3779: ra = 130, jump @4\n      : @146 [@dyn 65] (gas: 3)\n  3785: t0 = 0x84\n  3789: a2 = s1 + 0x1918\n  3793: fallthrough\n      : @147 [@dyn 66] (gas: 7)\n  3794: u64 [a2 + 352] = 0\n  3798: u64 [a2 + 344] = 0\n  3802: u64 [a2 + 328] = 0x2\n  3807: a0 = 0x20\n  3810: a1 = s1 + 0x1a60\n  3814: u64 [a2 + 336] = 0\n  3818: ra = 134, jump @4\n      : @148 [@dyn 67] (gas: 3)\n  3824: a1 = 0x40\n  3827: a0 = 0\n  3829: ra = 136, jump @13\n      : @149 [@dyn 68] (gas: 4)\n  3835: a1 = sp + 0xffffffffffffffe0\n  3838: a1 = a1 & 0xffffffffffffffe0\n  3841: u64 [s1 + 0x198] = a1\n  3845: t0 = 138, jump @870\n      : @150 [@dyn 69] (gas: 5)\n  3851: ra = 0x8c\n  3855: ecalli 6 // 'hash_keccak_256'\n  3857: a3 = u64 [s1 + 0x198]\n  3861: t0 = 0x8e\n  3865: jump @872\n      : @151 [@dyn 70] (gas: 2)\n  3868: a3 = u64 [s1 + 0x198]\n  3872: t0 = 142, jump @872\n      : @152 [@dyn 71] (gas: 8)\n  3878: u64 [a4 + 0x600] = a3\n  3882: a3 = a4 + 0x500\n  3886: u64 [a3 + 0xf8] = a2\n  3890: u64 [a3 + 0xf0] = a1\n  3894: u64 [a3 + 0xe8] = a0\n  3898: a0 = s1 + 0x1a40\n  3902: a1 = s1 + 0x2700\n  3906: ra = 144, jump @6\n      : @153 [@dyn 72] (gas: 3)\n  3912: a0 = s1 + 0x1918\n  3916: a0 = u8 [a0 + 0x128]\n  3920: jump @155 if a0 == 0\n      : @154 (gas: 1)\n  3923: jump @517\n      : @155 (gas: 3)\n  3926: a3 = 0x100000000\n  3936: a0 = 0xffffffdc\n  3946: t0 = 146, jump @888\n      : @156 [@dyn 73] (gas: 1)\n  3952: jump @158 if a0 != 0\n      : @157 (gas: 1)\n  3955: jump @558\n      : @158 (gas: 10)\n  3958: a0 = u64 [s1 + 0x1b0]\n  3962: i32 a1 = a0 + 0x24\n  3965: a0 = s1 + 0x2000\n  3969: i32 a0 = a0 + 0x720\n  3973: u64 [s1 + 0x198] = a3\n  3977: ra = 0x94\n  3981: ecalli 1 // 'call_data_load'\n  3983: a0 = 0x2000\n  3987: t0 = 0x96\n  3991: jump @891\n      : @159 [@dyn 74] (gas: 2)\n  3994: a0 = 0x2000\n  3998: t0 = 150, jump @891\n      : @160 [@dyn 75] (gas: 21)\n  4004: a0 = u64 [a4 + 0x20]\n  4007: a1 = u64 [a4 + 0x18]\n  4010: a2 = u64 [a4 + 0x10]\n  4013: a3 = u64 [a4 + 0x8]\n  4016: u64 [s1 + 0x138] = a0\n  4020: u64 [s1 + 0x128] = a2\n  4024: a0 = a0 | a2\n  4027: u64 [s1 + 0x130] = a1\n  4031: u64 [s1 + 0x120] = a3\n  4035: a1 = a1 | a3\n  4038: a0 = a0 | a1\n  4041: a0 = a0 >u 0\n  4043: a1 = s1 + 0x1918\n  4047: u64 [a1 + 128] = 0\n  4051: u64 [a1 + 120] = 0\n  4054: u64 [a1 + 0x68] = a0\n  4057: a0 = s1 + 0x1980\n  4061: u64 [a1 + 112] = 0\n  4064: ra = 0x98\n  4068: t0 = 0x32c\n  4072: jump @859\n      : @161 [@dyn 76] (gas: 10)\n  4075: a4 = s1 + 0x100\n  4079: a3 = u64 [a4 + 0xa8]\n  4083: a1 = u64 [a4 + 0xb0]\n  4087: a0 = u64 [a4 + 0x98]\n  4091: a0 = a0 + 0xffffffffffffffbc\n  4094: a0 = a1 <u a0\n  4097: a0 = 0 if a3 != 0\n  4099: a2 = u64 [a4 + 0xa0]\n  4103: a0 = 0 if a2 != 0\n  4105: jump @163 if a0 != 0\n      : @162 (gas: 1)\n  4108: jump @558\n      : @163 (gas: 22)\n  4111: a0 = u64 [s1 + 0x178]\n  4115: a0 = a0 <u a1\n  4118: a2 = a3 + a0\n  4121: u64 [s1 + 0x198] = a2\n  4125: a4 = a1\n  4127: a1 = a2 <u a3\n  4130: a1 = a0 if a0 == 0\n  4133: a0 = u64 [s1 + 0x188]\n  4137: a1 = a1 + a0\n  4140: u64 [s1 + 0x150] = a1\n  4144: a0 = a1 <u a0\n  4147: a1 = u64 [s1 + 0x190]\n  4151: a0 = a0 + a1\n  4154: u64 [s1 + 0x148] = a0\n  4158: i32 a1 = a4 + 0x44\n  4161: a0 = s1 + 0x2000\n  4165: i32 a0 = a0 + 0x740\n  4169: ra = 0x9a\n  4173: ecalli 1 // 'call_data_load'\n  4175: a0 = 0x2000\n  4179: t0 = 0x9c\n  4183: jump @891\n      : @164 [@dyn 77] (gas: 2)\n  4186: a0 = 0x2000\n  4190: t0 = 156, jump @891\n      : @165 [@dyn 78] (gas: 21)\n  4196: a0 = u64 [a4 + 0x40]\n  4199: a1 = u64 [a4 + 0x38]\n  4202: a2 = u64 [a4 + 0x30]\n  4205: a3 = u64 [a4 + 0x28]\n  4208: u64 [s1 + 0xb0] = a0\n  4212: u64 [s1 + 0xa0] = a2\n  4216: a0 = a0 | a2\n  4219: u64 [s1 + 0xa8] = a1\n  4223: u64 [s1 + 0x98] = a3\n  4227: a1 = a1 | a3\n  4230: a0 = a0 | a1\n  4233: a0 = a0 >u 0\n  4235: a1 = s1 + 0x1918\n  4239: u64 [a1 + 96] = 0\n  4242: u64 [a1 + 88] = 0\n  4245: u64 [a1 + 0x48] = a0\n  4248: a0 = s1 + 0x1960\n  4252: u64 [a1 + 80] = 0\n  4255: ra = 0x9e\n  4259: t0 = 0x34c\n  4263: jump @859\n      : @166 [@dyn 79] (gas: 9)\n  4266: a0 = u64 [s1 + 0x1b0]\n  4270: a1 = a0 + 0x84\n  4274: a0 = a1 <u a0\n  4277: a2 = a1\n  4279: u64 [s1 + 0x118] = a1\n  4283: a1 = u64 [s1 + 0x1a8]\n  4287: a3 = a1 + a0\n  4290: u64 [s1 + 0x110] = a3\n  4294: t0 = 160, jump @887\n      : @167 [@dyn 80] (gas: 25)\n  4300: u64 [s1 + 0x108] = a4\n  4304: a0 = a4 <u a0\n  4307: a1 = u64 [s1 + 0x190]\n  4311: a1 = a1 + a0\n  4314: u64 [s1 + 0x100] = a1\n  4318: a0 = s1 + 0x1118\n  4322: a5 = a0 + 0x700\n  4326: u64 [a5 + 0xe0] = a1\n  4330: u64 [a5 + 0xd8] = a4\n  4334: u64 [a5 + 0xd0] = a3\n  4338: u64 [a5 + 0xc8] = a2\n  4342: a0 = u64 [s1 + 0x148]\n  4346: a1 = s1 + 0x1918\n  4350: u64 [a1] = a0\n  4352: a0 = u64 [s1 + 0x150]\n  4356: u64 [a1 + 0xfffffffffffffff8] = a0\n  4359: a0 = u64 [s1 + 0x198]\n  4363: u64 [a1 + 0xfffffffffffffff0] = a0\n  4366: a4 = a1\n  4368: a0 = s1 + 0x1920\n  4372: a1 = s1 + 0x1900\n  4376: a2 = s1 + 0x18e0\n  4380: a3 = u64 [s1 + 0x178]\n  4384: u64 [a4 + 0xffffffffffffffe8] = a3\n  4387: ra = 162, jump @724\n      : @168 [@dyn 81] (gas: 18)\n  4393: a3 = s1 + 0x1918\n  4397: a0 = u64 [a3 + 0x38]\n  4400: a1 = u64 [a3 + 0x40]\n  4403: a2 = u64 [a3 + 0x30]\n  4406: a3 = u64 [a3 + 0x28]\n  4409: a1 = a1 | a2\n  4412: a0 = a0 | a3\n  4415: a0 = a0 | a1\n  4418: a0 = a0 >u 0\n  4420: a1 = s1 + 0x1118\n  4424: u64 [a1 + 1984] = 0\n  4428: u64 [a1 + 1976] = 0\n  4432: u64 [a1 + 0x7a8] = a0\n  4436: a0 = s1 + 0x18c0\n  4440: u64 [a1 + 1968] = 0\n  4444: ra = 0xa4\n  4448: t0 = 0x370\n  4452: jump @859\n      : @169 [@dyn 82] (gas: 9)\n  4455: a0 = u64 [s1 + 0x1b0]\n  4459: a1 = a0 + 0xc4\n  4463: a0 = a1 <u a0\n  4466: a2 = a1\n  4468: u64 [s1 + 0xf8] = a1\n  4472: a1 = u64 [s1 + 0x1a8]\n  4476: a3 = a1 + a0\n  4479: u64 [s1 + 0xf0] = a3\n  4483: t0 = 166, jump @887\n      : @170 [@dyn 83] (gas: 24)\n  4489: u64 [s1 + 0xe8] = a4\n  4493: a0 = a4 <u a0\n  4496: a1 = u64 [s1 + 0x190]\n  4500: a0 = a0 + a1\n  4503: u64 [s1 + 0xe0] = a0\n  4507: a1 = s1 + 0x1118\n  4511: a5 = a1 + 0x700\n  4515: u64 [a5 + 0x40] = a0\n  4518: u64 [a5 + 0x38] = a4\n  4521: u64 [a5 + 0x30] = a3\n  4524: u64 [a5 + 0x28] = a2\n  4527: a0 = u64 [s1 + 0x148]\n  4531: u64 [a5 + 0x60] = a0\n  4534: a0 = u64 [s1 + 0x150]\n  4538: u64 [a5 + 0x58] = a0\n  4541: a0 = u64 [s1 + 0x198]\n  4545: u64 [a5 + 0x50] = a0\n  4548: a4 = a1\n  4550: a0 = s1 + 0x1880\n  4554: a1 = s1 + 0x1860\n  4558: a2 = s1 + 0x1840\n  4562: a3 = u64 [s1 + 0x178]\n  4566: u64 [a4 + 0x748] = a3\n  4570: ra = 168, jump @724\n      : @171 [@dyn 84] (gas: 18)\n  4576: a4 = s1 + 0x1118\n  4580: a5 = a4 + 0x700\n  4584: a0 = u64 [a5 + 0x98]\n  4588: a1 = u64 [a5 + 0xa0]\n  4592: a2 = u64 [a5 + 0x90]\n  4596: a3 = u64 [a5 + 0x88]\n  4600: a1 = a1 | a2\n  4603: a0 = a0 | a3\n  4606: a0 = a0 | a1\n  4609: a0 = a0 >u 0\n  4611: u64 [a4 + 1824] = 0\n  4615: u64 [a4 + 1816] = 0\n  4619: u64 [a5 + 0x8] = a0\n  4622: a0 = s1 + 0x1820\n  4626: u64 [a4 + 1808] = 0\n  4630: ra = 0xaa\n  4634: t0 = 0x390\n  4638: jump @859\n      : @172 [@dyn 85] (gas: 9)\n  4641: a0 = u64 [s1 + 0x1b0]\n  4645: a1 = a0 + 0xa4\n  4649: a0 = a1 <u a0\n  4652: a2 = a1\n  4654: u64 [s1 + 0xd8] = a1\n  4658: a1 = u64 [s1 + 0x1a8]\n  4662: a3 = a1 + a0\n  4665: u64 [s1 + 0xd0] = a3\n  4669: t0 = 172, jump @887\n      : @173 [@dyn 86] (gas: 13)\n  4675: u64 [s1 + 0xc8] = a4\n  4679: a0 = a4 <u a0\n  4682: a1 = u64 [s1 + 0x190]\n  4686: a0 = a0 + a1\n  4689: u64 [s1 + 0xc0] = a0\n  4693: a5 = s1 + 0x1118\n  4697: u64 [a5 + 0x6e0] = a0\n  4701: u64 [a5 + 0x6d8] = a4\n  4705: u64 [a5 + 0x6d0] = a3\n  4709: a0 = s1 + 0x1800\n  4713: a1 = s1 + 0x17e0\n  4717: u64 [a5 + 0x6c8] = a2\n  4721: ra = 174, jump @784\n      : @174 [@dyn 87] (gas: 16)\n  4727: a3 = s1 + 0x1118\n  4731: a0 = u32 [a3 + 0x6f8]\n  4735: a4 = a3 + 0x600\n  4739: a1 = u64 [a4 + 0xe8]\n  4743: a2 = u64 [a4 + 0xf0]\n  4747: a0 = a0 | a1\n  4750: a0 = a0 | a2\n  4753: a0 = a0 >u 0\n  4755: u64 [a3 + 1728] = 0\n  4759: u64 [a3 + 1720] = 0\n  4763: u64 [a4 + 0xa8] = a0\n  4767: a0 = s1 + 0x17c0\n  4771: u64 [a3 + 1712] = 0\n  4775: ra = 0xb0\n  4779: t0 = 0x3b6\n  4783: jump @859\n      : @175 [@dyn 88] (gas: 13)\n  4786: a0 = u64 [s1 + 0x170]\n  4790: a2 = s1 + 0x1118\n  4794: a3 = a2 + 0x600\n  4798: u64 [a3 + 0xa0] = a0\n  4802: a0 = u64 [s1 + 0x168]\n  4806: u64 [a3 + 0x98] = a0\n  4810: a0 = u64 [s1 + 0x158]\n  4814: u64 [a3 + 0x90] = a0\n  4818: a1 = s1 + 0x17a0\n  4822: a0 = u64 [s1 + 0x160]\n  4826: u64 [a3 + 0x88] = a0\n  4830: a0 = 0\n  4832: ra = 178, jump @4\n      : @176 [@dyn 89] (gas: 8)\n  4838: a2 = s1 + 0x1118\n  4842: u64 [a2 + 1664] = 0\n  4846: u64 [a2 + 1656] = 0\n  4850: u64 [a2 + 1640] = 0x2\n  4855: a0 = 0x20\n  4858: a1 = s1 + 0x1780\n  4862: u64 [a2 + 1648] = 0\n  4866: ra = 180, jump @4\n      : @177 [@dyn 90] (gas: 7)\n  4872: a0 = sp + 0xffffffffffffffe0\n  4875: a0 = a0 & 0xffffffffffffffe0\n  4878: u64 [s1 + 0x140] = a0\n  4882: sp = a0\n  4884: a1 = 0x40\n  4887: a0 = 0\n  4889: ra = 182, jump @13\n      : @178 [@dyn 91] (gas: 4)\n  4895: a1 = sp + 0xffffffffffffffe0\n  4898: a1 = a1 & 0xffffffffffffffe0\n  4901: u64 [s1 + 0xb8] = a1\n  4905: t0 = 184, jump @870\n      : @179 [@dyn 92] (gas: 5)\n  4911: ra = 0xba\n  4915: ecalli 6 // 'hash_keccak_256'\n  4917: a3 = u64 [s1 + 0xb8]\n  4921: t0 = 0xbc\n  4925: jump @879\n      : @180 [@dyn 93] (gas: 2)\n  4928: a3 = u64 [s1 + 0xb8]\n  4932: t0 = 188, jump @879\n      : @181 [@dyn 94] (gas: 7)\n  4938: a1 = u64 [s1 + 0x140]\n  4942: u64 [a1 + 0x18] = a3\n  4945: u64 [a1 + 0x10] = a2\n  4948: u64 [a1 + 0x8] = a4\n  4951: u64 [a1] = a0\n  4953: a0 = s1 + 0x1760\n  4957: ra = 190, jump @6\n      : @182 [@dyn 95] (gas: 2)\n  4963: a0 = 0x1000\n  4967: t0 = 192, jump @891\n      : @183 [@dyn 96] (gas: 15)\n  4973: a0 = u64 [a4 + 0x48]\n  4976: a1 = u64 [a4 + 0x50]\n  4979: a2 = u64 [a4 + 0x60]\n  4982: a3 = u64 [a4 + 0x58]\n  4985: a0 = a0 & 0xffffffffffffff00\n  4989: a0 = a0 | 0x1\n  4992: a4 = s1 + 0x2118\n  4996: a5 = a4 + 0x600\n  5000: u64 [a5 + 0x60] = a2\n  5003: u64 [a5 + 0x58] = a3\n  5006: u64 [a5 + 0x50] = a1\n  5009: u64 [a5 + 0x48] = a0\n  5012: a1 = s1 + 0x2760\n  5016: a0 = u64 [s1 + 0x140]\n  5020: ra = 194, jump @7\n      : @184 [@dyn 97] (gas: 23)\n  5026: a1 = s1 + 0x1118\n  5030: a0 = u64 [s1 + 0x100]\n  5034: a2 = a1 + 0x500\n  5038: u64 [a2 + 0xe0] = a0\n  5042: a0 = u64 [s1 + 0x108]\n  5046: u64 [a2 + 0xd8] = a0\n  5050: a0 = u64 [s1 + 0x110]\n  5054: u64 [a2 + 0xd0] = a0\n  5058: a0 = u64 [s1 + 0x118]\n  5062: u64 [a2 + 0xc8] = a0\n  5066: a0 = u64 [s1 + 0x148]\n  5070: u64 [a1 + 0x600] = a0\n  5074: a0 = u64 [s1 + 0x150]\n  5078: u64 [a2 + 0xf8] = a0\n  5082: a0 = u64 [s1 + 0x198]\n  5086: u64 [a2 + 0xf0] = a0\n  5090: a4 = a1\n  5092: a0 = s1 + 0x1720\n  5096: a1 = s1 + 0x1700\n  5100: a2 = s1 + 0x16e0\n  5104: a3 = u64 [s1 + 0x178]\n  5108: u64 [a4 + 0x5e8] = a3\n  5112: ra = 196, jump @724\n      : @185 [@dyn 98] (gas: 31)\n  5118: a0 = s1 + 0x1118\n  5122: a2 = a0 + 0x600\n  5126: a1 = u64 [a2 + 0x20]\n  5129: u64 [s1 + 0x108] = a1\n  5133: a1 = u64 [a2 + 0x18]\n  5136: u64 [s1 + 0x110] = a1\n  5140: a1 = u64 [a2 + 0x10]\n  5143: u64 [s1 + 0x118] = a1\n  5147: a1 = u64 [a2 + 0x8]\n  5150: u64 [s1 + 0x140] = a1\n  5154: a1 = u64 [a2 + 0x40]\n  5157: u64 [s1 + 0x88] = a1\n  5161: a1 = u64 [a2 + 0x38]\n  5164: u64 [s1 + 0x90] = a1\n  5168: a1 = u64 [a2 + 0x30]\n  5171: u64 [s1 + 0xb8] = a1\n  5175: a1 = u64 [a2 + 0x28]\n  5178: u64 [s1 + 0x100] = a1\n  5182: a1 = u64 [s1 + 0xc0]\n  5186: a2 = a0 + 0x500\n  5190: u64 [a2 + 0xa0] = a1\n  5194: a1 = u64 [s1 + 0xc8]\n  5198: u64 [a2 + 0x98] = a1\n  5202: a1 = u64 [s1 + 0xd0]\n  5206: u64 [a2 + 0x90] = a1\n  5210: a3 = a0\n  5212: a0 = s1 + 0x16c0\n  5216: a1 = s1 + 0x16a0\n  5220: a2 = u64 [s1 + 0xd8]\n  5224: u64 [a3 + 0x588] = a2\n  5228: ra = 198, jump @784\n      : @186 [@dyn 99] (gas: 29)\n  5234: a1 = s1 + 0x1118\n  5238: a2 = a1 + 0x500\n  5242: a0 = u64 [a2 + 0xb8]\n  5246: u64 [s1 + 0xc8] = a0\n  5250: a0 = u64 [a2 + 0xb0]\n  5254: u64 [s1 + 0xd0] = a0\n  5258: a0 = u64 [a2 + 0xa8]\n  5262: u64 [s1 + 0xd8] = a0\n  5266: a0 = u64 [s1 + 0xe0]\n  5270: u64 [a2 + 0x20] = a0\n  5273: a0 = u64 [s1 + 0xe8]\n  5277: u64 [a2 + 0x18] = a0\n  5280: a0 = u64 [s1 + 0xf0]\n  5284: u64 [a2 + 0x10] = a0\n  5287: a0 = u64 [s1 + 0xf8]\n  5291: u64 [a2 + 0x8] = a0\n  5294: a0 = u64 [s1 + 0x148]\n  5298: u64 [a2 + 0x40] = a0\n  5301: a0 = u64 [s1 + 0x150]\n  5305: u64 [a2 + 0x38] = a0\n  5308: a0 = u64 [s1 + 0x198]\n  5312: u64 [a2 + 0x30] = a0\n  5315: a4 = a1\n  5317: a0 = s1 + 0x1660\n  5321: a1 = s1 + 0x1640\n  5325: a2 = s1 + 0x1620\n  5329: a3 = u64 [s1 + 0x178]\n  5333: u64 [a4 + 0x528] = a3\n  5337: ra = 200, jump @724\n      : @187 [@dyn 100] (gas: 47)\n  5343: a5 = s1 + 0x1118\n  5347: a4 = a5 + 0x500\n  5351: a0 = u64 [a4 + 0x60]\n  5354: u64 [s1 + 0xe0] = a0\n  5358: a0 = u64 [a4 + 0x58]\n  5361: u64 [s1 + 0xe8] = a0\n  5365: a0 = u64 [a4 + 0x50]\n  5368: u64 [s1 + 0xf0] = a0\n  5372: a0 = u64 [a4 + 0x48]\n  5375: u64 [s1 + 0xf8] = a0\n  5379: a1 = u64 [s1 + 0x1b0]\n  5383: a0 = a1 + 0xe4\n  5387: a1 = a0 <u a1\n  5390: a3 = u64 [s1 + 0x1a8]\n  5394: a2 = a3 + a1\n  5397: a3 = a2 <u a3\n  5400: a3 = a1 if a1 == 0\n  5403: a1 = u64 [a4 + 0x80]\n  5407: u64 [s1 + 0x70] = a1\n  5410: a1 = u64 [a4 + 0x78]\n  5413: u64 [s1 + 0x78] = a1\n  5416: a1 = u64 [a4 + 0x70]\n  5419: u64 [s1 + 0x80] = a1\n  5423: a1 = u64 [a4 + 0x68]\n  5426: u64 [s1 + 0xc0] = a1\n  5430: a1 = u64 [s1 + 0x188]\n  5434: a3 = a3 + a1\n  5437: a1 = a3 <u a1\n  5440: a4 = u64 [s1 + 0x190]\n  5444: a1 = a1 + a4\n  5447: a4 = a5 + 0x400\n  5451: u64 [a4 + 0xa0] = a1\n  5455: u64 [a4 + 0x98] = a3\n  5459: u64 [a4 + 0x90] = a2\n  5463: u64 [a4 + 0x88] = a0\n  5467: a0 = u64 [s1 + 0x148]\n  5471: u64 [a4 + 0xc0] = a0\n  5475: a0 = u64 [s1 + 0x150]\n  5479: u64 [a4 + 0xb8] = a0\n  5483: a0 = u64 [s1 + 0x198]\n  5487: u64 [a4 + 0xb0] = a0\n  5491: a0 = s1 + 0x15e0\n  5495: a1 = s1 + 0x15c0\n  5499: a2 = s1 + 0x15a0\n  5503: a3 = u64 [s1 + 0x178]\n  5507: u64 [a4 + 0xa8] = a3\n  5511: ra = 202, jump @724\n      : @188 [@dyn 101] (gas: 3)\n  5517: t0 = 0xcc\n  5521: a1 = s1 + 0x1118\n  5525: fallthrough\n      : @189 [@dyn 102] (gas: 20)\n  5526: a2 = a1 + 0x400\n  5530: a0 = u64 [a2 + 0xe0]\n  5534: u64 [s1 + 0x60] = a0\n  5537: a0 = u64 [a2 + 0xd8]\n  5541: u64 [s1 + 0x68] = a0\n  5544: a0 = u64 [a2 + 0xd0]\n  5548: u64 [s1 + 0x148] = a0\n  5552: a0 = u64 [a2 + 0xc8]\n  5556: u64 [s1 + 0x150] = a0\n  5560: a0 = u64 [a1 + 0x500]\n  5564: u64 [s1 + 0x40] = a0\n  5567: a0 = u64 [a2 + 0xf8]\n  5571: u64 [s1 + 0x48] = a0\n  5574: a0 = u64 [a2 + 0xf0]\n  5578: u64 [s1 + 0x50] = a0\n  5581: a0 = u64 [a2 + 0xe8]\n  5585: u64 [s1 + 0x58] = a0\n  5588: a0 = s1 + 0x1580\n  5592: a1 = 0x40\n  5595: ra = 206, jump @2\n      : @190 [@dyn 103] (gas: 14)\n  5601: a2 = s1 + 0x1118\n  5605: t0 = u64 [a2 + 0x480]\n  5609: a0 = a2 + 0x400\n  5613: a5 = u64 [a0 + 0x78]\n  5616: a4 = u64 [a0 + 0x70]\n  5619: a3 = u64 [a0 + 0x68]\n  5622: a0 = a4 | t0\n  5625: a1 = a3 | a5\n  5628: a1 = a1 | a0\n  5631: a1 = a1 >> 0x20\n  5634: a0 = a0 | a5\n  5637: a0 = a0 << 0x20\n  5640: a0 = a0 | a1\n  5643: jump @192 if a0 == 0\n      : @191 (gas: 1)\n  5646: jump @558\n      : @192 (gas: 15)\n  5649: a0 = u64 [s1 + 0x120]\n  5653: u64 [a2 + 0x448] = a0\n  5657: a0 = u64 [s1 + 0x128]\n  5661: u64 [a2 + 0x450] = a0\n  5665: a0 = u64 [s1 + 0x130]\n  5669: u64 [a2 + 0x458] = a0\n  5673: a1 = s1 + 0x1560\n  5677: a0 = u64 [s1 + 0x138]\n  5681: u64 [a2 + 0x460] = a0\n  5685: a0 = a3\n  5687: u64 [s1 + 0x198] = a3\n  5691: u64 [s1 + 0x190] = a4\n  5695: u64 [s1 + 0x188] = t0\n  5699: u64 [s1 + 0x178] = a5\n  5703: ra = 208, jump @4\n      : @193 [@dyn 104] (gas: 12)\n  5709: a5 = s1 + 0x100\n  5713: a1 = u64 [a5 + 0x98]\n  5717: a0 = u64 [a5 + 0x88]\n  5721: a2 = u64 [a5 + 0x78]\n  5724: a3 = a2 | a0\n  5727: a4 = 0x100000000\n  5737: a0 = 0xffffffe0\n  5747: a0 = a1 <u a0\n  5750: a2 = u64 [a5 + 0x90]\n  5754: a0 = 0 if a2 != 0\n  5756: a0 = 0 if a3 != 0\n  5758: jump @195 if a0 != 0\n      : @194 (gas: 1)\n  5761: jump @558\n      : @195 (gas: 16)\n  5764: i32 a0 = a1 + 0x20\n  5767: a1 = u64 [s1 + 0x98]\n  5771: a2 = s1 + 0x1118\n  5775: u64 [s1 + 0x138] = a3\n  5779: a3 = a2\n  5781: a5 = a2 + 0x400\n  5785: u64 [a5 + 0x28] = a1\n  5788: a1 = u64 [s1 + 0xa0]\n  5792: u64 [a5 + 0x30] = a1\n  5795: a1 = u64 [s1 + 0xa8]\n  5799: u64 [a5 + 0x38] = a1\n  5802: a1 = s1 + 0x1540\n  5806: a2 = u64 [s1 + 0xb0]\n  5810: u64 [a3 + 0x440] = a2\n  5814: u64 [s1 + 0x130] = a4\n  5818: ra = 210, jump @4\n      : @196 [@dyn 105] (gas: 10)\n  5824: a4 = s1 + 0x100\n  5828: a2 = u64 [a4 + 0x90]\n  5832: a1 = u64 [a4 + 0x98]\n  5836: a0 = u64 [a4 + 0x30]\n  5839: a0 = a0 + 0xffffffffffffffc0\n  5842: a0 = a1 <u a0\n  5845: a0 = 0 if a2 != 0\n  5847: a3 = u64 [a4 + 0x38]\n  5850: a0 = 0 if a3 != 0\n  5852: jump @198 if a0 != 0\n      : @197 (gas: 1)\n  5855: jump @558\n      : @198 (gas: 8)\n  5858: i32 a0 = a1 + 0x40\n  5861: a3 = s1 + 0x1118\n  5865: u64 [a3 + 1056] = 0\n  5869: u64 [a3 + 1048] = 0\n  5873: u64 [a3 + 1032] = 0xe0\n  5879: a1 = s1 + 0x1520\n  5883: u64 [a3 + 1040] = 0\n  5887: ra = 212, jump @4\n      : @199 [@dyn 106] (gas: 41)\n  5893: a0 = u64 [s1 + 0x198]\n  5897: a0 = a0 + 0xe0\n  5901: a1 = u64 [s1 + 0x198]\n  5905: a1 = a0 <u a1\n  5908: a3 = u64 [s1 + 0x190]\n  5912: a2 = a3 + a1\n  5915: a3 = a2 <u a3\n  5918: a3 = a1 if a1 == 0\n  5921: a1 = u64 [s1 + 0x178]\n  5925: a3 = a3 + a1\n  5928: a4 = a3 <u a1\n  5931: a1 = u64 [s1 + 0x188]\n  5935: a4 = a4 + a1\n  5938: a1 = s1 + 0x1118\n  5942: a5 = a1 + 0x300\n  5946: u64 [a5 + 0x90] = a2\n  5950: u64 [a5 + 0x88] = a0\n  5954: a0 = u64 [s1 + 0x88]\n  5958: u64 [a5 + 0xc0] = a0\n  5962: a0 = u64 [s1 + 0x90]\n  5966: u64 [a5 + 0xb8] = a0\n  5970: a0 = u64 [s1 + 0xb8]\n  5974: u64 [a5 + 0xb0] = a0\n  5978: a0 = u64 [s1 + 0x100]\n  5982: u64 [a5 + 0xa8] = a0\n  5986: a0 = u64 [s1 + 0x108]\n  5990: u64 [a5 + 0xe0] = a0\n  5994: a0 = u64 [s1 + 0x110]\n  5998: u64 [a5 + 0xd8] = a0\n  6002: a0 = u64 [s1 + 0x118]\n  6006: u64 [a5 + 0xd0] = a0\n  6010: a0 = u64 [s1 + 0x140]\n  6014: u64 [a5 + 0xc8] = a0\n  6018: u64 [a5 + 0x98] = a3\n  6022: a5 = a1\n  6024: a0 = s1 + 0x1500\n  6028: a1 = s1 + 0x14e0\n  6032: a2 = s1 + 0x14c0\n  6036: a3 = s1 + 0x14a0\n  6040: u64 [a5 + 0x3a0] = a4\n  6044: ra = 214, jump @814\n      : @200 [@dyn 107] (gas: 10)\n  6050: a3 = s1 + 0x100\n  6054: a4 = u64 [a3 + 0x98]\n  6058: a2 = 0x100000000\n  6068: a0 = 0xffffffa0\n  6078: a0 = a4 <u a0\n  6081: a1 = u64 [a3 + 0x90]\n  6085: a0 = 0 if a1 != 0\n  6087: a1 = u64 [a3 + 0x38]\n  6090: a0 = 0 if a1 != 0\n  6092: jump @202 if a0 != 0\n      : @201 (gas: 1)\n  6095: jump @558\n      : @202 (gas: 25)\n  6098: a1 = 0xffffffff\n  6108: u64 [s1 + 0x118] = a2\n  6112: a5 = s1 + 0x1118\n  6116: a2 = u64 [a5 + 0x400]\n  6120: u64 [s1 + 0x128] = a2\n  6124: a2 = u64 [a5 + 0x3f8]\n  6128: u64 [s1 + 0x130] = a2\n  6132: a2 = u64 [a5 + 0x3f0]\n  6136: u64 [s1 + 0x140] = a2\n  6140: a2 = u64 [s1 + 0xc8]\n  6144: a2 = a2 & a1\n  6147: a1 = u64 [a5 + 0x3e8]\n  6151: u64 [s1 + 0x120] = a1\n  6155: a1 = u64 [s1 + 0xd0]\n  6159: a1 = a1 & 0xffffffffffffffff\n  6162: a3 = u64 [s1 + 0xd8]\n  6166: a3 = a3 & 0xffffffffffffffff\n  6169: i32 a0 = a4 + 0x60\n  6172: u64 [a5 + 896] = 0\n  6176: a4 = a5 + 0x300\n  6180: u64 [a4 + 0x68] = a3\n  6183: u64 [a4 + 0x70] = a1\n  6186: a1 = s1 + 0x1480\n  6190: u64 [a4 + 0x78] = a2\n  6193: ra = 216, jump @4\n      : @203 [@dyn 108] (gas: 10)\n  6199: a1 = s1 + 0x100\n  6203: a3 = u64 [a1 + 0x38]\n  6206: a5 = u64 [a1 + 0x98]\n  6210: a0 = u64 [a1 + 0x18]\n  6213: a0 = a0 + 0xffffffffffffff80\n  6216: a0 = a5 <u a0\n  6219: a2 = u64 [a1 + 0x90]\n  6223: a0 = 0 if a2 != 0\n  6225: a0 = 0 if a3 != 0\n  6227: jump @205 if a0 != 0\n      : @204 (gas: 1)\n  6230: jump @558\n      : @205 (gas: 32)\n  6233: a1 = u64 [s1 + 0x120]\n  6237: t1 = a1 <u a5\n  6240: t0 = a1\n  6242: a4 = u64 [s1 + 0x140]\n  6246: a1 = a4 ^ a2\n  6249: a2 = a4 <u a2\n  6252: t2 = a4\n  6254: a2 = t1 if a1 == 0\n  6257: a4 = u64 [s1 + 0x178]\n  6261: a1 = u64 [s1 + 0x130]\n  6265: a0 = a1 - a4\n  6268: a3 = a1 <u a4\n  6271: a4 = u64 [s1 + 0x188]\n  6275: a1 = u64 [s1 + 0x128]\n  6279: a4 = a1 - a4\n  6282: a4 = a4 - a3\n  6285: a3 = a0 <u a2\n  6288: a4 = a4 - a3\n  6291: a1 = a0 - a2\n  6294: a2 = u64 [s1 + 0x190]\n  6298: a2 = t2 - a2\n  6301: a2 = a2 - t1\n  6304: a3 = t0 - a5\n  6307: i32 a0 = a5 + 0x80\n  6311: a5 = s1 + 0x1118\n  6315: u64 [a5 + 0x348] = a3\n  6319: a3 = a5 + 0x300\n  6323: u64 [a3 + 0x50] = a2\n  6326: u64 [a3 + 0x58] = a1\n  6329: a1 = s1 + 0x1460\n  6333: u64 [a3 + 0x60] = a4\n  6336: ra = 218, jump @4\n      : @206 [@dyn 109] (gas: 33)\n  6342: a1 = s1 + 0x1118\n  6346: a0 = u64 [s1 + 0x128]\n  6350: a2 = a1 + 0x200\n  6354: u64 [a2 + 0xe0] = a0\n  6358: a0 = u64 [s1 + 0x130]\n  6362: u64 [a2 + 0xd8] = a0\n  6366: a0 = u64 [s1 + 0x140]\n  6370: u64 [a2 + 0xd0] = a0\n  6374: a0 = u64 [s1 + 0x120]\n  6378: u64 [a2 + 0xc8] = a0\n  6382: a0 = u64 [s1 + 0x70]\n  6385: a3 = a1 + 0x300\n  6389: u64 [a3] = a0\n  6391: a0 = u64 [s1 + 0x78]\n  6394: u64 [a2 + 0xf8] = a0\n  6398: a0 = u64 [s1 + 0x80]\n  6402: u64 [a2 + 0xf0] = a0\n  6406: a0 = u64 [s1 + 0xc0]\n  6410: u64 [a2 + 0xe8] = a0\n  6414: a0 = u64 [s1 + 0xe0]\n  6418: u64 [a3 + 0x20] = a0\n  6421: a0 = u64 [s1 + 0xe8]\n  6425: u64 [a3 + 0x18] = a0\n  6428: a0 = u64 [s1 + 0xf0]\n  6432: u64 [a3 + 0x10] = a0\n  6435: a5 = a1\n  6437: a0 = s1 + 0x1440\n  6441: a1 = s1 + 0x1420\n  6445: a2 = s1 + 0x1400\n  6449: a3 = s1 + 0x13e0\n  6453: a4 = u64 [s1 + 0xf8]\n  6457: u64 [a5 + 0x308] = a4\n  6461: ra = 220, jump @814\n      : @207 [@dyn 110] (gas: 11)\n  6467: a2 = s1 + 0x100\n  6471: a4 = u64 [a2 + 0x90]\n  6475: a5 = u64 [a2 + 0x98]\n  6479: a0 = 0x100000000\n  6489: u64 [a2 + 0x40] = a0\n  6492: a0 = 0xffffff60\n  6502: a0 = a5 <u a0\n  6505: a0 = 0 if a4 != 0\n  6507: a1 = u64 [a2 + 0x38]\n  6510: a0 = 0 if a1 != 0\n  6512: jump @209 if a0 != 0\n      : @208 (gas: 1)\n  6515: jump @558\n      : @209 (gas: 36)\n  6518: a2 = s1 + 0x1118\n  6522: t2 = u64 [a2 + 0x328]\n  6526: t0 = u64 [a2 + 0x330]\n  6530: ra = u64 [a2 + 0x340]\n  6534: u64 [s1 + 0x128] = ra\n  6538: a2 = u64 [a2 + 0x338]\n  6542: u64 [s1 + 0x130] = a2\n  6546: t1 = t2 <u a5\n  6549: u64 [s1 + 0x118] = t2\n  6553: a1 = t0 ^ a4\n  6556: a2 = t0 <u a4\n  6559: u64 [s1 + 0x120] = t0\n  6563: a2 = t1 if a1 == 0\n  6566: a3 = u64 [s1 + 0x178]\n  6570: a0 = u64 [s1 + 0x130]\n  6574: a1 = a0 - a3\n  6577: a3 = a0 <u a3\n  6580: a0 = a4\n  6582: a4 = u64 [s1 + 0x188]\n  6586: a4 = ra - a4\n  6589: a4 = a4 - a3\n  6592: a3 = a1 <u a2\n  6595: a4 = a4 - a3\n  6598: a1 = a1 - a2\n  6601: a2 = t0 - a0\n  6604: a2 = a2 - t1\n  6607: a3 = t2 - a5\n  6610: i32 a0 = a5 + 0xa0\n  6614: a5 = s1 + 0x1118\n  6618: u64 [a5 + 0x2a8] = a3\n  6622: a3 = a5 + 0x200\n  6626: u64 [a3 + 0xb0] = a2\n  6630: u64 [a3 + 0xb8] = a1\n  6634: a1 = s1 + 0x13c0\n  6638: u64 [a3 + 0xc0] = a4\n  6642: ra = 222, jump @4\n      : @210 [@dyn 111] (gas: 32)\n  6648: a1 = s1 + 0x1118\n  6652: a0 = u64 [s1 + 0x128]\n  6656: a2 = a1 + 0x200\n  6660: u64 [a2 + 0x40] = a0\n  6663: a0 = u64 [s1 + 0x130]\n  6667: u64 [a2 + 0x38] = a0\n  6670: a0 = u64 [s1 + 0x120]\n  6674: u64 [a2 + 0x30] = a0\n  6677: a0 = u64 [s1 + 0x118]\n  6681: u64 [a2 + 0x28] = a0\n  6684: a0 = u64 [s1 + 0x40]\n  6687: u64 [a2 + 0x60] = a0\n  6690: a0 = u64 [s1 + 0x48]\n  6693: u64 [a2 + 0x58] = a0\n  6696: a0 = u64 [s1 + 0x50]\n  6699: u64 [a2 + 0x50] = a0\n  6702: a0 = u64 [s1 + 0x58]\n  6705: u64 [a2 + 0x48] = a0\n  6708: a0 = u64 [s1 + 0x60]\n  6711: u64 [a2 + 0x80] = a0\n  6715: a0 = u64 [s1 + 0x68]\n  6718: u64 [a2 + 0x78] = a0\n  6721: a0 = u64 [s1 + 0x148]\n  6725: u64 [a2 + 0x70] = a0\n  6728: a5 = a1\n  6730: a0 = s1 + 0x13a0\n  6734: a1 = s1 + 0x1380\n  6738: a2 = s1 + 0x1360\n  6742: a3 = s1 + 0x1340\n  6746: a4 = u64 [s1 + 0x150]\n  6750: u64 [a5 + 0x268] = a4\n  6754: ra = 224, jump @814\n      : @211 [@dyn 112] (gas: 14)\n  6760: a1 = s1 + 0x1118\n  6764: a2 = a1 + 0x200\n  6768: a0 = u64 [a2 + 0xa0]\n  6772: u64 [s1 + 0x130] = a0\n  6776: a0 = u64 [a2 + 0x98]\n  6780: u64 [s1 + 0x128] = a0\n  6784: a0 = u64 [a2 + 0x90]\n  6788: u64 [s1 + 0x148] = a0\n  6792: a0 = u64 [a2 + 0x88]\n  6796: u64 [s1 + 0x150] = a0\n  6800: a0 = s1 + 0x2000\n  6804: i32 a0 = a0 + 0x780\n  6808: ecalli 7 // 'now'\n  6810: fallthrough\n      : @212 (gas: 10)\n  6811: a2 = s1 + 0x100\n  6815: a5 = u64 [a2 + 0x98]\n  6819: a0 = u64 [a2 + 0x40]\n  6822: a0 = a0 + 0xffffffffffffff40\n  6826: a0 = a5 <u a0\n  6829: a1 = u64 [a2 + 0x90]\n  6833: a0 = 0 if a1 != 0\n  6835: a1 = u64 [a2 + 0x38]\n  6838: a0 = 0 if a1 != 0\n  6840: jump @214 if a0 != 0\n      : @213 (gas: 1)\n  6843: jump @558\n      : @214 (gas: 14)\n  6846: a0 = s1 + 0x2118\n  6850: a2 = u64 [a0 + 0x668]\n  6854: a1 = u64 [a0 + 0x670]\n  6858: a3 = u64 [a0 + 0x678]\n  6862: a4 = u64 [a0 + 0x680]\n  6866: i32 a0 = a5 + 0xc0\n  6870: a5 = s1 + 0x1118\n  6874: u64 [a5 + 0x220] = a4\n  6878: a4 = a5 + 0x200\n  6882: u64 [a4 + 0x18] = a3\n  6885: u64 [a4 + 0x10] = a1\n  6888: a1 = s1 + 0x1320\n  6892: u64 [a4 + 0x8] = a2\n  6895: ra = 226, jump @4\n      : @215 [@dyn 113] (gas: 6)\n  6901: a0 = u64 [s1 + 0x180]\n  6905: ra = 0xe4\n  6909: ecalli 3 // 'caller'\n  6911: a0 = 0xffffff9c\n  6921: t0 = 0xe6\n  6925: jump @888\n      : @216 [@dyn 114] (gas: 2)\n  6928: a0 = 0xffffff9c\n  6938: t0 = 230, jump @888\n      : @217 [@dyn 115] (gas: 1)\n  6944: jump @219 if a0 != 0\n      : @218 (gas: 1)\n  6947: jump @558\n      : @219 (gas: 13)\n  6950: a0 = u64 [s1 + 0x1b8]\n  6954: a1 = u32 [a0 + 0x10]\n  6957: u64 [s1 + 0x1a8] = a1\n  6961: a1 = u64 [a0 + 0x8]\n  6964: u64 [s1 + 0x1a0] = a1\n  6968: a0 = u64 [a0]\n  6970: u64 [s1 + 0x1b8] = a0\n  6974: a0 = u64 [s1 + 0x1b0]\n  6978: i32 a1 = a0 + 0x64\n  6981: a0 = s1 + 0x2000\n  6985: i32 a0 = a0 + 0x7a0\n  6989: ecalli 1 // 'call_data_load'\n  6991: fallthrough\n      : @220 (gas: 30)\n  6992: t0 = u64 [s1 + 0x198]\n  6996: t1 = u64 [s1 + 0x150]\n  7000: t2 = t1 <u t0\n  7003: a5 = u64 [s1 + 0x190]\n  7007: a1 = u64 [s1 + 0x148]\n  7011: a3 = a1 ^ a5\n  7014: a2 = a1 <u a5\n  7017: a2 = t2 if a3 == 0\n  7020: a3 = u64 [s1 + 0x178]\n  7024: a4 = u64 [s1 + 0x128]\n  7028: a0 = a4 - a3\n  7031: ra = a4 <u a3\n  7034: a4 = u64 [s1 + 0x188]\n  7038: a3 = u64 [s1 + 0x130]\n  7042: a4 = a3 - a4\n  7045: a4 = a4 - ra\n  7048: a3 = a0 <u a2\n  7051: a4 = a4 - a3\n  7054: a2 = a0 - a2\n  7057: a1 = a1 - a5\n  7060: a0 = a1 - t2\n  7063: a1 = t1 - t0\n  7066: a0 = a0 | a4\n  7069: a3 = a1 | a2\n  7072: a3 = a3 | a0\n  7075: a0 = a0 | a2\n  7078: a3 = a3 >> 0x20\n  7081: a0 = a0 << 0x20\n  7084: a0 = a0 | a3\n  7087: jump @222 if a0 == 0\n      : @221 (gas: 1)\n  7090: jump @558\n      : @222 (gas: 53)\n  7093: a2 = s1 + 0x2118\n  7097: t2 = u64 [a2 + 0x688]\n  7101: ra = u64 [a2 + 0x690]\n  7105: a0 = u64 [a2 + 0x698]\n  7109: a2 = u64 [a2 + 0x6a0]\n  7113: a3 = u64 [s1 + 0x1a0]\n  7117: a3 = reverse a3\n  7119: a4 = a3 << 0x20\n  7122: a5 = u64 [s1 + 0x1a8]\n  7126: a5 = reverse a5\n  7128: a5 = a5 >> 0x20\n  7131: a4 = a4 | a5\n  7134: u64 [s1 + 0x1b0] = a4\n  7138: a4 = u64 [s1 + 0x1b8]\n  7142: a4 = reverse a4\n  7144: a5 = a4 << 0x20\n  7147: a3 = a3 >> 0x20\n  7150: t1 = a5 | a3\n  7153: a3 = a4 >> 0x20\n  7156: t0 = s1 + 0x1118\n  7160: u64 [t0 + 0x1c0] = a2\n  7164: u64 [t0 + 0x1b8] = a0\n  7168: u64 [t0 + 0x1b0] = ra\n  7172: u64 [t0 + 0x1a8] = t2\n  7176: a0 = u64 [s1 + 0x158]\n  7180: u64 [t0 + 0x1d0] = a0\n  7184: a0 = u64 [s1 + 0x160]\n  7188: u64 [t0 + 0x1c8] = a0\n  7192: a0 = u64 [0x200b8]\n  7197: a2 = u64 [0x200c0]\n  7202: a4 = u64 [0x200c8]\n  7207: a5 = u64 [0x200d0]\n  7212: u64 [t0 + 0x200] = a0\n  7216: u64 [t0 + 0x1f8] = a2\n  7220: a2 = t0 + 0x100\n  7224: u64 [a2 + 0xf0] = a4\n  7228: u64 [a2 + 0xe8] = a5\n  7232: u64 [a2 + 0x98] = a3\n  7236: a0 = u64 [s1 + 0x168]\n  7240: u64 [a2 + 0xd8] = a0\n  7244: a0 = u64 [s1 + 0x170]\n  7248: u64 [a2 + 0xe0] = a0\n  7252: u64 [t0 + 0x190] = t1\n  7256: a0 = u64 [s1 + 0x1b0]\n  7260: u64 [a2 + 0x88] = a0\n  7264: a2 = s1 + 0x1300\n  7268: a3 = s1 + 0x12e0\n  7272: a4 = s1 + 0x12c0\n  7276: a5 = s1 + 0x12a0\n  7280: u64 [t0 + 416] = 0\n  7284: a0 = u64 [s1 + 0x198]\n  7288: ra = 0x1fe\n  7292: jump @10\n      : @223 (gas: 9)\n  7295: u64 [a3 + 384] = 0\n  7299: u64 [a3 + 376] = 0\n  7303: u64 [a3 + 368] = 0\n  7307: u64 [a3 + 360] = 0\n  7311: a0 = s1 + 0x3000\n  7315: i32 a0 = a0 + 0xfffffffffffffa80\n  7319: ra = 0xe8\n  7323: ecalli 11 // 'value_transferred'\n  7325: fallthrough\n      : @224 [@dyn 116] (gas: 10)\n  7326: a3 = s1 + 0x2918\n  7330: a4 = a3 + 0x100\n  7334: a0 = u64 [a4 + 0x78]\n  7337: a1 = u64 [a4 + 0x80]\n  7341: a2 = u64 [a4 + 0x70]\n  7344: a3 = u64 [a4 + 0x68]\n  7347: a1 = a1 | a2\n  7350: a0 = a0 | a3\n  7353: a0 = a0 | a1\n  7356: jump @226 if a0 == 0\n      : @225 (gas: 1)\n  7359: jump @612\n      : @226 (gas: 1)\n  7362: t0 = 234, jump @890\n      : @227 [@dyn 117] (gas: 1)\n  7368: jump @229 if a1 <u a0\n      : @228 (gas: 1)\n  7371: jump @612\n      : @229 (gas: 19)\n  7374: a0 = s1 + 0x3000\n  7378: i32 a0 = a0 + 0xfffffffffffffaa0\n  7382: a1 = 0x4\n  7385: ecalli 1 // 'call_data_load'\n  7387: a3 = s1 + 0x2918\n  7391: a4 = a3 + 0x100\n  7395: a0 = u64 [a4 + 0x88]\n  7399: a1 = u64 [a4 + 0x90]\n  7403: a2 = u64 [a4 + 0x98]\n  7407: a3 = u64 [a4 + 0xa0]\n  7411: a4 = s1 + 0x2118\n  7415: a5 = a4 + 0x200\n  7419: u64 [a5 + 0xa0] = a3\n  7423: u64 [a5 + 0x98] = a2\n  7427: u64 [a5 + 0x90] = a1\n  7431: a1 = s1 + 0x23a0\n  7435: u64 [a5 + 0x88] = a0\n  7439: a0 = 0\n  7441: ra = 236, jump @4\n      : @230 [@dyn 118] (gas: 3)\n  7447: t0 = 0xee\n  7451: a2 = s1 + 0x2118\n  7455: fallthrough\n      : @231 [@dyn 119] (gas: 7)\n  7456: u64 [a2 + 640] = 0\n  7460: u64 [a2 + 632] = 0\n  7464: u64 [a2 + 616] = 0x2\n  7469: a0 = 0x20\n  7472: a1 = s1 + 0x2380\n  7476: u64 [a2 + 624] = 0\n  7480: ra = 240, jump @4\n      : @232 [@dyn 120] (gas: 3)\n  7486: a1 = 0x40\n  7489: a0 = 0\n  7491: ra = 242, jump @13\n      : @233 [@dyn 121] (gas: 4)\n  7497: a1 = sp + 0xffffffffffffffe0\n  7500: a1 = a1 & 0xffffffffffffffe0\n  7503: u64 [s1 + 0x1b8] = a1\n  7507: t0 = 244, jump @870\n      : @234 [@dyn 122] (gas: 5)\n  7513: ra = 0xf6\n  7517: ecalli 6 // 'hash_keccak_256'\n  7519: a3 = u64 [s1 + 0x1b8]\n  7523: t0 = 0xf8\n  7527: jump @873\n      : @235 [@dyn 123] (gas: 2)\n  7530: a3 = u64 [s1 + 0x1b8]\n  7534: t0 = 248, jump @873\n      : @236 [@dyn 124] (gas: 8)\n  7540: a5 = a4 + 0x100\n  7544: u64 [a5 + 0xc0] = a3\n  7548: u64 [a5 + 0xb8] = a2\n  7552: u64 [a5 + 0xb0] = a1\n  7556: u64 [a5 + 0xa8] = a0\n  7560: a0 = s1 + 0x2360\n  7564: a1 = s1 + 0x2ac0\n  7568: ra = 250, jump @6\n      : @237 [@dyn 125] (gas: 6)\n  7574: a0 = s1 + 0x2118\n  7578: a0 = u64 [a0 + 0x248]\n  7582: u64 [s1 + 0x1b8] = a0\n  7586: a0 = s1 + 0x2340\n  7590: a1 = 0x40\n  7593: ra = 252, jump @2\n      : @238 [@dyn 126] (gas: 7)\n  7599: a3 = s1 + 0x2118\n  7603: a5 = a3 + 0x200\n  7607: a4 = u64 [a5 + 0x40]\n  7610: a1 = u64 [a5 + 0x38]\n  7613: a2 = u64 [a5 + 0x30]\n  7616: a0 = u64 [a5 + 0x28]\n  7619: t0 = 254, jump @882\n      : @239 [@dyn 127] (gas: 1)\n  7625: jump @241 if a1 == 0\n      : @240 (gas: 1)\n  7628: jump @558\n      : @241 (gas: 1)\n  7631: t0 = 256, jump @889\n      : @242 [@dyn 128] (gas: 6)\n  7637: i32 a1 = a1 + 0x320\n  7641: a1 = a1 + s1\n  7644: u64 [a3 + 528] = 0\n  7648: u64 [s1 + 0x1b8] = a0\n  7652: ra = 0x1c2\n  7656: jump @4\n      : @243 (gas: 10)\n  7659: u64 [a2 + 2016] = 0\n  7663: u64 [a2 + 2008] = 0\n  7667: u64 [a2 + 2000] = 0\n  7671: u64 [a2 + 1992] = 0\n  7675: a0 = s1 + 0x3000\n  7679: i32 a0 = a0 + 0xfffffffffffff8e0\n  7683: ra = 0x102\n  7687: ecalli 11 // 'value_transferred'\n  7689: t0 = 0x104\n  7693: jump @885\n      : @244 [@dyn 129] (gas: 1)\n  7696: t0 = 260, jump @885\n      : @245 [@dyn 130] (gas: 8)\n  7702: a0 = u64 [a4 + 0xd8]\n  7706: a1 = u64 [a4 + 0xe0]\n  7710: a2 = u64 [a4 + 0xd0]\n  7714: a3 = u64 [a4 + 0xc8]\n  7718: a1 = a1 | a2\n  7721: a0 = a0 | a3\n  7724: a0 = a0 | a1\n  7727: jump @247 if a0 == 0\n      : @246 (gas: 1)\n  7730: jump @612\n      : @247 (gas: 3)\n  7733: a0 = u64 [s1 + 0x1b8]\n  7737: a0 = i32 [a0]\n  7739: jump @249 if a0 >u 3\n      : @248 (gas: 1)\n  7743: jump @612\n      : @249 (gas: 3)\n  7746: a0 = s1 + 0x1dc0\n  7750: a1 = u64 [s1 + 0x1b0]\n  7754: ra = 262, jump @6\n      : @250 [@dyn 131] (gas: 12)\n  7760: a1 = s1 + 0x1918\n  7764: a2 = a1 + 0x400\n  7768: a0 = u64 [a2 + 0xb8]\n  7772: a1 = s1 + 0x100\n  7776: u64 [a1 + 0xa8] = a0\n  7780: a0 = u64 [a2 + 0xb0]\n  7784: u64 [a1 + 0xb8] = a0\n  7788: a0 = u64 [a2 + 0xa8]\n  7792: u64 [a1 + 0xb0] = a0\n  7796: a0 = s1 + 0x1da0\n  7800: a1 = 0x40\n  7803: ra = 264, jump @2\n      : @251 [@dyn 132] (gas: 7)\n  7809: a3 = s1 + 0x1918\n  7813: a5 = a3 + 0x400\n  7817: a4 = u64 [a5 + 0xa0]\n  7821: a1 = u64 [a5 + 0x98]\n  7825: a2 = u64 [a5 + 0x90]\n  7829: a0 = u64 [a5 + 0x88]\n  7833: t0 = 266, jump @882\n      : @252 [@dyn 133] (gas: 1)\n  7839: jump @254 if a1 == 0\n      : @253 (gas: 1)\n  7842: jump @558\n      : @254 (gas: 15)\n  7845: a4 = s1 + 0x100\n  7849: a1 = u64 [a4 + 0xa8]\n  7853: a1 = a1 << 0x20\n  7856: a2 = a1 >> 0x20\n  7859: u64 [a3 + 1152] = 0\n  7863: a1 = u64 [a4 + 0xb0]\n  7867: a5 = a3 + 0x400\n  7871: u64 [a5 + 0x68] = a1\n  7874: a1 = u64 [a4 + 0xb8]\n  7878: u64 [a5 + 0x70] = a1\n  7881: a1 = s1 + 0x1d80\n  7885: u64 [a5 + 0x78] = a2\n  7888: u64 [s1 + 0x1b8] = a0\n  7892: ra = 0x1c2\n  7896: jump @4\n      : @255 (gas: 9)\n  7899: u64 [a2 + 928] = 0\n  7903: u64 [a2 + 920] = 0\n  7907: u64 [a2 + 912] = 0\n  7911: u64 [a2 + 904] = 0\n  7915: a0 = s1 + 0x2000\n  7919: i32 a0 = a0 + 0x4a0\n  7923: ra = 0x10c\n  7927: ecalli 11 // 'value_transferred'\n  7929: fallthrough\n      : @256 [@dyn 134] (gas: 10)\n  7930: a3 = s1 + 0x2118\n  7934: a4 = a3 + 0x300\n  7938: a0 = u64 [a4 + 0x98]\n  7942: a1 = u64 [a4 + 0xa0]\n  7946: a2 = u64 [a4 + 0x90]\n  7950: a3 = u64 [a4 + 0x88]\n  7954: a1 = a1 | a2\n  7957: a0 = a0 | a3\n  7960: a0 = a0 | a1\n  7963: jump @258 if a0 == 0\n      : @257 (gas: 1)\n  7966: jump @612\n      : @258 (gas: 1)\n  7969: t0 = 270, jump @890\n      : @259 [@dyn 135] (gas: 1)\n  7975: jump @261 if a1 <u a0\n      : @260 (gas: 1)\n  7978: jump @612\n      : @261 (gas: 5)\n  7981: a0 = s1 + 0x2000\n  7985: i32 a0 = a0 + 0x4c0\n  7989: a1 = 0x4\n  7992: ecalli 1 // 'call_data_load'\n  7994: fallthrough\n      : @262 (gas: 8)\n  7995: a0 = s1 + 0x2118\n  7999: t0 = u64 [a0 + 0x3c0]\n  8003: t1 = u64 [a0 + 0x3b8]\n  8007: a1 = u64 [a0 + 0x3b0]\n  8011: a3 = t1 | t0\n  8014: a2 = a1 <u 0x1\n  8017: a2 = 0 if a3 != 0\n  8019: jump @264 if a2 != 0\n      : @263 (gas: 1)\n  8022: jump @612\n      : @264 (gas: 27)\n  8025: u64 [s1 + 0x180] = a3\n  8029: t2 = u64 [a0 + 0x3a8]\n  8033: a0 = u64 [s1 + 0x1b8]\n  8037: a3 = u32 [a0]\n  8039: a4 = a3 <u t2\n  8042: a5 = a1 >u 0\n  8044: a5 = a4 if a1 == 0\n  8047: a2 = -t1\n  8049: a0 = a2 - a5\n  8052: a2 = a2 <u a5\n  8055: a5 = t1 >u 0\n  8057: a5 = a5 + t0\n  8060: a5 = -a5\n  8062: a5 = a5 - a2\n  8065: a2 = -a1\n  8067: a2 = a2 - a4\n  8070: a3 = a3 - t2\n  8073: a3 = a3 <u 0x64\n  8076: a3 = a3 ^ 0x1\n  8079: a4 = a2 >u 0\n  8081: a4 = a3 if a2 == 0\n  8084: a2 = a5 >s 0\n  8086: a3 = a0 >u 0\n  8088: a3 = a2 if a5 != 0\n  8091: a0 = a0 | a5\n  8094: a4 = a3 if a0 != 0\n  8097: jump @266 if a4 != 0\n      : @265 (gas: 1)\n  8100: jump @612\n      : @266 (gas: 23)\n  8103: a0 = t2 + 0x4\n  8106: u64 [s1 + 0x1b8] = a0\n  8110: u64 [s1 + 0x188] = t2\n  8114: a0 = a0 <u t2\n  8117: a2 = a1 + a0\n  8120: u64 [s1 + 0x1b0] = a2\n  8124: u64 [s1 + 0x178] = a1\n  8128: a2 = a2 <u a1\n  8131: a2 = a0 if a0 == 0\n  8134: a2 = a2 + t1\n  8137: u64 [s1 + 0x1a8] = a2\n  8141: a0 = a2 <u t1\n  8144: a0 = a0 + t0\n  8147: u64 [s1 + 0x1a0] = a0\n  8151: a0 = 0x30230\n  8156: u64 [s1 + 0x198] = a0\n  8160: i32 a0 = a0 + 0\n  8162: u64 [s1 + 0x170] = a0\n  8166: ra = 0x110\n  8170: ecalli 3 // 'caller'\n  8172: a2 = u64 [s1 + 0x198]\n  8176: t0 = 0x112\n  8180: jump @880\n      : @267 [@dyn 136] (gas: 2)\n  8183: a2 = u64 [s1 + 0x198]\n  8187: t0 = 274, jump @880\n      : @268 [@dyn 137] (gas: 9)\n  8193: a2 = s1 + 0x1118\n  8197: u64 [a2 + 384] = 0\n  8201: a4 = a2 + 0x100\n  8205: u64 [a4 + 0x78] = a1\n  8208: u64 [a4 + 0x70] = a0\n  8211: a1 = s1 + 0x1280\n  8215: u64 [a4 + 0x68] = a3\n  8218: a0 = 0\n  8220: ra = 276, jump @4\n      : @269 [@dyn 138] (gas: 8)\n  8226: a2 = s1 + 0x1118\n  8230: u64 [a2 + 352] = 0\n  8234: u64 [a2 + 344] = 0\n  8238: u64 [a2 + 328] = 0x1\n  8243: a0 = 0x20\n  8246: a1 = s1 + 0x1260\n  8250: u64 [a2 + 336] = 0\n  8254: ra = 278, jump @4\n      : @270 [@dyn 139] (gas: 3)\n  8260: a1 = 0x40\n  8263: a0 = 0\n  8265: ra = 280, jump @13\n      : @271 [@dyn 140] (gas: 4)\n  8271: a1 = sp + 0xffffffffffffffe0\n  8274: a1 = a1 & 0xffffffffffffffe0\n  8277: u64 [s1 + 0x190] = a1\n  8281: t0 = 282, jump @870\n      : @272 [@dyn 141] (gas: 4)\n  8287: ra = 0x11c\n  8291: ecalli 6 // 'hash_keccak_256'\n  8293: t0 = 0x11e\n  8297: jump @881\n      : @273 [@dyn 142] (gas: 1)\n  8300: t0 = 286, jump @881\n      : @274 [@dyn 143] (gas: 8)\n  8306: a5 = a4 + 0x300\n  8310: u64 [a5 + 0xe0] = a3\n  8314: u64 [a5 + 0xd8] = a2\n  8318: u64 [a5 + 0xd0] = a1\n  8322: u64 [a5 + 0xc8] = a0\n  8326: a0 = s1 + 0x1240\n  8330: a1 = s1 + 0x24e0\n  8334: ra = 288, jump @6\n      : @275 [@dyn 144] (gas: 10)\n  8340: a1 = s1 + 0x1118\n  8344: a0 = u8 [a1 + 0x128]\n  8348: u64 [a1 + 288] = 0\n  8352: u64 [a1 + 280] = 0\n  8356: u64 [a1 + 0x108] = a0\n  8360: a0 = s1 + 0x1220\n  8364: u64 [a1 + 272] = 0\n  8368: ra = 0x122\n  8372: t0 = 0x30c\n  8376: jump @859\n      : @276 [@dyn 145] (gas: 18)\n  8379: a5 = s1 + 0x100\n  8383: a2 = u64 [a5 + 0xa0]\n  8387: a4 = s1 + 0x1118\n  8391: u64 [a4 + 0xc0] = a2\n  8395: a1 = u64 [a5 + 0xa8]\n  8399: u64 [a4 + 0xb8] = a1\n  8403: a0 = u64 [a5 + 0xb0]\n  8407: u64 [a4 + 0xb0] = a0\n  8411: a3 = u64 [a5 + 0xb8]\n  8415: u64 [a4 + 0xa8] = a3\n  8419: u64 [a4 + 0xe0] = a2\n  8423: u64 [a4 + 0xd8] = a1\n  8427: u64 [a4 + 0xd0] = a0\n  8431: a0 = s1 + 0x1200\n  8435: a1 = s1 + 0x11e0\n  8439: a2 = s1 + 0x11c0\n  8443: u64 [a4 + 0xc8] = a3\n  8447: ra = 292, jump @825\n      : @277 [@dyn 146] (gas: 2)\n  8453: a1 = s1 + 0x1118\n  8457: fallthrough\n      : @278 (gas: 12)\n  8458: a0 = u64 [a1 + 0x100]\n  8462: a2 = u64 [a1 + 0xf8]\n  8466: a3 = u64 [a1 + 0xf0]\n  8470: a1 = u64 [a1 + 0xe8]\n  8474: a0 = a0 | a3\n  8477: a3 = a1 | a2\n  8480: a3 = a3 | a0\n  8483: a3 = a3 >> 0x20\n  8486: a0 = a0 | a2\n  8489: a0 = a0 << 0x20\n  8492: a0 = a0 | a3\n  8495: jump @280 if a0 == 0\n      : @279 (gas: 1)\n  8498: jump @558\n      : @280 (gas: 18)\n  8501: i32 a1 = a1 + 0\n  8503: a0 = s1 + 0x2000\n  8507: i32 a0 = a0 + 0x500\n  8511: ecalli 1 // 'call_data_load'\n  8513: a3 = s1 + 0x2118\n  8517: a4 = a3 + 0x300\n  8521: a0 = u64 [a4 + 0xe8]\n  8525: a1 = u64 [a4 + 0xf0]\n  8529: a2 = u64 [a4 + 0xf8]\n  8533: a3 = u64 [a3 + 0x400]\n  8537: a4 = s1 + 0x1118\n  8541: u64 [a4 + 0xa0] = a3\n  8545: u64 [a4 + 0x98] = a2\n  8549: u64 [a4 + 0x90] = a1\n  8553: a1 = s1 + 0x11a0\n  8557: u64 [a4 + 0x88] = a0\n  8561: a0 = 0\n  8563: ra = 294, jump @4\n      : @281 [@dyn 147] (gas: 8)\n  8569: a2 = s1 + 0x1118\n  8573: u64 [a2 + 128] = 0\n  8577: u64 [a2 + 120] = 0\n  8580: u64 [a2 + 104] = 0x2\n  8584: a0 = 0x20\n  8587: a1 = s1 + 0x1180\n  8591: u64 [a2 + 112] = 0\n  8594: ra = 296, jump @4\n      : @282 [@dyn 148] (gas: 3)\n  8600: a1 = 0x40\n  8603: a0 = 0\n  8605: ra = 298, jump @13\n      : @283 [@dyn 149] (gas: 4)\n  8611: a1 = sp + 0xffffffffffffffe0\n  8614: a1 = a1 & 0xffffffffffffffe0\n  8617: u64 [s1 + 0x190] = a1\n  8621: t0 = 300, jump @870\n      : @284 [@dyn 150] (gas: 4)\n  8627: ra = 0x12e\n  8631: ecalli 6 // 'hash_keccak_256'\n  8633: t0 = 0x130\n  8637: jump @881\n      : @285 [@dyn 151] (gas: 1)\n  8640: t0 = 304, jump @881\n      : @286 [@dyn 152] (gas: 8)\n  8646: a5 = a4 + 0x400\n  8650: u64 [a5 + 0x20] = a3\n  8653: u64 [a5 + 0x18] = a2\n  8656: u64 [a5 + 0x10] = a1\n  8659: u64 [a5 + 0x8] = a0\n  8662: a0 = s1 + 0x1160\n  8666: a1 = s1 + 0x2520\n  8670: ra = 306, jump @6\n      : @287 [@dyn 153] (gas: 10)\n  8676: a1 = s1 + 0x1118\n  8680: a0 = u8 [a1 + 0x48]\n  8683: u64 [a1 + 64] = 0\n  8686: u64 [a1 + 56] = 0\n  8689: u64 [a1 + 0x28] = a0\n  8692: a0 = s1 + 0x1140\n  8696: u64 [a1 + 48] = 0\n  8699: ra = 0x134\n  8703: t0 = 0x3e0\n  8707: jump @859\n      : @288 [@dyn 154] (gas: 21)\n  8710: a5 = s1 + 0x100\n  8714: a2 = u64 [a5 + 0xa0]\n  8718: a4 = s1 + 0x7ff\n  8722: a4 = a4 + 0x119\n  8726: u64 [a4 + 0x7e0] = a2\n  8730: a1 = u64 [a5 + 0xa8]\n  8734: u64 [a4 + 0x7d8] = a1\n  8738: a0 = u64 [a5 + 0xb0]\n  8742: u64 [a4 + 0x7d0] = a0\n  8746: a3 = u64 [a5 + 0xb8]\n  8750: u64 [a4 + 0x7c8] = a3\n  8754: a4 = s1 + 0x1118\n  8758: u64 [a4] = a2\n  8760: a5 = a4 + 0xffffffffffffff00\n  8764: u64 [a5 + 0xf8] = a1\n  8768: u64 [a5 + 0xf0] = a0\n  8772: a0 = s1 + 0x1120\n  8776: a1 = s1 + 0x1100\n  8780: a2 = s1 + 0x10e0\n  8784: u64 [a5 + 0xe8] = a3\n  8788: ra = 310, jump @825\n      : @289 [@dyn 155] (gas: 7)\n  8794: a1 = s1 + 0x1118\n  8798: a0 = u64 [a1 + 0x8]\n  8801: a2 = u64 [a1 + 0x20]\n  8804: a3 = u64 [a1 + 0x10]\n  8807: a4 = u64 [a1 + 0x18]\n  8810: a1 = a0 + 0x20\n  8813: t0 = 312, jump @860\n      : @290 [@dyn 156] (gas: 1)\n  8819: jump @292 if a0 == 0\n      : @291 (gas: 1)\n  8822: jump @558\n      : @292 (gas: 24)\n  8825: i32 a1 = a1 + 0\n  8827: a0 = s1 + 0x2000\n  8831: i32 a0 = a0 + 0x540\n  8835: ecalli 1 // 'call_data_load'\n  8837: a3 = s1 + 0x2118\n  8841: a4 = a3 + 0x400\n  8845: a0 = u64 [a4 + 0x38]\n  8848: a1 = u64 [a4 + 0x40]\n  8851: a2 = u64 [a4 + 0x30]\n  8854: a3 = u64 [a4 + 0x28]\n  8857: a1 = a1 | a2\n  8860: a0 = a0 | a3\n  8863: a0 = a0 | a1\n  8866: a0 = a0 >u 0\n  8868: a1 = s1 + 0x7ff\n  8872: a1 = a1 + 0x119\n  8876: u64 [a1 + 1984] = 0\n  8880: u64 [a1 + 1976] = 0\n  8884: u64 [a1 + 0x7a8] = a0\n  8888: a0 = s1 + 0x10c0\n  8892: u64 [a1 + 1968] = 0\n  8896: ra = 0x13a\n  8900: t0 = 0x32c\n  8904: jump @859\n      : @293 [@dyn 157] (gas: 20)\n  8907: a5 = s1 + 0x100\n  8911: a2 = u64 [a5 + 0xa0]\n  8915: a4 = s1 + 0x7ff\n  8919: a4 = a4 + 0x119\n  8923: u64 [a4 + 0x760] = a2\n  8927: a1 = u64 [a5 + 0xa8]\n  8931: u64 [a4 + 0x758] = a1\n  8935: a0 = u64 [a5 + 0xb0]\n  8939: u64 [a4 + 0x750] = a0\n  8943: a3 = u64 [a5 + 0xb8]\n  8947: a5 = a4 + 0x700\n  8951: u64 [a5 + 0x48] = a3\n  8954: u64 [a5 + 0x80] = a2\n  8958: u64 [a5 + 0x78] = a1\n  8961: u64 [a5 + 0x70] = a0\n  8964: a0 = s1 + 0x10a0\n  8968: a1 = s1 + 0x1080\n  8972: a2 = s1 + 0x1060\n  8976: u64 [a5 + 0x68] = a3\n  8979: ra = 316, jump @825\n      : @294 [@dyn 158] (gas: 9)\n  8985: a1 = s1 + 0x7ff\n  8989: a1 = a1 + 0x119\n  8993: a5 = a1 + 0x700\n  8997: a0 = u64 [a5 + 0x88]\n  9001: a2 = u64 [a5 + 0xa0]\n  9005: a3 = u64 [a5 + 0x90]\n  9009: a4 = u64 [a5 + 0x98]\n  9013: a1 = a0 + 0x40\n  9016: t0 = 318, jump @860\n      : @295 [@dyn 159] (gas: 1)\n  9022: jump @297 if a0 == 0\n      : @296 (gas: 1)\n  9025: jump @558\n      : @297 (gas: 24)\n  9028: i32 a1 = a1 + 0\n  9030: a0 = s1 + 0x2000\n  9034: i32 a0 = a0 + 0x560\n  9038: ecalli 1 // 'call_data_load'\n  9040: a3 = s1 + 0x2118\n  9044: a4 = a3 + 0x400\n  9048: a0 = u64 [a4 + 0x58]\n  9051: a1 = u64 [a4 + 0x60]\n  9054: a2 = u64 [a4 + 0x50]\n  9057: a3 = u64 [a4 + 0x48]\n  9060: a1 = a1 | a2\n  9063: a0 = a0 | a3\n  9066: a0 = a0 | a1\n  9069: a0 = a0 >u 0\n  9071: a1 = s1 + 0x7ff\n  9075: a1 = a1 + 0x119\n  9079: u64 [a1 + 1856] = 0\n  9083: u64 [a1 + 1848] = 0\n  9087: u64 [a1 + 0x728] = a0\n  9091: a0 = s1 + 0x1040\n  9095: u64 [a1 + 1840] = 0\n  9099: ra = 0x140\n  9103: t0 = 0x34c\n  9107: jump @859\n      : @298 [@dyn 160] (gas: 21)\n  9110: a3 = u64 [s1 + 0x1a0]\n  9114: a5 = s1 + 0x7ff\n  9118: a5 = a5 + 0x119\n  9122: u64 [a5 + 0x6e0] = a3\n  9126: a2 = u64 [s1 + 0x1a8]\n  9130: u64 [a5 + 0x6d8] = a2\n  9134: a1 = u64 [s1 + 0x1b0]\n  9138: u64 [a5 + 0x6d0] = a1\n  9142: a0 = u64 [s1 + 0x1b8]\n  9146: u64 [a5 + 0x6c8] = a0\n  9150: a4 = a0\n  9152: u64 [a5 + 0x700] = a3\n  9156: a3 = a5 + 0x600\n  9160: u64 [a3 + 0xf8] = a2\n  9164: u64 [a3 + 0xf0] = a1\n  9168: a0 = s1 + 0x1020\n  9172: a1 = s1 + 0x1000\n  9176: a2 = s1 + 0x7ff\n  9180: a2 = a2 + 0x7e1\n  9184: u64 [a3 + 0xe8] = a4\n  9188: ra = 322, jump @825\n      : @299 [@dyn 161] (gas: 31)\n  9194: a4 = s1 + 0x7ff\n  9198: a4 = a4 + 0x119\n  9202: a1 = a4 + 0x700\n  9206: a0 = u64 [a1 + 0x8]\n  9209: t0 = u64 [a4 + 0x720]\n  9213: a2 = u64 [a1 + 0x10]\n  9216: a3 = u64 [a1 + 0x18]\n  9219: t2 = a0 + 0x80\n  9223: a5 = t2 <u a0\n  9226: t1 = a2 + a5\n  9229: a1 = t1 <u a2\n  9232: a1 = a5 if a5 == 0\n  9235: a1 = a1 + a3\n  9238: a5 = a1 <u a3\n  9241: a5 = a5 + t0\n  9244: u64 [a4 + 0x648] = t2\n  9248: u64 [a4 + 0x680] = t0\n  9252: u64 [a4 + 0x678] = a3\n  9256: a3 = a4 + 0x600\n  9260: u64 [a3 + 0x70] = a2\n  9263: u64 [a3 + 0x68] = a0\n  9266: u64 [a4 + 0x650] = t1\n  9270: u64 [a3 + 0x58] = a1\n  9273: a0 = s1 + 0x7ff\n  9277: a0 = a0 + 0x7a1\n  9281: a1 = s1 + 0x7ff\n  9285: a1 = a1 + 0x781\n  9289: a2 = s1 + 0x7ff\n  9293: a2 = a2 + 0x761\n  9297: u64 [a3 + 0x60] = a5\n  9300: ra = 324, jump @724\n      : @300 [@dyn 162] (gas: 20)\n  9306: a4 = s1 + 0x7ff\n  9310: a4 = a4 + 0x119\n  9314: a5 = a4 + 0x600\n  9318: a0 = u64 [a5 + 0xb8]\n  9322: a1 = u64 [a5 + 0xc0]\n  9326: a2 = u64 [a5 + 0xb0]\n  9330: a3 = u64 [a5 + 0xa8]\n  9334: a1 = a1 | a2\n  9337: a0 = a0 | a3\n  9340: a0 = a0 | a1\n  9343: a0 = a0 >u 0\n  9345: u64 [a4 + 1600] = 0\n  9349: u64 [a4 + 1592] = 0\n  9353: u64 [a5 + 0x28] = a0\n  9356: a0 = s1 + 0x7ff\n  9360: a0 = a0 + 0x741\n  9364: u64 [a4 + 1584] = 0\n  9368: ra = 0x146\n  9372: t0 = 0x370\n  9376: jump @859\n      : @301 [@dyn 163] (gas: 22)\n  9379: a2 = u64 [s1 + 0x1a0]\n  9383: a4 = s1 + 0x7ff\n  9387: a4 = a4 + 0x119\n  9391: a5 = a4 + 0x500\n  9395: u64 [a5 + 0xe0] = a2\n  9399: a1 = u64 [s1 + 0x1a8]\n  9403: u64 [a5 + 0xd8] = a1\n  9407: a0 = u64 [s1 + 0x1b0]\n  9411: u64 [a5 + 0xd0] = a0\n  9415: a3 = u64 [s1 + 0x1b8]\n  9419: u64 [a5 + 0xc8] = a3\n  9423: u64 [a4 + 0x600] = a2\n  9427: u64 [a5 + 0xf8] = a1\n  9431: u64 [a5 + 0xf0] = a0\n  9435: a0 = s1 + 0x7ff\n  9439: a0 = a0 + 0x721\n  9443: a1 = s1 + 0x7ff\n  9447: a1 = a1 + 0x701\n  9451: a2 = s1 + 0x7ff\n  9455: a2 = a2 + 0x6e1\n  9459: u64 [a5 + 0xe8] = a3\n  9463: ra = 328, jump @825\n      : @302 [@dyn 164] (gas: 31)\n  9469: a4 = s1 + 0x7ff\n  9473: a4 = a4 + 0x119\n  9477: a1 = a4 + 0x600\n  9481: a0 = u64 [a1 + 0x8]\n  9484: t0 = u64 [a4 + 0x620]\n  9488: a2 = u64 [a1 + 0x10]\n  9491: a3 = u64 [a1 + 0x18]\n  9494: t2 = a0 + 0xc0\n  9498: a5 = t2 <u a0\n  9501: t1 = a2 + a5\n  9504: a1 = t1 <u a2\n  9507: a1 = a5 if a5 == 0\n  9510: a1 = a1 + a3\n  9513: a5 = a1 <u a3\n  9516: a5 = a5 + t0\n  9519: u64 [a4 + 0x548] = t2\n  9523: u64 [a4 + 0x580] = t0\n  9527: u64 [a4 + 0x578] = a3\n  9531: a3 = a4 + 0x500\n  9535: u64 [a3 + 0x70] = a2\n  9538: u64 [a3 + 0x68] = a0\n  9541: u64 [a4 + 0x550] = t1\n  9545: u64 [a3 + 0x58] = a1\n  9548: a0 = s1 + 0x7ff\n  9552: a0 = a0 + 0x6a1\n  9556: a1 = s1 + 0x7ff\n  9560: a1 = a1 + 0x681\n  9564: a2 = s1 + 0x7ff\n  9568: a2 = a2 + 0x661\n  9572: u64 [a3 + 0x60] = a5\n  9575: ra = 330, jump @724\n      : @303 [@dyn 165] (gas: 20)\n  9581: a4 = s1 + 0x7ff\n  9585: a4 = a4 + 0x119\n  9589: a5 = a4 + 0x500\n  9593: a0 = u64 [a5 + 0xb8]\n  9597: a1 = u64 [a5 + 0xc0]\n  9601: a2 = u64 [a5 + 0xb0]\n  9605: a3 = u64 [a5 + 0xa8]\n  9609: a1 = a1 | a2\n  9612: a0 = a0 | a3\n  9615: a0 = a0 | a1\n  9618: a0 = a0 >u 0\n  9620: u64 [a4 + 1344] = 0\n  9624: u64 [a4 + 1336] = 0\n  9628: u64 [a5 + 0x28] = a0\n  9631: a0 = s1 + 0x7ff\n  9635: a0 = a0 + 0x641\n  9639: u64 [a4 + 1328] = 0\n  9643: ra = 0x14c\n  9647: t0 = 0x390\n  9651: jump @859\n      : @304 [@dyn 166] (gas: 23)\n  9654: a0 = s1 + 0x7ff\n  9658: a0 = a0 + 0x119\n  9662: a4 = u64 [s1 + 0x1a0]\n  9666: a5 = a0 + 0x400\n  9670: u64 [a5 + 0xe0] = a4\n  9674: a2 = u64 [s1 + 0x1a8]\n  9678: u64 [a5 + 0xd8] = a2\n  9682: a1 = u64 [s1 + 0x1b0]\n  9686: u64 [a5 + 0xd0] = a1\n  9690: a3 = u64 [s1 + 0x1b8]\n  9694: u64 [a5 + 0xc8] = a3\n  9698: u64 [a0 + 0x500] = a4\n  9702: u64 [a5 + 0xf8] = a2\n  9706: u64 [a5 + 0xf0] = a1\n  9710: a4 = a0\n  9712: a0 = s1 + 0x7ff\n  9716: a0 = a0 + 0x621\n  9720: a1 = s1 + 0x7ff\n  9724: a1 = a1 + 0x601\n  9728: a2 = s1 + 0x7ff\n  9732: a2 = a2 + 0x5e1\n  9736: u64 [a4 + 0x4e8] = a3\n  9740: ra = 334, jump @825\n      : @305 [@dyn 167] (gas: 26)\n  9746: a1 = s1 + 0x7ff\n  9750: a1 = a1 + 0x119\n  9754: a4 = a1 + 0x500\n  9758: a0 = u64 [a4 + 0x8]\n  9761: t0 = u64 [a1 + 0x520]\n  9765: a2 = u64 [a4 + 0x10]\n  9768: a3 = u64 [a4 + 0x18]\n  9771: a4 = a0 + 0xa0\n  9775: a0 = a4 <u a0\n  9778: a5 = a2 + a0\n  9781: a2 = a5 <u a2\n  9784: a2 = a0 if a0 == 0\n  9787: a2 = a2 + a3\n  9790: a0 = a2 <u a3\n  9793: a3 = t0 + a0\n  9796: a0 = a1 + 0x400\n  9800: u64 [a0 + 0x88] = a4\n  9804: u64 [a0 + 0x90] = a5\n  9808: u64 [a0 + 0x98] = a2\n  9812: a2 = a1\n  9814: a0 = s1 + 0x7ff\n  9818: a0 = a0 + 0x5c1\n  9822: a1 = s1 + 0x7ff\n  9826: a1 = a1 + 0x5a1\n  9830: u64 [a2 + 0x4a0] = a3\n  9834: ra = 336, jump @784\n      : @306 [@dyn 168] (gas: 18)\n  9840: a3 = s1 + 0x7ff\n  9844: a3 = a3 + 0x119\n  9848: a0 = u32 [a3 + 0x4b8]\n  9852: a4 = a3 + 0x400\n  9856: a1 = u64 [a4 + 0xa8]\n  9860: a2 = u64 [a4 + 0xb0]\n  9864: a0 = a0 | a1\n  9867: a0 = a0 | a2\n  9870: a0 = a0 >u 0\n  9872: u64 [a3 + 1152] = 0\n  9876: u64 [a3 + 1144] = 0\n  9880: u64 [a4 + 0x68] = a0\n  9883: a0 = s1 + 0x7ff\n  9887: a0 = a0 + 0x581\n  9891: u64 [a3 + 1136] = 0\n  9895: ra = 0x152\n  9899: t0 = 0x3b6\n  9903: jump @859\n      : @307 [@dyn 169] (gas: 9)\n  9906: a0 = 0xffffffbc\n  9916: a3 = s1 + 0x100\n  9920: a1 = u64 [a3 + 0x88]\n  9924: a0 = a1 <u a0\n  9927: a2 = u64 [a3 + 0x78]\n  9930: a0 = 0 if a2 != 0\n  9932: a2 = u64 [a3 + 0x80]\n  9936: a0 = 0 if a2 != 0\n  9938: jump @309 if a0 != 0\n      : @308 (gas: 1)\n  9941: jump @558\n      : @309 (gas: 5)\n  9944: i32 a1 = a1 + 0x44\n  9947: a0 = s1 + 0x2000\n  9951: i32 a0 = a0 + 0x580\n  9955: ecalli 1 // 'call_data_load'\n  9957: fallthrough\n      : @310 (gas: 17)\n  9958: a0 = s1 + 0x2118\n  9962: t0 = u64 [a0 + 0x480]\n  9966: a1 = a0 + 0x400\n  9970: a4 = u64 [a1 + 0x78]\n  9973: a5 = u64 [a1 + 0x70]\n  9976: a3 = u64 [a1 + 0x68]\n  9979: a0 = a5 | t0\n  9982: a1 = a3 | a4\n  9985: a0 = a0 | a1\n  9988: a2 = s1 + 0x7ff\n  9992: a2 = a2 + 0x119\n  9996: u64 [s1 + 0x190] = t0\n 10000: a1 = s1 + 0x100\n 10004: u64 [a1 + 0x80] = a4\n 10008: u64 [a1 + 0x78] = a5\n 10011: u64 [a1 + 0x68] = a3\n 10014: jump @312 if a0 != 0\n      : @311 (gas: 1)\n 10017: jump @559\n      : @312 (gas: 9)\n 10020: a0 = a2 + 0x400\n 10024: u64 [a0 + 0x48] = a3\n 10027: u64 [a0 + 0x50] = a5\n 10030: u64 [a0 + 0x58] = a4\n 10033: a1 = s1 + 0x7ff\n 10037: a1 = a1 + 0x561\n 10041: u64 [a2 + 0x460] = t0\n 10045: a0 = 0\n 10047: ra = 340, jump @4\n      : @313 [@dyn 170] (gas: 16)\n 10053: a0 = s1 + 0x7ff\n 10057: a0 = a0 + 0x119\n 10061: u64 [a0 + 1088] = 0\n 10065: a0 = s1 + 0x7ff\n 10069: a0 = a0 + 0x119\n 10073: u64 [a0 + 1080] = 0\n 10077: a1 = s1 + 0x7ff\n 10081: a1 = a1 + 0x119\n 10085: u64 [a1 + 1064] = 0x2\n 10090: a0 = 0x20\n 10093: a1 = s1 + 0x7ff\n 10097: a1 = a1 + 0x541\n 10101: a2 = s1 + 0x7ff\n 10105: a2 = a2 + 0x119\n 10109: u64 [a2 + 1072] = 0\n 10113: ra = 342, jump @4\n      : @314 [@dyn 171] (gas: 3)\n 10119: a1 = 0x40\n 10122: a0 = 0\n 10124: ra = 344, jump @13\n      : @315 [@dyn 172] (gas: 4)\n 10130: a1 = sp + 0xffffffffffffffe0\n 10133: a1 = a1 & 0xffffffffffffffe0\n 10136: u64 [s1 + 0x160] = a1\n 10140: t0 = 346, jump @870\n      : @316 [@dyn 173] (gas: 20)\n 10146: ecalli 6 // 'hash_keccak_256'\n 10148: a3 = u64 [s1 + 0x160]\n 10152: a0 = u64 [a3 + 0x18]\n 10155: a1 = u64 [a3 + 0x10]\n 10158: a2 = u64 [a3 + 0x8]\n 10161: a3 = u64 [a3]\n 10163: a0 = reverse a0\n 10165: a1 = reverse a1\n 10167: a2 = reverse a2\n 10169: a3 = reverse a3\n 10171: a4 = s1 + 0x2118\n 10175: a5 = a4 + 0x400\n 10179: u64 [a5 + 0xa0] = a3\n 10183: u64 [a5 + 0x98] = a2\n 10187: u64 [a5 + 0x90] = a1\n 10191: u64 [a5 + 0x88] = a0\n 10195: a0 = s1 + 0x7ff\n 10199: a0 = a0 + 0x521\n 10203: a1 = s1 + 0x25a0\n 10207: ra = 348, jump @6\n      : @317 [@dyn 174] (gas: 4)\n 10213: a2 = s1 + 0x7ff\n 10217: a2 = a2 + 0x119\n 10221: a0 = u8 [a2 + 0x408]\n 10225: jump @319 if a0 == 0\n      : @318 (gas: 1)\n 10228: jump @559\n      : @319 (gas: 4)\n 10231: a0 = s1 + 0x7ff\n 10235: a0 = a0 + 0x501\n 10239: a1 = 0x40\n 10242: ra = 350, jump @2\n      : @320 [@dyn 175] (gas: 15)\n 10248: a2 = s1 + 0x7ff\n 10252: a2 = a2 + 0x119\n 10256: t0 = u64 [a2 + 0x400]\n 10260: a1 = a2 + 0x300\n 10264: a5 = u64 [a1 + 0xf8]\n 10268: a4 = u64 [a1 + 0xf0]\n 10272: a0 = u64 [a1 + 0xe8]\n 10276: a3 = a4 | t0\n 10279: a1 = a0 | a5\n 10282: a1 = a1 | a3\n 10285: a1 = a1 >> 0x20\n 10288: a3 = a3 | a5\n 10291: a3 = a3 << 0x20\n 10294: a1 = a1 | a3\n 10297: jump @322 if a1 == 0\n      : @321 (gas: 1)\n 10300: jump @558\n      : @322 (gas: 12)\n 10303: u64 [a2 + 984] = 0\n 10307: u64 [a2 + 976] = 0\n 10311: u64 [a2 + 968] = 0\n 10315: a3 = 0x8c379a000000000\n 10325: a1 = s1 + 0x7ff\n 10329: a1 = a1 + 0x4e1\n 10333: u64 [a2 + 0x3e0] = a3\n 10337: u64 [s1 + 0x1b8] = a0\n 10341: u64 [s1 + 0x1b0] = a4\n 10345: u64 [s1 + 0x1a0] = t0\n 10349: u64 [s1 + 0x1a8] = a5\n 10353: ra = 352, jump @4\n      : @323 [@dyn 176] (gas: 6)\n 10359: a5 = s1 + 0x100\n 10363: a1 = u64 [a5 + 0xb8]\n 10367: a0 = u64 [a5 + 0xa8]\n 10371: a3 = u64 [a5 + 0xa0]\n 10375: a3 = a3 | a0\n 10378: t0 = 354, jump @862\n      : @324 [@dyn 177] (gas: 1)\n 10384: jump @326 if a0 != 0\n      : @325 (gas: 1)\n 10387: jump @558\n      : @326 (gas: 13)\n 10390: i32 a0 = a1 + 0x4\n 10393: a2 = s1 + 0x7ff\n 10397: a2 = a2 + 0x119\n 10401: u64 [a2 + 960] = 0\n 10405: u64 [a2 + 952] = 0\n 10409: u64 [a2 + 944] = 0\n 10413: a5 = 0x20\n 10416: a1 = s1 + 0x7ff\n 10420: a1 = a1 + 0x4c1\n 10424: u64 [a2 + 0x3a8] = a5\n 10428: u64 [s1 + 0x1a8] = a3\n 10432: u64 [s1 + 0x1a0] = a4\n 10436: ra = 356, jump @4\n      : @327 [@dyn 178] (gas: 1)\n 10442: t0 = 358, jump @867\n      : @328 [@dyn 179] (gas: 1)\n 10448: jump @330 if a0 != 0\n      : @329 (gas: 1)\n 10451: jump @558\n      : @330 (gas: 10)\n 10454: i32 a0 = a1 + 0x24\n 10457: a2 = s1 + 0x7ff\n 10461: a2 = a2 + 0x119\n 10465: u64 [a2 + 928] = 0\n 10469: u64 [a2 + 920] = 0\n 10473: u64 [a2 + 904] = 0x20\n 10478: a1 = s1 + 0x7ff\n 10482: a1 = a1 + 0x4a1\n 10486: u64 [a2 + 912] = 0\n 10490: ra = 360, jump @4\n      : @331 [@dyn 180] (gas: 1)\n 10496: t0 = 362, jump @863\n      : @332 [@dyn 181] (gas: 1)\n 10502: jump @334 if a0 != 0\n      : @333 (gas: 1)\n 10505: jump @558\n      : @334 (gas: 16)\n 10508: i32 a0 = a3 + 0x44\n 10511: a1 = u64 [0x200d8]\n 10516: a4 = s1 + 0x7ff\n 10520: a4 = a4 + 0x119\n 10524: a5 = a4 + 0x300\n 10528: u64 [a5 + 0x80] = a1\n 10532: a1 = u64 [0x200e0]\n 10537: a2 = u64 [0x200e8]\n 10542: a3 = u64 [0x200f0]\n 10547: u64 [a5 + 0x78] = a1\n 10550: u64 [a5 + 0x70] = a2\n 10553: a1 = s1 + 0x7ff\n 10557: a1 = a1 + 0x481\n 10561: u64 [a5 + 0x68] = a3\n 10564: ra = 0x26c\n 10568: jump @4\n      : @335 (gas: 9)\n 10571: u64 [a2 + 768] = 0\n 10575: u64 [a2 + 760] = 0\n 10579: u64 [a2 + 752] = 0\n 10583: u64 [a2 + 744] = 0\n 10587: a0 = s1 + 0x2000\n 10591: i32 a0 = a0 + 0x400\n 10595: ra = 0x16c\n 10599: ecalli 11 // 'value_transferred'\n 10601: fallthrough\n      : @336 [@dyn 182] (gas: 10)\n 10602: a3 = s1 + 0x2118\n 10606: a4 = a3 + 0x200\n 10610: a0 = u64 [a4 + 0xf8]\n 10614: a1 = u64 [a3 + 0x300]\n 10618: a2 = u64 [a4 + 0xf0]\n 10622: a3 = u64 [a4 + 0xe8]\n 10626: a1 = a1 | a2\n 10629: a0 = a0 | a3\n 10632: a0 = a0 | a1\n 10635: jump @338 if a0 == 0\n      : @337 (gas: 1)\n 10638: jump @612\n      : @338 (gas: 1)\n 10641: t0 = 366, jump @890\n      : @339 [@dyn 183] (gas: 1)\n 10647: jump @341 if a1 <u a0\n      : @340 (gas: 1)\n 10650: jump @612\n      : @341 (gas: 6)\n 10653: a0 = s1 + 0x2000\n 10657: i32 a0 = a0 + 0x420\n 10661: a1 = 0x4\n 10664: ra = 0x170\n 10668: ecalli 1 // 'call_data_load'\n 10670: fallthrough\n      : @342 [@dyn 184] (gas: 4)\n 10671: a4 = s1 + 0x2118\n 10675: a0 = u64 [a4 + 0x318]\n 10679: a1 = u64 [a4 + 0x320]\n 10683: t0 = 370, jump @875\n      : @343 [@dyn 185] (gas: 1)\n 10689: jump @345 if a3 != 0\n      : @344 (gas: 1)\n 10692: jump @612\n      : @345 (gas: 10)\n 10695: a1 = u64 [a4 + 0x310]\n 10699: u64 [s1 + 0x1a8] = a1\n 10703: a1 = u64 [a4 + 0x308]\n 10707: u64 [s1 + 0x1b8] = a1\n 10711: a0 = a0 << 0x20\n 10714: a0 = a0 >> 0x20\n 10717: u64 [s1 + 0x1a0] = a0\n 10721: a0 = s1 + 0x460\n 10725: a1 = u64 [s1 + 0x1b0]\n 10729: ra = 372, jump @6\n      : @346 [@dyn 186] (gas: 14)\n 10735: a0 = u64 [s1 + 0x468]\n 10739: u64 [s1 + 0x1b0] = a0\n 10743: a0 = u64 [s1 + 0x460]\n 10747: u64 [s1 + 0x198] = a0\n 10751: a0 = u32 [s1 + 0x470]\n 10755: u64 [s1 + 0x190] = a0\n 10759: a0 = 0x30230\n 10764: u64 [s1 + 0x188] = a0\n 10768: i32 a0 = a0 + 0\n 10770: ra = 0x176\n 10774: ecalli 3 // 'caller'\n 10776: a2 = u64 [s1 + 0x188]\n 10780: t0 = 0x178\n 10784: jump @871\n      : @347 [@dyn 187] (gas: 2)\n 10787: a2 = u64 [s1 + 0x188]\n 10791: t0 = 376, jump @871\n      : @348 [@dyn 188] (gas: 17)\n 10797: a2 = u64 [s1 + 0x190]\n 10801: a1 = a1 ^ a2\n 10804: a2 = u64 [s1 + 0x198]\n 10808: a0 = a0 ^ a2\n 10811: a0 = a0 | a1\n 10814: a1 = u64 [s1 + 0x1b0]\n 10818: a1 = a1 ^ a3\n 10821: a0 = a0 | a1\n 10824: a0 = a0 <u 0x1\n 10827: u64 [s1 + 1112] = 0\n 10831: u64 [s1 + 1104] = 0\n 10835: u64 [s1 + 0x440] = a0\n 10839: a0 = s1 + 0x440\n 10843: u64 [s1 + 1096] = 0\n 10847: ra = 0x17a\n 10851: t0 = 0x2ec\n 10855: jump @859\n      : @349 [@dyn 189] (gas: 7)\n 10858: a2 = s1 + 0x100\n 10862: a0 = u64 [a2 + 0xa8]\n 10866: a1 = u64 [a2 + 0xb8]\n 10870: a0 = a0 | a1\n 10873: a1 = u64 [a2 + 0xa0]\n 10877: a0 = a0 | a1\n 10880: jump @474 if a0 != 0\n      : @350 (gas: 3)\n 10884: a0 = s1 + 0x240\n 10888: a1 = 0x40\n 10891: ra = 380, jump @2\n      : @351 [@dyn 190] (gas: 13)\n 10897: a1 = s1 + 0x200\n 10901: a4 = u64 [a1 + 0x58]\n 10904: a5 = u64 [a1 + 0x50]\n 10907: a3 = u64 [a1 + 0x48]\n 10910: a0 = u64 [a1 + 0x40]\n 10913: a2 = a3 | a4\n 10916: a1 = a0 | a5\n 10919: a1 = a1 | a2\n 10922: a1 = a1 >> 0x20\n 10925: a2 = a2 | a5\n 10928: a2 = a2 << 0x20\n 10931: a1 = a1 | a2\n 10934: jump @353 if a1 == 0\n      : @352 (gas: 1)\n 10937: jump @558\n      : @353 (gas: 11)\n 10940: u64 [s1 + 560] = 0\n 10944: u64 [s1 + 552] = 0\n 10948: u64 [s1 + 544] = 0\n 10952: a2 = 0x8c379a000000000\n 10962: a1 = s1 + 0x220\n 10966: u64 [s1 + 0x238] = a2\n 10970: u64 [s1 + 0x1b8] = a0\n 10974: u64 [s1 + 0x1b0] = a3\n 10978: u64 [s1 + 0x1a8] = a4\n 10982: u64 [s1 + 0x1a0] = a5\n 10986: ra = 382, jump @4\n      : @354 [@dyn 191] (gas: 6)\n 10992: a5 = s1 + 0x100\n 10996: a1 = u64 [a5 + 0xb8]\n 11000: a0 = u64 [a5 + 0xa8]\n 11004: a3 = u64 [a5 + 0xa0]\n 11008: a3 = a3 | a0\n 11011: t0 = 384, jump @862\n      : @355 [@dyn 192] (gas: 1)\n 11017: jump @357 if a0 != 0\n      : @356 (gas: 1)\n 11020: jump @558\n      : @357 (gas: 9)\n 11023: i32 a0 = a1 + 0x4\n 11026: u64 [s1 + 536] = 0\n 11030: u64 [s1 + 528] = 0\n 11034: u64 [s1 + 512] = 0x20\n 11039: a1 = s1 + 0x200\n 11043: u64 [s1 + 520] = 0\n 11047: u64 [s1 + 0x1a8] = a3\n 11051: u64 [s1 + 0x1a0] = a4\n 11055: ra = 386, jump @4\n      : @358 [@dyn 193] (gas: 1)\n 11061: t0 = 388, jump @868\n      : @359 [@dyn 194] (gas: 1)\n 11067: jump @361 if a0 != 0\n      : @360 (gas: 1)\n 11070: jump @558\n      : @361 (gas: 7)\n 11073: i32 a0 = a1 + 0x24\n 11076: u64 [s1 + 504] = 0\n 11080: u64 [s1 + 496] = 0\n 11084: u64 [s1 + 480] = 0x18\n 11089: a1 = s1 + 0x1e0\n 11093: u64 [s1 + 488] = 0\n 11097: ra = 390, jump @4\n      : @362 [@dyn 195] (gas: 1)\n 11103: t0 = 392, jump @883\n      : @363 [@dyn 196] (gas: 1)\n 11109: jump @365 if a0 != 0\n      : @364 (gas: 1)\n 11112: jump @558\n      : @365 (gas: 12)\n 11115: i32 a0 = a2 + 0x44\n 11118: a1 = u64 [0x20020]\n 11123: a2 = u64 [0x20148]\n 11128: a3 = u64 [0x20150]\n 11133: a4 = s1 + 0x100\n 11137: u64 [a4 + 0xd8] = a1\n 11141: u64 [a4 + 0xd0] = a2\n 11145: u64 [a4 + 0xc8] = a3\n 11149: a1 = s1 + 0x1c0\n 11153: u64 [s1 + 448] = 0\n 11157: ra = 0x26c\n 11161: jump @4\n      : @366 (gas: 9)\n 11164: u64 [a3 + 96] = 0\n 11167: u64 [a3 + 88] = 0\n 11170: u64 [a3 + 80] = 0\n 11173: u64 [a3 + 72] = 0\n 11176: a0 = s1 + 0x3000\n 11180: i32 a0 = a0 + 0xfffffffffffff960\n 11184: ra = 0x18a\n 11188: ecalli 11 // 'value_transferred'\n 11190: fallthrough\n      : @367 [@dyn 197] (gas: 9)\n 11191: a3 = s1 + 0x2918\n 11195: a0 = u64 [a3 + 0x58]\n 11198: a1 = u64 [a3 + 0x60]\n 11201: a2 = u64 [a3 + 0x50]\n 11204: a3 = u64 [a3 + 0x48]\n 11207: a1 = a1 | a2\n 11210: a0 = a0 | a3\n 11213: a0 = a0 | a1\n 11216: jump @369 if a0 == 0\n      : @368 (gas: 1)\n 11219: jump @612\n      : @369 (gas: 1)\n 11222: t0 = 396, jump @890\n      : @370 [@dyn 198] (gas: 1)\n 11228: jump @372 if a1 <u a0\n      : @371 (gas: 1)\n 11231: jump @612\n      : @372 (gas: 6)\n 11234: a0 = s1 + 0x3000\n 11238: i32 a0 = a0 + 0xfffffffffffff980\n 11242: a1 = 0x4\n 11245: ra = 0x18e\n 11249: ecalli 1 // 'call_data_load'\n 11251: fallthrough\n      : @373 [@dyn 199] (gas: 4)\n 11252: a4 = s1 + 0x2918\n 11256: a0 = u64 [a4 + 0x78]\n 11259: a1 = u64 [a4 + 0x80]\n 11263: t0 = 400, jump @875\n      : @374 [@dyn 200] (gas: 1)\n 11269: jump @376 if a3 != 0\n      : @375 (gas: 1)\n 11272: jump @612\n      : @376 (gas: 12)\n 11275: a1 = u64 [a4 + 0x70]\n 11278: u64 [s1 + 0x1a8] = a1\n 11282: a1 = u64 [a4 + 0x68]\n 11285: u64 [s1 + 0x1b8] = a1\n 11289: a2 = 0xffffffff\n 11299: u64 [s1 + 0x190] = a2\n 11303: a0 = a0 << 0x20\n 11306: a0 = a0 >> 0x20\n 11309: u64 [s1 + 0x1a0] = a0\n 11313: a0 = s1 + 0x2120\n 11317: a1 = u64 [s1 + 0x1b0]\n 11321: ra = 402, jump @6\n      : @377 [@dyn 201] (gas: 22)\n 11327: a0 = s1 + 0x2118\n 11331: a1 = u64 [a0 + 0x10]\n 11334: u64 [s1 + 0x188] = a1\n 11338: a2 = u64 [a0 + 0x8]\n 11341: u64 [s1 + 0x180] = a2\n 11345: a3 = u64 [a0 + 0x18]\n 11348: u64 [s1 + 0x178] = a3\n 11352: a0 = a1 & 0xffffffffffffffff\n 11355: u64 [s1 + 0x1b0] = a0\n 11359: a0 = a2 & 0xffffffffffffffff\n 11362: u64 [s1 + 0x198] = a0\n 11366: a0 = u64 [s1 + 0x190]\n 11370: a0 = a0 & a3\n 11373: u64 [s1 + 0x190] = a0\n 11377: a0 = 0x30230\n 11382: u64 [s1 + 0x170] = a0\n 11386: i32 a0 = a0 + 0\n 11388: ra = 0x194\n 11392: ecalli 3 // 'caller'\n 11394: a2 = u64 [s1 + 0x170]\n 11398: t0 = 0x196\n 11402: jump @871\n      : @378 [@dyn 202] (gas: 2)\n 11405: a2 = u64 [s1 + 0x170]\n 11409: t0 = 406, jump @871\n      : @379 [@dyn 203] (gas: 20)\n 11415: a2 = u64 [s1 + 0x178]\n 11419: a2 = a2 << 0x20\n 11422: a2 = a2 >> 0x20\n 11425: a1 = a1 ^ a2\n 11428: a2 = u64 [s1 + 0x180]\n 11432: a0 = a0 ^ a2\n 11435: a0 = a0 | a1\n 11438: a1 = u64 [s1 + 0x188]\n 11442: a1 = a1 ^ a3\n 11445: a0 = a0 | a1\n 11448: a0 = a0 <u 0x1\n 11451: a1 = s1 + 0x2118\n 11455: u64 [a1 + 0] = 0\n 11457: u64 [a1 + 4294967288] = 0\n 11460: u64 [a1 + 0xffffffffffffffe8] = a0\n 11463: a0 = s1 + 0x2100\n 11467: u64 [a1 + 4294967280] = 0\n 11470: ra = 0x198\n 11474: t0 = 0x2ec\n 11478: jump @859\n      : @380 [@dyn 204] (gas: 13)\n 11481: a4 = s1 + 0x100\n 11485: a0 = u64 [a4 + 0xa0]\n 11489: a1 = u64 [a4 + 0x90]\n 11493: a0 = a0 ^ a1\n 11496: a1 = u64 [a4 + 0xb8]\n 11500: a2 = u64 [a4 + 0x98]\n 11504: a1 = a1 ^ a2\n 11507: a2 = u64 [a4 + 0xa8]\n 11511: a3 = u64 [a4 + 0xb0]\n 11515: a2 = a2 ^ a3\n 11518: a1 = a1 | a2\n 11521: a0 = a0 | a1\n 11524: jump @493 if a0 != 0\n      : @381 (gas: 3)\n 11528: a0 = s1 + 0x1f00\n 11532: a1 = 0x40\n 11535: ra = 410, jump @2\n      : @382 [@dyn 205] (gas: 2)\n 11541: a2 = s1 + 0x1918\n 11545: fallthrough\n      : @383 (gas: 13)\n 11546: t0 = u64 [a2 + 0x600]\n 11550: a1 = a2 + 0x500\n 11554: a5 = u64 [a1 + 0xf8]\n 11558: a4 = u64 [a1 + 0xf0]\n 11562: a0 = u64 [a1 + 0xe8]\n 11566: a3 = a4 | t0\n 11569: a1 = a0 | a5\n 11572: a1 = a1 | a3\n 11575: a1 = a1 >> 0x20\n 11578: a3 = a3 | a5\n 11581: a3 = a3 << 0x20\n 11584: a1 = a1 | a3\n 11587: jump @385 if a1 == 0\n      : @384 (gas: 1)\n 11590: jump @558\n      : @385 (gas: 11)\n 11593: u64 [a2 + 1496] = 0\n 11597: u64 [a2 + 1488] = 0\n 11601: u64 [a2 + 1480] = 0\n 11605: a3 = 0x8c379a000000000\n 11615: a1 = s1 + 0x1ee0\n 11619: u64 [a2 + 0x5e0] = a3\n 11623: u64 [s1 + 0x1b8] = a0\n 11627: u64 [s1 + 0x1b0] = a4\n 11631: u64 [s1 + 0x1a0] = t0\n 11635: u64 [s1 + 0x1a8] = a5\n 11639: ra = 412, jump @4\n      : @386 [@dyn 206] (gas: 6)\n 11645: a5 = s1 + 0x100\n 11649: a1 = u64 [a5 + 0xb8]\n 11653: a0 = u64 [a5 + 0xa8]\n 11657: a3 = u64 [a5 + 0xa0]\n 11661: a3 = a3 | a0\n 11664: t0 = 414, jump @862\n      : @387 [@dyn 207] (gas: 1)\n 11670: jump @389 if a0 != 0\n      : @388 (gas: 1)\n 11673: jump @558\n      : @389 (gas: 1)\n 11676: t0 = 416, jump @892\n      : @390 [@dyn 208] (gas: 8)\n 11682: u64 [a2 + 1472] = 0\n 11686: u64 [a2 + 1464] = 0\n 11690: u64 [a2 + 1448] = 0x20\n 11695: a1 = s1 + 0x1ec0\n 11699: u64 [a2 + 1456] = 0\n 11703: u64 [s1 + 0x1a8] = a3\n 11707: u64 [s1 + 0x1a0] = a4\n 11711: ra = 418, jump @4\n      : @391 [@dyn 209] (gas: 1)\n 11717: t0 = 420, jump @868\n      : @392 [@dyn 210] (gas: 1)\n 11723: jump @394 if a0 != 0\n      : @393 (gas: 1)\n 11726: jump @558\n      : @394 (gas: 8)\n 11729: i32 a0 = a1 + 0x24\n 11732: a3 = s1 + 0x1918\n 11736: u64 [a3 + 1440] = 0\n 11740: u64 [a3 + 1432] = 0\n 11744: u64 [a3 + 1416] = 0x13\n 11749: a1 = s1 + 0x1ea0\n 11753: u64 [a3 + 1424] = 0\n 11757: ra = 422, jump @4\n      : @395 [@dyn 211] (gas: 1)\n 11763: t0 = 424, jump @863\n      : @396 [@dyn 212] (gas: 1)\n 11769: jump @398 if a0 != 0\n      : @397 (gas: 1)\n 11772: jump @558\n      : @398 (gas: 13)\n 11775: i32 a0 = a3 + 0x44\n 11778: a1 = u64 [0x20070]\n 11783: a2 = u64 [0x20078]\n 11788: a4 = s1 + 0x1918\n 11792: a3 = a4 + 0x500\n 11796: u64 [a3 + 0x80] = a1\n 11800: u64 [a3 + 0x78] = a2\n 11803: a1 = 0x6e65720000000000\n 11813: u64 [a3 + 0x70] = a1\n 11816: a1 = s1 + 0x1e80\n 11820: u64 [a4 + 1384] = 0\n 11824: ra = 0x26c\n 11828: jump @4\n      : @399 (gas: 9)\n 11831: u64 [a3 + 0] = 0\n 11833: u64 [a3 + 4294967288] = 0\n 11836: u64 [a3 + 4294967280] = 0\n 11839: u64 [a3 + 4294967272] = 0\n 11842: a0 = s1 + 0x3000\n 11846: i32 a0 = a0 + 0xfffffffffffff900\n 11850: ra = 0x1aa\n 11854: ecalli 11 // 'value_transferred'\n 11856: fallthrough\n      : @400 [@dyn 213] (gas: 10)\n 11857: a3 = s1 + 0x2918\n 11861: a4 = a3 + 0xffffffffffffff00\n 11865: a0 = u64 [a4 + 0xf8]\n 11869: a1 = u64 [a3]\n 11871: a2 = u64 [a4 + 0xf0]\n 11875: a3 = u64 [a4 + 0xe8]\n 11879: a1 = a1 | a2\n 11882: a0 = a0 | a3\n 11885: a0 = a0 | a1\n 11888: jump @402 if a0 == 0\n      : @401 (gas: 1)\n 11891: jump @612\n      : @402 (gas: 1)\n 11894: t0 = 428, jump @890\n      : @403 [@dyn 214] (gas: 1)\n 11900: jump @405 if a1 <u a0\n      : @404 (gas: 1)\n 11903: jump @612\n      : @405 (gas: 18)\n 11906: a0 = s1 + 0x3000\n 11910: i32 a0 = a0 + 0xfffffffffffff920\n 11914: a1 = 0x4\n 11917: ecalli 1 // 'call_data_load'\n 11919: a3 = s1 + 0x2918\n 11923: a0 = u64 [a3 + 0x8]\n 11926: a1 = u64 [a3 + 0x10]\n 11929: a2 = u64 [a3 + 0x18]\n 11932: a3 = u64 [a3 + 0x20]\n 11935: a4 = s1 + 0x1918\n 11939: a5 = a4 + 0x500\n 11943: u64 [a5 + 0x60] = a3\n 11946: u64 [a5 + 0x58] = a2\n 11949: u64 [a5 + 0x50] = a1\n 11952: a1 = s1 + 0x1e60\n 11956: u64 [a5 + 0x48] = a0\n 11959: a0 = 0\n 11961: ra = 430, jump @4\n      : @406 [@dyn 215] (gas: 3)\n 11967: t0 = 0x1b0\n 11971: a2 = s1 + 0x1918\n 11975: fallthrough\n      : @407 [@dyn 216] (gas: 7)\n 11976: u64 [a2 + 1344] = 0\n 11980: u64 [a2 + 1336] = 0\n 11984: u64 [a2 + 1320] = 0x2\n 11989: a0 = 0x20\n 11992: a1 = s1 + 0x1e40\n 11996: u64 [a2 + 1328] = 0\n 12000: ra = 434, jump @4\n      : @408 [@dyn 217] (gas: 3)\n 12006: a1 = 0x40\n 12009: a0 = 0\n 12011: ra = 436, jump @13\n      : @409 [@dyn 218] (gas: 4)\n 12017: a1 = sp + 0xffffffffffffffe0\n 12020: a1 = a1 & 0xffffffffffffffe0\n 12023: u64 [s1 + 0x1b8] = a1\n 12027: t0 = 438, jump @870\n      : @410 [@dyn 219] (gas: 5)\n 12033: ra = 0x1b8\n 12037: ecalli 6 // 'hash_keccak_256'\n 12039: a3 = u64 [s1 + 0x1b8]\n 12043: t0 = 0x1ba\n 12047: jump @873\n      : @411 [@dyn 220] (gas: 2)\n 12050: a3 = u64 [s1 + 0x1b8]\n 12054: t0 = 442, jump @873\n      : @412 [@dyn 221] (gas: 7)\n 12060: u64 [a4 + 0x40] = a3\n 12063: u64 [a4 + 0x38] = a2\n 12066: u64 [a4 + 0x30] = a1\n 12069: u64 [a4 + 0x28] = a0\n 12072: a0 = s1 + 0x1e20\n 12076: a1 = s1 + 0x2940\n 12080: ra = 444, jump @6\n      : @413 [@dyn 222] (gas: 6)\n 12086: a0 = s1 + 0x1918\n 12090: a0 = u64 [a0 + 0x508]\n 12094: u64 [s1 + 0x1b8] = a0\n 12098: a0 = s1 + 0x1e00\n 12102: a1 = 0x40\n 12105: ra = 446, jump @2\n      : @414 [@dyn 223] (gas: 7)\n 12111: a3 = s1 + 0x1918\n 12115: a4 = u64 [a3 + 0x500]\n 12119: a5 = a3 + 0x400\n 12123: a1 = u64 [a5 + 0xf8]\n 12127: a2 = u64 [a5 + 0xf0]\n 12131: a0 = u64 [a5 + 0xe8]\n 12135: t0 = 448, jump @882\n      : @415 [@dyn 224] (gas: 1)\n 12141: jump @417 if a1 == 0\n      : @416 (gas: 1)\n 12144: jump @558\n      : @417 (gas: 9)\n 12147: a1 = u8 [s1 + 0x1b8]\n 12151: a1 = a1 >u 0\n 12153: u64 [a3 + 1248] = 0\n 12157: u64 [a3 + 1240] = 0\n 12161: u64 [a3 + 0x4c8] = a1\n 12165: a1 = s1 + 0x1de0\n 12169: u64 [a3 + 1232] = 0\n 12173: u64 [s1 + 0x1b8] = a0\n 12177: ra = 450, jump @4\n      : @418 [@dyn 225] (gas: 3)\n 12183: a1 = 0x20\n 12186: a0 = u64 [s1 + 0x1b8]\n 12190: ra = 452, jump @13\n      : @419 [@dyn 226] (gas: 5)\n 12196: i32 a1 = a0 + 0\n 12198: a2 = 0x20\n 12201: a0 = 0\n 12203: ecalli 8 // 'seal_return'\n 12205: fallthrough\n      : @420 (gas: 1)\n 12206: jump @422 if a0 == 2112858400\n      : @421 (gas: 1)\n 12213: jump @615\n      : @422 (gas: 10)\n 12216: u64 [a2 + 1824] = 0\n 12220: u64 [a2 + 1816] = 0\n 12224: u64 [a2 + 1808] = 0\n 12228: u64 [a2 + 1800] = 0\n 12232: a0 = s1 + 0x3000\n 12236: i32 a0 = a0 + 0xfffffffffffff820\n 12240: ra = 0x1c6\n 12244: ecalli 11 // 'value_transferred'\n 12246: t0 = 0x1c8\n 12250: jump @885\n      : @423 [@dyn 227] (gas: 1)\n 12253: t0 = 456, jump @885\n      : @424 [@dyn 228] (gas: 8)\n 12259: a0 = u64 [a4 + 0x18]\n 12262: a1 = u64 [a4 + 0x20]\n 12265: a2 = u64 [a4 + 0x10]\n 12268: a3 = u64 [a4 + 0x8]\n 12271: a1 = a1 | a2\n 12274: a0 = a0 | a3\n 12277: a0 = a0 | a1\n 12280: jump @426 if a0 == 0\n      : @425 (gas: 1)\n 12283: jump @612\n      : @426 (gas: 3)\n 12286: a0 = u64 [s1 + 0x1b8]\n 12290: a0 = i32 [a0]\n 12292: jump @428 if a0 >u 67\n      : @427 (gas: 1)\n 12296: jump @612\n      : @428 (gas: 21)\n 12299: a0 = s1 + 0x3000\n 12303: i32 a0 = a0 + 0xfffffffffffff840\n 12307: a1 = 0x4\n 12310: ecalli 1 // 'call_data_load'\n 12312: a1 = s1 + 0x2118\n 12316: a2 = a1 + 0x700\n 12320: a0 = u64 [a2 + 0x40]\n 12323: u64 [s1 + 0x1a0] = a0\n 12327: a0 = u64 [a2 + 0x38]\n 12330: u64 [s1 + 0x1a8] = a0\n 12334: a0 = u64 [a2 + 0x30]\n 12337: u64 [s1 + 0x1b0] = a0\n 12341: a0 = u64 [a2 + 0x28]\n 12344: u64 [s1 + 0x1b8] = a0\n 12348: a0 = s1 + 0x3000\n 12352: i32 a0 = a0 + 0xfffffffffffff860\n 12356: a1 = 0x24\n 12359: ra = 0x1ca\n 12363: ecalli 1 // 'call_data_load'\n 12365: t0 = 0x1cc\n 12369: jump @885\n      : @429 [@dyn 229] (gas: 1)\n 12372: t0 = 460, jump @885\n      : @430 [@dyn 230] (gas: 14)\n 12378: a2 = u64 [a4 + 0x60]\n 12381: a0 = u64 [a4 + 0x58]\n 12384: a1 = u64 [a4 + 0x48]\n 12387: a3 = u64 [a4 + 0x50]\n 12390: a4 = s1 + 0x100\n 12394: u64 [a4 + 0x68] = a0\n 12397: u64 [a4 + 0x60] = a2\n 12400: a0 = a0 | a2\n 12403: u64 [a4 + 0x70] = a1\n 12406: a1 = a1 <u 0x4\n 12409: u64 [a4 + 0x58] = a3\n 12412: a1 = 0 if a3 != 0\n 12414: a1 = 0 if a0 != 0\n 12416: jump @432 if a1 != 0\n      : @431 (gas: 1)\n 12419: jump @617\n      : @432 (gas: 9)\n 12422: a0 = 0x30230\n 12427: u64 [s1 + 0x198] = a0\n 12431: i32 a0 = a0 + 0\n 12433: u64 [s1 + 0x150] = a0\n 12437: ra = 0x1ce\n 12441: ecalli 3 // 'caller'\n 12443: a2 = u64 [s1 + 0x198]\n 12447: t0 = 0x1d0\n 12451: jump @874\n      : @433 [@dyn 231] (gas: 2)\n 12454: a2 = u64 [s1 + 0x198]\n 12458: t0 = 464, jump @874\n      : @434 [@dyn 232] (gas: 8)\n 12464: u64 [a2 + 1120] = 0\n 12468: a4 = a2 + 0x400\n 12472: u64 [a4 + 0x58] = a1\n 12475: u64 [a4 + 0x50] = a0\n 12478: a1 = s1 + 0x1d60\n 12482: u64 [a4 + 0x48] = a3\n 12485: a0 = 0\n 12487: ra = 466, jump @4\n      : @435 [@dyn 233] (gas: 3)\n 12493: t0 = 0x1d4\n 12497: a2 = s1 + 0x1918\n 12501: fallthrough\n      : @436 [@dyn 234] (gas: 7)\n 12502: u64 [a2 + 1088] = 0\n 12506: u64 [a2 + 1080] = 0\n 12510: u64 [a2 + 1064] = 0x1\n 12515: a0 = 0x20\n 12518: a1 = s1 + 0x1d40\n 12522: u64 [a2 + 1072] = 0\n 12526: ra = 470, jump @4\n      : @437 [@dyn 235] (gas: 3)\n 12532: a1 = 0x40\n 12535: a0 = 0\n 12537: ra = 472, jump @13\n      : @438 [@dyn 236] (gas: 4)\n 12543: a1 = sp + 0xffffffffffffffe0\n 12546: a1 = a1 & 0xffffffffffffffe0\n 12549: u64 [s1 + 0x190] = a1\n 12553: t0 = 474, jump @870\n      : @439 [@dyn 237] (gas: 4)\n 12559: ra = 0x1dc\n 12563: ecalli 6 // 'hash_keccak_256'\n 12565: t0 = 0x1de\n 12569: jump @878\n      : @440 [@dyn 238] (gas: 1)\n 12572: t0 = 478, jump @878\n      : @441 [@dyn 239] (gas: 7)\n 12578: u64 [a5 + 0x80] = a3\n 12582: u64 [a5 + 0x78] = a2\n 12585: u64 [a5 + 0x70] = a1\n 12588: u64 [a5 + 0x68] = a0\n 12591: a0 = s1 + 0x1d20\n 12595: a1 = s1 + 0x2880\n 12599: ra = 480, jump @6\n      : @442 [@dyn 240] (gas: 10)\n 12605: a1 = s1 + 0x1918\n 12609: a0 = u8 [a1 + 0x408]\n 12613: u64 [a1 + 1024] = 0\n 12617: u64 [a1 + 1016] = 0\n 12621: u64 [a1 + 0x3e8] = a0\n 12625: a0 = s1 + 0x1d00\n 12629: u64 [a1 + 1008] = 0\n 12633: ra = 0x1e2\n 12637: t0 = 0x30c\n 12641: jump @859\n      : @443 [@dyn 241] (gas: 13)\n 12644: a0 = u64 [s1 + 0x1a0]\n 12648: a2 = s1 + 0x1918\n 12652: a3 = a2 + 0x300\n 12656: u64 [a3 + 0xe0] = a0\n 12660: a0 = u64 [s1 + 0x1a8]\n 12664: u64 [a3 + 0xd8] = a0\n 12668: a0 = u64 [s1 + 0x1b0]\n 12672: u64 [a3 + 0xd0] = a0\n 12676: a1 = s1 + 0x1ce0\n 12680: a0 = u64 [s1 + 0x1b8]\n 12684: u64 [a3 + 0xc8] = a0\n 12688: a0 = 0\n 12690: ra = 484, jump @4\n      : @444 [@dyn 242] (gas: 3)\n 12696: t0 = 0x1e6\n 12700: a2 = s1 + 0x1918\n 12704: fallthrough\n      : @445 [@dyn 243] (gas: 7)\n 12705: u64 [a2 + 960] = 0\n 12709: u64 [a2 + 952] = 0\n 12713: u64 [a2 + 936] = 0x2\n 12718: a0 = 0x20\n 12721: a1 = s1 + 0x1cc0\n 12725: u64 [a2 + 944] = 0\n 12729: ra = 488, jump @4\n      : @446 [@dyn 244] (gas: 3)\n 12735: a1 = 0x40\n 12738: a0 = 0\n 12740: ra = 490, jump @13\n      : @447 [@dyn 245] (gas: 4)\n 12746: a1 = sp + 0xffffffffffffffe0\n 12749: a1 = a1 & 0xffffffffffffffe0\n 12752: u64 [s1 + 0x190] = a1\n 12756: t0 = 492, jump @870\n      : @448 [@dyn 246] (gas: 4)\n 12762: ra = 0x1ee\n 12766: ecalli 6 // 'hash_keccak_256'\n 12768: t0 = 0x1f0\n 12772: jump @878\n      : @449 [@dyn 247] (gas: 1)\n 12775: t0 = 496, jump @878\n      : @450 [@dyn 248] (gas: 7)\n 12781: u64 [a5 + 0xa0] = a3\n 12785: u64 [a5 + 0x98] = a2\n 12789: u64 [a5 + 0x90] = a1\n 12793: u64 [a5 + 0x88] = a0\n 12797: a0 = s1 + 0x1ca0\n 12801: a1 = s1 + 0x28a0\n 12805: ra = 498, jump @6\n      : @451 [@dyn 249] (gas: 10)\n 12811: a1 = s1 + 0x1918\n 12815: a0 = u8 [a1 + 0x388]\n 12819: u64 [a1 + 896] = 0\n 12823: u64 [a1 + 888] = 0\n 12827: u64 [a1 + 0x368] = a0\n 12831: a0 = s1 + 0x1c80\n 12835: u64 [a1 + 880] = 0\n 12839: ra = 0x1f4\n 12843: t0 = 0x3e0\n 12847: jump @859\n      : @452 [@dyn 250] (gas: 3)\n 12850: a0 = s1 + 0x1c60\n 12854: a1 = 0x40\n 12857: ra = 502, jump @2\n      : @453 [@dyn 251] (gas: 15)\n 12863: a0 = s1 + 0x1918\n 12867: a2 = a0 + 0x300\n 12871: a1 = u64 [a2 + 0x60]\n 12874: u64 [s1 + 0x188] = a1\n 12878: a1 = u64 [a2 + 0x58]\n 12881: u64 [s1 + 0x180] = a1\n 12885: a1 = u64 [a2 + 0x50]\n 12888: u64 [s1 + 0x178] = a1\n 12892: a0 = u64 [a2 + 0x48]\n 12895: u64 [s1 + 0x190] = a0\n 12899: a0 = s1 + 0x3000\n 12903: i32 a0 = a0 + 0xfffffffffffff8c0\n 12907: ra = 0x1f8\n 12911: ecalli 7 // 'now'\n 12913: fallthrough\n      : @454 [@dyn 252] (gas: 14)\n 12914: a3 = s1 + 0x100\n 12918: a0 = u64 [a3 + 0x88]\n 12922: a1 = u64 [a3 + 0x78]\n 12925: a0 = a0 | a1\n 12928: a1 = u64 [a3 + 0x90]\n 12932: a5 = a1\n 12934: a2 = u64 [a3 + 0x80]\n 12938: a1 = a1 | a2\n 12941: a1 = a1 | a0\n 12944: a1 = a1 >> 0x20\n 12947: a0 = a0 | a2\n 12950: a0 = a0 << 0x20\n 12953: a0 = a0 | a1\n 12956: jump @558 if a0 != 0\n      : @455 (gas: 1)\n 12960: t0 = 506, jump @885\n      : @456 [@dyn 253] (gas: 13)\n 12966: a0 = u64 [a4 + 0xa8]\n 12970: a1 = u64 [a4 + 0xb0]\n 12974: a2 = u64 [a4 + 0xb8]\n 12978: a3 = u64 [a4 + 0xc0]\n 12982: a4 = s1 + 0x1918\n 12986: u64 [a4 + 0x340] = a3\n 12990: a3 = a4 + 0x300\n 12994: u64 [a3 + 0x38] = a2\n 12997: u64 [a3 + 0x30] = a1\n 13000: a1 = s1 + 0x1c40\n 13004: u64 [a3 + 0x28] = a0\n 13007: a0 = a5\n 13009: ra = 508, jump @4\n      : @457 [@dyn 254] (gas: 54)\n 13015: a0 = u64 [s1 + 0x150]\n 13019: ecalli 3 // 'caller'\n 13021: a2 = u64 [s1 + 0x198]\n 13025: a0 = u64 [a2 + 0x8]\n 13028: a1 = i32 [a2 + 0x10]\n 13031: a2 = u64 [a2]\n 13033: a3 = reverse a0\n 13035: a0 = a3 << 0x20\n 13038: a1 = reverse a1\n 13040: a1 = a1 >> 0x20\n 13043: t0 = a1 | a0\n 13046: a3 = a3 >> 0x20\n 13049: a2 = reverse a2\n 13051: a1 = a2 << 0x20\n 13054: t1 = a1 | a3\n 13057: a2 = a2 >> 0x20\n 13060: a0 = u64 [s1 + 0x160]\n 13064: a1 = s1 + 0x1918\n 13068: u64 [a1 + 0x2e0] = a0\n 13072: a0 = u64 [s1 + 0x168]\n 13076: u64 [a1 + 0x2d8] = a0\n 13080: a0 = u64 [s1 + 0x158]\n 13084: u64 [a1 + 0x2d0] = a0\n 13088: a0 = u64 [s1 + 0x170]\n 13092: u64 [a1 + 0x2c8] = a0\n 13096: a0 = u64 [s1 + 0x1a0]\n 13100: u64 [a1 + 0x300] = a0\n 13104: a0 = u64 [s1 + 0x1a8]\n 13108: u64 [a1 + 0x2f8] = a0\n 13112: a0 = u64 [s1 + 0x1b0]\n 13116: u64 [a1 + 0x2f0] = a0\n 13120: a0 = u64 [s1 + 0x1b8]\n 13124: u64 [a1 + 0x2e8] = a0\n 13128: a3 = u64 [0x20080]\n 13133: a4 = u64 [0x20088]\n 13138: a5 = u64 [0x20090]\n 13143: a0 = u64 [0x20098]\n 13148: u64 [a1 + 0x320] = a3\n 13152: a3 = a1 + 0x300\n 13156: u64 [a3 + 0x18] = a4\n 13159: u64 [a3 + 0x10] = a5\n 13162: u64 [a3 + 0x8] = a0\n 13165: u64 [a1 + 0x2b8] = a2\n 13169: u64 [a1 + 0x2b0] = t1\n 13173: u64 [a1 + 0x2a8] = t0\n 13177: a0 = a1\n 13179: a1 = 0x20\n 13182: a2 = s1 + 0x1c20\n 13186: a3 = s1 + 0x1c00\n 13190: a4 = s1 + 0x1be0\n 13194: a5 = s1 + 0x1bc0\n 13198: u64 [a0 + 704] = 0\n 13202: a0 = u64 [s1 + 0x190]\n 13206: ra = 510, jump @10\n      : @458 [@dyn 255] (gas: 1)\n 13212: jump @631\n      : @459 (gas: 13)\n 13215: a1 = 0xffffffff\n 13225: a0 = u64 [s1 + 0x1a0]\n 13229: t1 = a0 & 0xffffffffffffffff\n 13232: t0 = u64 [s1 + 0x1b8]\n 13236: a1 = t0 & a1\n 13239: a0 = u64 [s1 + 0x1a8]\n 13243: a0 = a0 & 0xffffffffffffffff\n 13246: a0 = a0 ^ a3\n 13249: a1 = a1 ^ a5\n 13252: a2 = a4 ^ t1\n 13255: a0 = a0 | a2\n 13258: a0 = a0 | a1\n 13261: jump @461 if a0 == 0\n      : @460 (gas: 1)\n 13264: jump @618\n      : @461 (gas: 3)\n 13267: a0 = s1 + 0x2260\n 13271: a1 = 0x40\n 13274: ra = 512, jump @2\n      : @462 [@dyn 256] (gas: 2)\n 13280: a2 = s1 + 0x2118\n 13284: fallthrough\n      : @463 (gas: 13)\n 13285: t0 = u64 [a2 + 0x160]\n 13289: a1 = a2 + 0x100\n 13293: a5 = u64 [a1 + 0x58]\n 13296: a4 = u64 [a1 + 0x50]\n 13299: a0 = u64 [a1 + 0x48]\n 13302: a3 = a4 | t0\n 13305: a1 = a0 | a5\n 13308: a1 = a1 | a3\n 13311: a1 = a1 >> 0x20\n 13314: a3 = a3 | a5\n 13317: a3 = a3 << 0x20\n 13320: a1 = a1 | a3\n 13323: jump @558 if a1 != 0\n      : @464 (gas: 11)\n 13327: u64 [a2 + 312] = 0\n 13331: u64 [a2 + 304] = 0\n 13335: u64 [a2 + 296] = 0\n 13339: a3 = 0x8c379a000000000\n 13349: a1 = s1 + 0x2240\n 13353: u64 [a2 + 0x140] = a3\n 13357: u64 [s1 + 0x1b8] = a0\n 13361: u64 [s1 + 0x1b0] = a4\n 13365: u64 [s1 + 0x1a0] = t0\n 13369: u64 [s1 + 0x1a8] = a5\n 13373: ra = 514, jump @4\n      : @465 [@dyn 257] (gas: 6)\n 13379: a5 = s1 + 0x100\n 13383: a1 = u64 [a5 + 0xb8]\n 13387: a0 = u64 [a5 + 0xa8]\n 13391: a3 = u64 [a5 + 0xa0]\n 13395: a3 = a3 | a0\n 13398: t0 = 516, jump @862\n      : @466 [@dyn 258] (gas: 1)\n 13404: jump @558 if a0 == 0\n      : @467 (gas: 10)\n 13408: i32 a0 = a1 + 0x4\n 13411: a2 = s1 + 0x2118\n 13415: u64 [a2 + 288] = 0\n 13419: u64 [a2 + 280] = 0\n 13423: u64 [a2 + 264] = 0x20\n 13428: a1 = s1 + 0x2220\n 13432: u64 [a2 + 272] = 0\n 13436: u64 [s1 + 0x1a8] = a3\n 13440: u64 [s1 + 0x1a0] = a4\n 13444: ra = 518, jump @4\n      : @468 [@dyn 259] (gas: 1)\n 13450: t0 = 520, jump @867\n      : @469 [@dyn 260] (gas: 1)\n 13456: jump @558 if a0 == 0\n      : @470 (gas: 8)\n 13460: i32 a0 = a1 + 0x24\n 13463: a2 = s1 + 0x2118\n 13467: u64 [a2 + 256] = 0\n 13471: u64 [a2 + 248] = 0\n 13475: u64 [a2 + 232] = 0x1f\n 13480: a1 = s1 + 0x2200\n 13484: u64 [a2 + 240] = 0\n 13488: ra = 522, jump @4\n      : @471 [@dyn 261] (gas: 1)\n 13494: t0 = 524, jump @863\n      : @472 [@dyn 262] (gas: 1)\n 13500: jump @558 if a0 == 0\n      : @473 (gas: 13)\n 13504: i32 a0 = a3 + 0x44\n 13507: a1 = u64 [0x20000]\n 13512: a4 = s1 + 0x2118\n 13516: u64 [a4 + 0xe0] = a1\n 13520: a1 = u64 [0x20008]\n 13525: a2 = u64 [0x20010]\n 13530: a3 = u64 [0x20018]\n 13535: u64 [a4 + 0xd8] = a1\n 13539: u64 [a4 + 0xd0] = a2\n 13543: a1 = s1 + 0x21e0\n 13547: u64 [a4 + 0xc8] = a3\n 13551: ra = 0x26c\n 13555: jump @4\n      : @474 (gas: 10)\n 13558: u64 [s1 + 1080] = 0\n 13562: a0 = u64 [s1 + 0x1b8]\n 13566: u64 [s1 + 0x420] = a0\n 13570: a0 = u64 [s1 + 0x1a8]\n 13574: u64 [s1 + 0x428] = a0\n 13578: a1 = s1 + 0x420\n 13582: a0 = u64 [s1 + 0x1a0]\n 13586: u64 [s1 + 0x430] = a0\n 13590: a0 = 0\n 13592: ra = 526, jump @4\n      : @475 [@dyn 263] (gas: 7)\n 13598: u64 [s1 + 1048] = 0\n 13602: u64 [s1 + 1040] = 0\n 13606: u64 [s1 + 1032] = 0\n 13610: a0 = 0x20\n 13613: a1 = s1 + 0x400\n 13617: u64 [s1 + 1024] = 0x1\n 13622: ra = 528, jump @4\n      : @476 [@dyn 264] (gas: 3)\n 13628: a1 = 0x40\n 13631: a0 = 0\n 13633: ra = 530, jump @13\n      : @477 [@dyn 265] (gas: 4)\n 13639: a1 = sp + 0xffffffffffffffe0\n 13642: a1 = a1 & 0xffffffffffffffe0\n 13645: u64 [s1 + 0x1b0] = a1\n 13649: t0 = 532, jump @870\n      : @478 [@dyn 266] (gas: 19)\n 13655: ecalli 6 // 'hash_keccak_256'\n 13657: a3 = u64 [s1 + 0x1b0]\n 13661: a0 = u64 [a3 + 0x18]\n 13664: a1 = u64 [a3 + 0x10]\n 13667: a2 = u64 [a3 + 0x8]\n 13670: a3 = u64 [a3]\n 13672: a0 = reverse a0\n 13674: a1 = reverse a1\n 13676: a2 = reverse a2\n 13678: a3 = reverse a3\n 13680: a4 = s1 + 0x2118\n 13684: a5 = a4 + 0x300\n 13688: u64 [a5 + 0x40] = a3\n 13691: u64 [a5 + 0x38] = a2\n 13694: u64 [a5 + 0x30] = a1\n 13697: u64 [a5 + 0x28] = a0\n 13700: a0 = s1 + 0x3e0\n 13704: a1 = s1 + 0x2440\n 13708: ra = 534, jump @6\n      : @479 [@dyn 267] (gas: 2)\n 13714: a0 = u8 [s1 + 0x3e0]\n 13718: jump @531 if a0 != 0\n      : @480 (gas: 10)\n 13722: u64 [s1 + 824] = 0\n 13726: a0 = u64 [s1 + 0x1b8]\n 13730: u64 [s1 + 0x320] = a0\n 13734: a0 = u64 [s1 + 0x1a8]\n 13738: u64 [s1 + 0x328] = a0\n 13742: a1 = s1 + 0x320\n 13746: a0 = u64 [s1 + 0x1a0]\n 13750: u64 [s1 + 0x330] = a0\n 13754: a0 = 0\n 13756: ra = 536, jump @4\n      : @481 [@dyn 268] (gas: 7)\n 13762: u64 [s1 + 792] = 0\n 13766: u64 [s1 + 784] = 0\n 13770: u64 [s1 + 768] = 0x1\n 13775: a0 = 0x20\n 13778: a1 = s1 + 0x300\n 13782: u64 [s1 + 776] = 0\n 13786: ra = 538, jump @4\n      : @482 [@dyn 269] (gas: 7)\n 13792: a0 = sp + 0xffffffffffffffe0\n 13795: a0 = a0 & 0xffffffffffffffe0\n 13798: u64 [s1 + 0x1b0] = a0\n 13802: sp = a0\n 13804: a1 = 0x40\n 13807: a0 = 0\n 13809: ra = 540, jump @13\n      : @483 [@dyn 270] (gas: 4)\n 13815: a1 = sp + 0xffffffffffffffe0\n 13818: a1 = a1 & 0xffffffffffffffe0\n 13821: u64 [s1 + 0x198] = a1\n 13825: t0 = 542, jump @870\n      : @484 [@dyn 271] (gas: 4)\n 13831: ra = 0x220\n 13835: ecalli 6 // 'hash_keccak_256'\n 13837: t0 = 0x222\n 13841: jump @876\n      : @485 [@dyn 272] (gas: 1)\n 13844: t0 = 546, jump @876\n      : @486 [@dyn 273] (gas: 2)\n 13850: a0 = s1 + 0x2e0\n 13854: ra = 548, jump @6\n      : @487 [@dyn 274] (gas: 15)\n 13860: a0 = u64 [s1 + 0x2e0]\n 13864: a1 = u64 [s1 + 0x2e8]\n 13868: a2 = u64 [s1 + 0x2f8]\n 13872: a3 = u64 [s1 + 0x2f0]\n 13876: a0 = a0 & 0xffffffffffffff00\n 13880: a0 = a0 | 0x1\n 13883: a4 = s1 + 0x2118\n 13887: a5 = a4 + 0x300\n 13891: u64 [a5 + 0x60] = a2\n 13894: u64 [a5 + 0x58] = a3\n 13897: u64 [a5 + 0x50] = a1\n 13900: u64 [a5 + 0x48] = a0\n 13903: a1 = s1 + 0x2460\n 13907: a0 = u64 [s1 + 0x1b0]\n 13911: ra = 550, jump @7\n      : @488 [@dyn 275] (gas: 3)\n 13917: a0 = s1 + 0x2c0\n 13921: a1 = 0x40\n 13924: ra = 552, jump @2\n      : @489 [@dyn 276] (gas: 13)\n 13930: a1 = s1 + 0x200\n 13934: a0 = u64 [a1 + 0xd8]\n 13938: u64 [s1 + 0x198] = a0\n 13942: a0 = u64 [a1 + 0xd0]\n 13946: u64 [s1 + 0x190] = a0\n 13950: a0 = u64 [a1 + 0xc8]\n 13954: u64 [s1 + 0x188] = a0\n 13958: a0 = u64 [a1 + 0xc0]\n 13962: u64 [s1 + 0x1b0] = a0\n 13966: a0 = s1 + 0x2000\n 13970: i32 a0 = a0 + 0x480\n 13974: ecalli 7 // 'now'\n 13976: fallthrough\n      : @490 (gas: 14)\n 13977: a3 = s1 + 0x100\n 13981: a0 = u64 [a3 + 0x98]\n 13985: a1 = u64 [a3 + 0x88]\n 13989: a0 = a0 | a1\n 13992: a1 = u64 [a3 + 0xb0]\n 13996: a4 = a1\n 13998: a2 = u64 [a3 + 0x90]\n 14002: a1 = a1 | a2\n 14005: a1 = a1 | a0\n 14008: a1 = a1 >> 0x20\n 14011: a0 = a0 | a2\n 14014: a0 = a0 << 0x20\n 14017: a0 = a0 | a1\n 14020: jump @558 if a0 != 0\n      : @491 (gas: 13)\n 14024: a3 = s1 + 0x2118\n 14028: a5 = a3 + 0x300\n 14032: a0 = u64 [a5 + 0x68]\n 14035: a1 = u64 [a5 + 0x70]\n 14038: a2 = u64 [a5 + 0x78]\n 14041: a3 = u64 [a5 + 0x80]\n 14045: u64 [s1 + 0x2b8] = a3\n 14049: u64 [s1 + 0x2b0] = a2\n 14053: u64 [s1 + 0x2a8] = a1\n 14057: a1 = s1 + 0x2a0\n 14061: u64 [s1 + 0x2a0] = a0\n 14065: a0 = a4\n 14067: ra = 554, jump @4\n      : @492 [@dyn 277] (gas: 23)\n 14073: u64 [s1 + 632] = 0\n 14077: a4 = s1 + 0x100\n 14081: a0 = u64 [a4 + 0xa0]\n 14085: a5 = s1 + 0x200\n 14089: u64 [a5 + 0x70] = a0\n 14092: a0 = u64 [a4 + 0xa8]\n 14096: u64 [a5 + 0x68] = a0\n 14099: a0 = u64 [0x20128]\n 14104: a1 = u64 [0x20130]\n 14109: a2 = u64 [0x20138]\n 14114: a3 = u64 [a4 + 0xb8]\n 14118: u64 [a5 + 0x60] = a3\n 14121: u64 [a5 + 0x98] = a0\n 14125: u64 [a5 + 0x90] = a1\n 14129: u64 [a5 + 0x88] = a2\n 14133: a0 = u64 [0x20140]\n 14138: a1 = 0x20\n 14141: a2 = s1 + 0x280\n 14145: a3 = s1 + 0x260\n 14149: u64 [a5 + 0x80] = a0\n 14153: a0 = u64 [s1 + 0x1b0]\n 14157: ra = 0x2e8\n 14161: jump @8\n      : @493 (gas: 3)\n 14164: t0 = 0x22c\n 14168: a2 = s1 + 0x1918\n 14172: fallthrough\n      : @494 [@dyn 278] (gas: 11)\n 14173: u64 [a2 + 2016] = 0\n 14177: a0 = u64 [s1 + 0x1b8]\n 14181: a3 = a2 + 0x700\n 14185: u64 [a3 + 0xc8] = a0\n 14189: a0 = u64 [s1 + 0x1a8]\n 14193: u64 [a3 + 0xd0] = a0\n 14197: a1 = s1 + 0x20e0\n 14201: a0 = u64 [s1 + 0x1a0]\n 14205: u64 [a3 + 0xd8] = a0\n 14209: a0 = 0\n 14211: ra = 558, jump @4\n      : @495 [@dyn 279] (gas: 9)\n 14217: a0 = s1 + 0x1918\n 14221: u64 [a0 + 1984] = 0\n 14225: u64 [a0 + 1976] = 0\n 14229: u64 [a0 + 1968] = 0\n 14233: a3 = a0\n 14235: a0 = 0x20\n 14238: a1 = s1 + 0x20c0\n 14242: u64 [a3 + 1960] = 0x1\n 14247: ra = 560, jump @4\n      : @496 [@dyn 280] (gas: 3)\n 14253: a1 = 0x40\n 14256: a0 = 0\n 14258: ra = 562, jump @13\n      : @497 [@dyn 281] (gas: 4)\n 14264: a1 = sp + 0xffffffffffffffe0\n 14267: a1 = a1 & 0xffffffffffffffe0\n 14270: u64 [s1 + 0x1b0] = a1\n 14274: t0 = 564, jump @870\n      : @498 [@dyn 282] (gas: 5)\n 14280: ra = 0x236\n 14284: ecalli 6 // 'hash_keccak_256'\n 14286: a3 = u64 [s1 + 0x1b0]\n 14290: t0 = 0x238\n 14294: jump @873\n      : @499 [@dyn 283] (gas: 2)\n 14297: a3 = u64 [s1 + 0x1b0]\n 14301: t0 = 568, jump @873\n      : @500 [@dyn 284] (gas: 7)\n 14307: u64 [a4 + 0xa0] = a3\n 14311: u64 [a4 + 0x98] = a2\n 14315: u64 [a4 + 0x90] = a1\n 14319: u64 [a4 + 0x88] = a0\n 14323: a0 = s1 + 0x20a0\n 14327: a1 = s1 + 0x29a0\n 14331: ra = 570, jump @6\n      : @501 [@dyn 285] (gas: 3)\n 14337: t0 = 0x23c\n 14341: a2 = s1 + 0x1918\n 14345: fallthrough\n      : @502 [@dyn 286] (gas: 2)\n 14346: a0 = u8 [a2 + 0x788]\n 14350: jump @546 if a0 != 0\n      : @503 (gas: 3)\n 14354: a0 = s1 + 0x1fa0\n 14358: a1 = 0x40\n 14361: ra = 574, jump @2\n      : @504 [@dyn 287] (gas: 2)\n 14367: a2 = s1 + 0x1918\n 14371: fallthrough\n      : @505 (gas: 13)\n 14372: t0 = u64 [a2 + 0x6a0]\n 14376: a1 = a2 + 0x600\n 14380: a5 = u64 [a1 + 0x98]\n 14384: a4 = u64 [a1 + 0x90]\n 14388: a0 = u64 [a1 + 0x88]\n 14392: a3 = a4 | t0\n 14395: a1 = a0 | a5\n 14398: a1 = a1 | a3\n 14401: a1 = a1 >> 0x20\n 14404: a3 = a3 | a5\n 14407: a3 = a3 << 0x20\n 14410: a1 = a1 | a3\n 14413: jump @558 if a1 != 0\n      : @506 (gas: 11)\n 14417: u64 [a2 + 1656] = 0\n 14421: u64 [a2 + 1648] = 0\n 14425: u64 [a2 + 1640] = 0\n 14429: a3 = 0x8c379a000000000\n 14439: a1 = s1 + 0x1f80\n 14443: u64 [a2 + 0x680] = a3\n 14447: u64 [s1 + 0x1b8] = a0\n 14451: u64 [s1 + 0x1b0] = a4\n 14455: u64 [s1 + 0x1a0] = t0\n 14459: u64 [s1 + 0x1a8] = a5\n 14463: ra = 576, jump @4\n      : @507 [@dyn 288] (gas: 6)\n 14469: a5 = s1 + 0x100\n 14473: a1 = u64 [a5 + 0xb8]\n 14477: a0 = u64 [a5 + 0xa8]\n 14481: a3 = u64 [a5 + 0xa0]\n 14485: a3 = a3 | a0\n 14488: t0 = 578, jump @862\n      : @508 [@dyn 289] (gas: 1)\n 14494: jump @558 if a0 == 0\n      : @509 (gas: 1)\n 14498: t0 = 580, jump @892\n      : @510 [@dyn 290] (gas: 8)\n 14504: u64 [a2 + 1632] = 0\n 14508: u64 [a2 + 1624] = 0\n 14512: u64 [a2 + 1608] = 0x20\n 14517: a1 = s1 + 0x1f60\n 14521: u64 [a2 + 1616] = 0\n 14525: u64 [s1 + 0x1a8] = a3\n 14529: u64 [s1 + 0x1a0] = a4\n 14533: ra = 582, jump @4\n      : @511 [@dyn 291] (gas: 1)\n 14539: t0 = 584, jump @868\n      : @512 [@dyn 292] (gas: 1)\n 14545: jump @558 if a0 == 0\n      : @513 (gas: 8)\n 14549: i32 a0 = a1 + 0x24\n 14552: a3 = s1 + 0x1918\n 14556: u64 [a3 + 1600] = 0\n 14560: u64 [a3 + 1592] = 0\n 14564: u64 [a3 + 1576] = 0x17\n 14569: a1 = s1 + 0x1f40\n 14573: u64 [a3 + 1584] = 0\n 14577: ra = 586, jump @4\n      : @514 [@dyn 293] (gas: 1)\n 14583: t0 = 588, jump @863\n      : @515 [@dyn 294] (gas: 1)\n 14589: jump @558 if a0 == 0\n      : @516 (gas: 13)\n 14593: i32 a0 = a3 + 0x44\n 14596: a1 = u64 [0x20058]\n 14601: a2 = u64 [0x20060]\n 14606: a3 = u64 [0x20068]\n 14611: a4 = s1 + 0x1918\n 14615: a5 = a4 + 0x600\n 14619: u64 [a5 + 0x20] = a1\n 14622: u64 [a5 + 0x18] = a2\n 14625: u64 [a5 + 0x10] = a3\n 14628: a1 = s1 + 0x1f20\n 14632: u64 [a4 + 1544] = 0\n 14636: ra = 0x26c\n 14640: jump @4\n      : @517 (gas: 3)\n 14643: a0 = s1 + 0x1a20\n 14647: a1 = 0x40\n 14650: ra = 590, jump @2\n      : @518 [@dyn 295] (gas: 2)\n 14656: a2 = s1 + 0x1918\n 14660: fallthrough\n      : @519 (gas: 13)\n 14661: t0 = u64 [a2 + 0x120]\n 14665: a1 = a2 + 0x100\n 14669: a5 = u64 [a1 + 0x18]\n 14672: a4 = u64 [a1 + 0x10]\n 14675: a0 = u64 [a1 + 0x8]\n 14678: a3 = a4 | t0\n 14681: a1 = a0 | a5\n 14684: a1 = a1 | a3\n 14687: a1 = a1 >> 0x20\n 14690: a3 = a3 | a5\n 14693: a3 = a3 << 0x20\n 14696: a1 = a1 | a3\n 14699: jump @558 if a1 != 0\n      : @520 (gas: 11)\n 14703: u64 [a2 + 248] = 0\n 14707: u64 [a2 + 240] = 0\n 14711: u64 [a2 + 232] = 0\n 14715: a3 = 0x8c379a000000000\n 14725: a1 = s1 + 0x1a00\n 14729: u64 [a2 + 0x100] = a3\n 14733: u64 [s1 + 0x1b8] = a0\n 14737: u64 [s1 + 0x1b0] = a4\n 14741: u64 [s1 + 0x1a0] = t0\n 14745: u64 [s1 + 0x1a8] = a5\n 14749: ra = 592, jump @4\n      : @521 [@dyn 296] (gas: 6)\n 14755: a5 = s1 + 0x100\n 14759: a1 = u64 [a5 + 0xb8]\n 14763: a0 = u64 [a5 + 0xa8]\n 14767: a3 = u64 [a5 + 0xa0]\n 14771: a3 = a3 | a0\n 14774: t0 = 594, jump @862\n      : @522 [@dyn 297] (gas: 1)\n 14780: jump @558 if a0 == 0\n      : @523 (gas: 1)\n 14784: t0 = 596, jump @892\n      : @524 [@dyn 298] (gas: 9)\n 14790: a5 = 0\n 14792: u64 [a2 + 224] = 0\n 14796: u64 [a2 + 216] = 0\n 14800: u64 [a2 + 200] = 0x20\n 14805: a1 = s1 + 0x19e0\n 14809: u64 [a2 + 208] = 0\n 14813: u64 [s1 + 0x1a8] = a3\n 14817: u64 [s1 + 0x1a0] = a4\n 14821: ra = 598, jump @4\n      : @525 [@dyn 299] (gas: 1)\n 14827: t0 = 600, jump @867\n      : @526 [@dyn 300] (gas: 1)\n 14833: jump @558 if a0 == 0\n      : @527 (gas: 8)\n 14837: i32 a0 = a1 + 0x24\n 14840: a2 = s1 + 0x1918\n 14844: u64 [a2 + 192] = 0\n 14848: u64 [a2 + 184] = 0\n 14852: u64 [a2 + 168] = 0x1a\n 14857: a1 = s1 + 0x19c0\n 14861: u64 [a2 + 176] = 0\n 14865: ra = 602, jump @4\n      : @528 [@dyn 301] (gas: 1)\n 14871: t0 = 604, jump @863\n      : @529 [@dyn 302] (gas: 1)\n 14877: jump @558 if a0 == 0\n      : @530 (gas: 13)\n 14881: i32 a0 = a3 + 0x44\n 14884: a1 = u64 [0x200a0]\n 14889: a2 = u64 [0x200a8]\n 14894: a3 = u64 [0x200b0]\n 14899: a4 = s1 + 0x1918\n 14903: u64 [a4 + 0xa0] = a1\n 14907: u64 [a4 + 0x98] = a2\n 14911: u64 [a4 + 0x90] = a3\n 14915: a2 = 0x7473000000000000\n 14925: a1 = s1 + 0x19a0\n 14929: u64 [a4 + 0x88] = a2\n 14933: ra = 0x26c\n 14937: jump @4\n      : @531 (gas: 3)\n 14940: a0 = s1 + 0x3c0\n 14944: a1 = 0x40\n 14947: ra = 606, jump @2\n      : @532 [@dyn 303] (gas: 13)\n 14953: a1 = s1 + 0x300\n 14957: a4 = u64 [a1 + 0xd8]\n 14961: a5 = u64 [a1 + 0xd0]\n 14965: a3 = u64 [a1 + 0xc8]\n 14969: a0 = u64 [a1 + 0xc0]\n 14973: a2 = a3 | a4\n 14976: a1 = a0 | a5\n 14979: a1 = a1 | a2\n 14982: a1 = a1 >> 0x20\n 14985: a2 = a2 | a5\n 14988: a2 = a2 << 0x20\n 14991: a1 = a1 | a2\n 14994: jump @558 if a1 != 0\n      : @533 (gas: 11)\n 14998: u64 [s1 + 944] = 0\n 15002: u64 [s1 + 936] = 0\n 15006: u64 [s1 + 928] = 0\n 15010: a2 = 0x8c379a000000000\n 15020: a1 = s1 + 0x3a0\n 15024: u64 [s1 + 0x3b8] = a2\n 15028: u64 [s1 + 0x1b8] = a0\n 15032: u64 [s1 + 0x1b0] = a3\n 15036: u64 [s1 + 0x1a8] = a4\n 15040: u64 [s1 + 0x1a0] = a5\n 15044: ra = 608, jump @4\n      : @534 [@dyn 304] (gas: 6)\n 15050: a5 = s1 + 0x100\n 15054: a1 = u64 [a5 + 0xb8]\n 15058: a0 = u64 [a5 + 0xa8]\n 15062: a3 = u64 [a5 + 0xa0]\n 15066: a3 = a3 | a0\n 15069: t0 = 610, jump @862\n      : @535 [@dyn 305] (gas: 1)\n 15075: jump @558 if a0 == 0\n      : @536 (gas: 9)\n 15079: i32 a0 = a1 + 0x4\n 15082: u64 [s1 + 920] = 0\n 15086: u64 [s1 + 912] = 0\n 15090: u64 [s1 + 896] = 0x20\n 15095: a1 = s1 + 0x380\n 15099: u64 [s1 + 904] = 0\n 15103: u64 [s1 + 0x1a8] = a3\n 15107: u64 [s1 + 0x1a0] = a4\n 15111: ra = 612, jump @4\n      : @537 [@dyn 306] (gas: 1)\n 15117: t0 = 614, jump @868\n      : @538 [@dyn 307] (gas: 1)\n 15123: jump @558 if a0 == 0\n      : @539 (gas: 7)\n 15127: i32 a0 = a1 + 0x24\n 15130: u64 [s1 + 888] = 0\n 15134: u64 [s1 + 880] = 0\n 15138: u64 [s1 + 864] = 0x1b\n 15143: a1 = s1 + 0x360\n 15147: u64 [s1 + 872] = 0\n 15151: ra = 616, jump @4\n      : @540 [@dyn 308] (gas: 1)\n 15157: t0 = 618, jump @883\n      : @541 [@dyn 309] (gas: 1)\n 15163: jump @558 if a0 == 0\n      : @542 (gas: 12)\n 15167: i32 a0 = a2 + 0x44\n 15170: a1 = u64 [0x20058]\n 15175: a2 = u64 [0x20118]\n 15180: a3 = u64 [0x20120]\n 15185: a4 = s1 + 0x300\n 15189: u64 [a4 + 0x58] = a1\n 15192: u64 [a4 + 0x50] = a2\n 15195: u64 [a4 + 0x48] = a3\n 15198: a2 = 0x7a65640000000000\n 15208: a1 = s1 + 0x340\n 15212: u64 [a4 + 0x40] = a2\n 15215: ra = 620, jump @4\n      : @543 [@dyn 310] (gas: 3)\n 15221: a1 = 0x64\n 15224: a0 = u64 [s1 + 0x1b8]\n 15228: ra = 622, jump @13\n      : @544 [@dyn 311] (gas: 1)\n 15234: t0 = 624, jump @886\n      : @545 [@dyn 312] (gas: 2)\n 15240: ecalli 8 // 'seal_return'\n 15242: fallthrough\n      : @546 (gas: 11)\n 15243: u64 [a2 + 1920] = 0\n 15247: a0 = u64 [s1 + 0x1b8]\n 15251: a3 = a2 + 0x700\n 15255: u64 [a3 + 0x68] = a0\n 15258: a0 = u64 [s1 + 0x1a8]\n 15262: u64 [a3 + 0x70] = a0\n 15265: a1 = s1 + 0x2080\n 15269: a0 = u64 [s1 + 0x1a0]\n 15273: u64 [a3 + 0x78] = a0\n 15276: a0 = 0\n 15278: ra = 626, jump @4\n      : @547 [@dyn 313] (gas: 3)\n 15284: t0 = 0x274\n 15288: a2 = s1 + 0x1918\n 15292: fallthrough\n      : @548 [@dyn 314] (gas: 7)\n 15293: u64 [a2 + 1888] = 0\n 15297: u64 [a2 + 1880] = 0\n 15301: u64 [a2 + 1864] = 0x1\n 15306: a0 = 0x20\n 15309: a1 = s1 + 0x2060\n 15313: u64 [a2 + 1872] = 0\n 15317: ra = 630, jump @4\n      : @549 [@dyn 315] (gas: 7)\n 15323: a0 = sp + 0xffffffffffffffe0\n 15326: a0 = a0 & 0xffffffffffffffe0\n 15329: u64 [s1 + 0x1b0] = a0\n 15333: sp = a0\n 15335: a1 = 0x40\n 15338: a0 = 0\n 15340: ra = 632, jump @13\n      : @550 [@dyn 316] (gas: 4)\n 15346: a1 = sp + 0xffffffffffffffe0\n 15349: a1 = a1 & 0xffffffffffffffe0\n 15352: u64 [s1 + 0x198] = a1\n 15356: t0 = 634, jump @870\n      : @551 [@dyn 317] (gas: 4)\n 15362: ra = 0x27c\n 15366: ecalli 6 // 'hash_keccak_256'\n 15368: t0 = 0x27e\n 15372: jump @876\n      : @552 [@dyn 318] (gas: 1)\n 15375: t0 = 638, jump @876\n      : @553 [@dyn 319] (gas: 2)\n 15381: a0 = s1 + 0x2040\n 15385: ra = 640, jump @6\n      : @554 [@dyn 320] (gas: 15)\n 15391: a3 = s1 + 0x1918\n 15395: a4 = a3 + 0x700\n 15399: a0 = u64 [a4 + 0x28]\n 15402: a1 = u64 [a4 + 0x40]\n 15405: a2 = u64 [a4 + 0x38]\n 15408: a3 = u64 [a4 + 0x30]\n 15411: a0 = a0 & 0xffffffffffffff00\n 15415: a4 = s1 + 0x2918\n 15419: u64 [a4 + 0xc0] = a1\n 15423: u64 [a4 + 0xb8] = a2\n 15427: u64 [a4 + 0xb0] = a3\n 15431: u64 [a4 + 0xa8] = a0\n 15435: a1 = s1 + 0x29c0\n 15439: a0 = u64 [s1 + 0x1b0]\n 15443: ra = 642, jump @7\n      : @555 [@dyn 321] (gas: 3)\n 15449: a0 = s1 + 0x2020\n 15453: a1 = 0x40\n 15456: ra = 644, jump @2\n      : @556 [@dyn 322] (gas: 14)\n 15462: a0 = s1 + 0x1918\n 15466: a2 = a0 + 0x700\n 15470: a1 = u64 [a2 + 0x20]\n 15473: u64 [s1 + 0x198] = a1\n 15477: a1 = u64 [a2 + 0x18]\n 15480: u64 [s1 + 0x190] = a1\n 15484: a1 = u64 [a2 + 0x10]\n 15487: u64 [s1 + 0x188] = a1\n 15491: a0 = u64 [a2 + 0x8]\n 15494: u64 [s1 + 0x1b0] = a0\n 15498: a0 = s1 + 0x3000\n 15502: i32 a0 = a0 + 0xfffffffffffff9e0\n 15506: ecalli 7 // 'now'\n 15508: fallthrough\n      : @557 (gas: 14)\n 15509: a3 = s1 + 0x100\n 15513: a0 = u64 [a3 + 0x98]\n 15517: a1 = u64 [a3 + 0x88]\n 15521: a0 = a0 | a1\n 15524: a1 = u64 [a3 + 0xb0]\n 15528: a5 = a1\n 15530: a2 = u64 [a3 + 0x90]\n 15534: a1 = a1 | a2\n 15537: a1 = a1 | a0\n 15540: a1 = a1 >> 0x20\n 15543: a0 = a0 | a2\n 15546: a0 = a0 << 0x20\n 15549: a0 = a0 | a1\n 15552: jump @629 if a0 == 0\n      : @558 (gas: 1)\n 15556: trap\n      : @559 (gas: 22)\n 15557: a1 = s1 + 0x100\n 15561: a0 = u64 [a1 + 0xb8]\n 15565: a4 = a2 + 0x300\n 15569: u64 [a4 + 0x8] = a0\n 15572: u64 [a4 + 0x28] = a0\n 15575: a0 = u64 [a1 + 0xb0]\n 15579: u64 [a4 + 0x10] = a0\n 15582: u64 [a4 + 0x30] = a0\n 15585: a0 = u64 [a1 + 0xa8]\n 15589: u64 [a4 + 0x18] = a0\n 15592: u64 [a4 + 0x38] = a0\n 15595: a3 = u64 [a1 + 0xa0]\n 15599: u64 [a4 + 0x20] = a3\n 15602: a0 = s1 + 0x7ff\n 15606: a0 = a0 + 0x461\n 15610: a1 = s1 + 0x7ff\n 15614: a1 = a1 + 0x441\n 15618: a4 = a2\n 15620: a2 = s1 + 0x7ff\n 15624: a2 = a2 + 0x421\n 15628: u64 [a4 + 0x340] = a3\n 15632: ra = 646, jump @825\n      : @560 [@dyn 323] (gas: 15)\n 15638: a1 = s1 + 0x7ff\n 15642: a1 = a1 + 0x119\n 15646: a4 = a1 + 0x300\n 15650: a0 = u64 [a4 + 0x60]\n 15653: a2 = u64 [a4 + 0x58]\n 15656: a3 = u64 [a4 + 0x50]\n 15659: a1 = u64 [a4 + 0x48]\n 15662: a0 = a0 | a3\n 15665: a3 = a1 | a2\n 15668: a3 = a3 | a0\n 15671: a3 = a3 >> 0x20\n 15674: a0 = a0 | a2\n 15677: a0 = a0 << 0x20\n 15680: a0 = a0 | a3\n 15683: jump @558 if a0 != 0\n      : @561 (gas: 37)\n 15686: i32 a1 = a1 + 0\n 15688: a0 = s1 + 0x2000\n 15692: i32 a0 = a0 + 0x5c0\n 15696: ecalli 1 // 'call_data_load'\n 15698: a1 = s1 + 0x2118\n 15702: a2 = a1 + 0x400\n 15706: a0 = u64 [a2 + 0xc0]\n 15710: a5 = s1 + 0x100\n 15714: u64 [a5 + 0x60] = a0\n 15717: a0 = u64 [a2 + 0xb8]\n 15721: u64 [a5 + 0x48] = a0\n 15724: a0 = u64 [a2 + 0xb0]\n 15728: u64 [a5 + 0x50] = a0\n 15731: a0 = u64 [a2 + 0xa8]\n 15735: u64 [a5 + 0x58] = a0\n 15738: a2 = u64 [a5 + 0xa0]\n 15742: a4 = s1 + 0x7ff\n 15746: a4 = a4 + 0x119\n 15750: u64 [a4 + 0x2c0] = a2\n 15754: a1 = u64 [a5 + 0xa8]\n 15758: u64 [a4 + 0x2b8] = a1\n 15762: a0 = u64 [a5 + 0xb0]\n 15766: u64 [a4 + 0x2b0] = a0\n 15770: a3 = u64 [a5 + 0xb8]\n 15774: a5 = a4 + 0x200\n 15778: u64 [a5 + 0xa8] = a3\n 15782: u64 [a5 + 0xe0] = a2\n 15786: u64 [a5 + 0xd8] = a1\n 15790: u64 [a5 + 0xd0] = a0\n 15794: a0 = s1 + 0x7ff\n 15798: a0 = a0 + 0x401\n 15802: a1 = s1 + 0x7ff\n 15806: a1 = a1 + 0x3e1\n 15810: a2 = s1 + 0x7ff\n 15814: a2 = a2 + 0x3c1\n 15818: u64 [a5 + 0xc8] = a3\n 15822: ra = 648, jump @825\n      : @562 [@dyn 324] (gas: 9)\n 15828: a1 = s1 + 0x7ff\n 15832: a1 = a1 + 0x119\n 15836: a5 = a1 + 0x200\n 15840: a0 = u64 [a5 + 0xe8]\n 15844: a2 = u64 [a1 + 0x300]\n 15848: a3 = u64 [a5 + 0xf0]\n 15852: a4 = u64 [a5 + 0xf8]\n 15856: a1 = a0 + 0x20\n 15859: t0 = 650, jump @860\n      : @563 [@dyn 325] (gas: 1)\n 15865: jump @558 if a0 != 0\n      : @564 (gas: 37)\n 15869: i32 a1 = a1 + 0\n 15871: a0 = s1 + 0x2000\n 15875: i32 a0 = a0 + 0x5e0\n 15879: ecalli 1 // 'call_data_load'\n 15881: a1 = s1 + 0x2118\n 15885: a2 = a1 + 0x400\n 15889: a0 = u64 [a2 + 0xe0]\n 15893: a5 = s1 + 0x100\n 15897: u64 [a5 + 0x40] = a0\n 15900: a0 = u64 [a2 + 0xd8]\n 15904: u64 [a5 + 0x38] = a0\n 15907: a0 = u64 [a2 + 0xd0]\n 15911: u64 [a5 + 0x30] = a0\n 15914: a0 = u64 [a2 + 0xc8]\n 15918: u64 [a5 + 0x28] = a0\n 15921: a2 = u64 [a5 + 0xa0]\n 15925: a4 = s1 + 0x7ff\n 15929: a4 = a4 + 0x119\n 15933: u64 [a4 + 0x260] = a2\n 15937: a1 = u64 [a5 + 0xa8]\n 15941: u64 [a4 + 0x258] = a1\n 15945: a0 = u64 [a5 + 0xb0]\n 15949: u64 [a4 + 0x250] = a0\n 15953: a3 = u64 [a5 + 0xb8]\n 15957: a5 = a4 + 0x200\n 15961: u64 [a5 + 0x48] = a3\n 15964: u64 [a5 + 0x80] = a2\n 15968: u64 [a5 + 0x78] = a1\n 15971: u64 [a5 + 0x70] = a0\n 15974: a0 = s1 + 0x7ff\n 15978: a0 = a0 + 0x3a1\n 15982: a1 = s1 + 0x7ff\n 15986: a1 = a1 + 0x381\n 15990: a2 = s1 + 0x7ff\n 15994: a2 = a2 + 0x361\n 15998: u64 [a5 + 0x68] = a3\n 16001: ra = 652, jump @825\n      : @565 [@dyn 326] (gas: 9)\n 16007: a1 = s1 + 0x7ff\n 16011: a1 = a1 + 0x119\n 16015: a5 = a1 + 0x200\n 16019: a0 = u64 [a5 + 0x88]\n 16023: a2 = u64 [a5 + 0xa0]\n 16027: a3 = u64 [a5 + 0x90]\n 16031: a4 = u64 [a5 + 0x98]\n 16035: a1 = a0 + 0x40\n 16038: t0 = 654, jump @860\n      : @566 [@dyn 327] (gas: 1)\n 16044: jump @558 if a0 != 0\n      : @567 (gas: 37)\n 16048: i32 a1 = a1 + 0\n 16050: a0 = s1 + 0x2000\n 16054: i32 a0 = a0 + 0x600\n 16058: ecalli 1 // 'call_data_load'\n 16060: a1 = s1 + 0x2118\n 16064: a0 = u64 [a1 + 0x500]\n 16068: a5 = s1 + 0x100\n 16072: u64 [a5 + 0x20] = a0\n 16075: a2 = a1 + 0x400\n 16079: a0 = u64 [a2 + 0xf8]\n 16083: u64 [a5 + 0x18] = a0\n 16086: a0 = u64 [a2 + 0xf0]\n 16090: u64 [a5 + 0x10] = a0\n 16093: a0 = u64 [a2 + 0xe8]\n 16097: u64 [a5 + 0x8] = a0\n 16100: a2 = u64 [a5 + 0xa0]\n 16104: a4 = s1 + 0x7ff\n 16108: a4 = a4 + 0x119\n 16112: u64 [a4 + 0x200] = a2\n 16116: a1 = u64 [a5 + 0xa8]\n 16120: u64 [a4 + 0x1f8] = a1\n 16124: a0 = u64 [a5 + 0xb0]\n 16128: u64 [a4 + 0x1f0] = a0\n 16132: a3 = u64 [a5 + 0xb8]\n 16136: u64 [a4 + 0x1e8] = a3\n 16140: a5 = a4 + 0x200\n 16144: u64 [a5 + 0x20] = a2\n 16147: u64 [a5 + 0x18] = a1\n 16150: u64 [a5 + 0x10] = a0\n 16153: a0 = s1 + 0x7ff\n 16157: a0 = a0 + 0x341\n 16161: a1 = s1 + 0x7ff\n 16165: a1 = a1 + 0x321\n 16169: a2 = s1 + 0x7ff\n 16173: a2 = a2 + 0x301\n 16177: u64 [a5 + 0x8] = a3\n 16180: ra = 656, jump @825\n      : @568 [@dyn 328] (gas: 9)\n 16186: a1 = s1 + 0x7ff\n 16190: a1 = a1 + 0x119\n 16194: a5 = a1 + 0x200\n 16198: a0 = u64 [a5 + 0x28]\n 16201: a2 = u64 [a5 + 0x40]\n 16204: a3 = u64 [a5 + 0x30]\n 16207: a4 = u64 [a5 + 0x38]\n 16210: a1 = a0 + 0x60\n 16213: t0 = 658, jump @860\n      : @569 [@dyn 329] (gas: 1)\n 16219: jump @558 if a0 != 0\n      : @570 (gas: 37)\n 16223: i32 a1 = a1 + 0\n 16225: a0 = s1 + 0x2000\n 16229: i32 a0 = a0 + 0x620\n 16233: ecalli 1 // 'call_data_load'\n 16235: a1 = s1 + 0x2118\n 16239: a2 = a1 + 0x500\n 16243: a0 = u64 [a2 + 0x20]\n 16246: u64 [s1 + 0x28] = a0\n 16249: a0 = u64 [a2 + 0x18]\n 16252: u64 [s1 + 0x10] = a0\n 16255: a0 = u64 [a2 + 0x10]\n 16258: u64 [s1 + 0x18] = a0\n 16261: a0 = u64 [a2 + 0x8]\n 16264: u64 [s1 + 0x20] = a0\n 16267: a3 = u64 [s1 + 0x1a0]\n 16271: a5 = s1 + 0x7ff\n 16275: a5 = a5 + 0x119\n 16279: u64 [a5 + 0x1a0] = a3\n 16283: a2 = u64 [s1 + 0x1a8]\n 16287: u64 [a5 + 0x198] = a2\n 16291: a1 = u64 [s1 + 0x1b0]\n 16295: u64 [a5 + 0x190] = a1\n 16299: a0 = u64 [s1 + 0x1b8]\n 16303: u64 [a5 + 0x188] = a0\n 16307: a4 = a0\n 16309: u64 [a5 + 0x1c0] = a3\n 16313: a3 = a5 + 0x100\n 16317: u64 [a3 + 0xb8] = a2\n 16321: u64 [a3 + 0xb0] = a1\n 16325: a0 = s1 + 0x7ff\n 16329: a0 = a0 + 0x2e1\n 16333: a1 = s1 + 0x7ff\n 16337: a1 = a1 + 0x2c1\n 16341: a2 = s1 + 0x7ff\n 16345: a2 = a2 + 0x2a1\n 16349: u64 [a3 + 0xa8] = a4\n 16353: ra = 660, jump @825\n      : @571 [@dyn 330] (gas: 30)\n 16359: a4 = s1 + 0x7ff\n 16363: a4 = a4 + 0x119\n 16367: a0 = u64 [a4 + 0x1c8]\n 16371: t0 = u64 [a4 + 0x1e0]\n 16375: a2 = u64 [a4 + 0x1d0]\n 16379: a3 = u64 [a4 + 0x1d8]\n 16383: t2 = a0 + 0x80\n 16387: a5 = t2 <u a0\n 16390: t1 = a2 + a5\n 16393: a1 = t1 <u a2\n 16396: a1 = a5 if a5 == 0\n 16399: a1 = a1 + a3\n 16402: a5 = a1 <u a3\n 16405: a5 = a5 + t0\n 16408: u64 [a4 + 0x108] = t2\n 16412: u64 [a4 + 0x140] = t0\n 16416: u64 [a4 + 0x138] = a3\n 16420: a3 = a4 + 0x100\n 16424: u64 [a3 + 0x30] = a2\n 16427: u64 [a3 + 0x28] = a0\n 16430: u64 [a4 + 0x110] = t1\n 16434: u64 [a3 + 0x18] = a1\n 16437: a0 = s1 + 0x7ff\n 16441: a0 = a0 + 0x261\n 16445: a1 = s1 + 0x7ff\n 16449: a1 = a1 + 0x241\n 16453: a2 = s1 + 0x7ff\n 16457: a2 = a2 + 0x221\n 16461: u64 [a3 + 0x20] = a5\n 16464: ra = 662, jump @724\n      : @572 [@dyn 331] (gas: 39)\n 16470: a1 = s1 + 0x7ff\n 16474: a1 = a1 + 0x119\n 16478: a2 = a1 + 0x100\n 16482: a0 = u64 [a2 + 0x60]\n 16485: u64 [s1 + 0xe8] = a0\n 16489: a0 = u64 [a2 + 0x58]\n 16492: u64 [s1 + 0xf0] = a0\n 16496: a0 = u64 [a2 + 0x50]\n 16499: u64 [s1 + 0xf8] = a0\n 16503: a0 = u64 [a2 + 0x48]\n 16506: u64 [s1 + 0x100] = a0\n 16510: a0 = u64 [a2 + 0x80]\n 16514: u64 [s1 + 0xc8] = a0\n 16518: a0 = u64 [a2 + 0x78]\n 16521: u64 [s1 + 0xd0] = a0\n 16525: a0 = u64 [a2 + 0x70]\n 16528: u64 [s1 + 0xd8] = a0\n 16532: a0 = u64 [a2 + 0x68]\n 16535: u64 [s1 + 0xe0] = a0\n 16539: a0 = u64 [s1 + 0x1a0]\n 16543: u64 [a1 + 0xc0] = a0\n 16547: a4 = u64 [s1 + 0x1a8]\n 16551: u64 [a1 + 0xb8] = a4\n 16555: a2 = u64 [s1 + 0x1b0]\n 16559: u64 [a1 + 0xb0] = a2\n 16563: a3 = u64 [s1 + 0x1b8]\n 16567: u64 [a1 + 0xa8] = a3\n 16571: u64 [a1 + 0xe0] = a0\n 16575: u64 [a1 + 0xd8] = a4\n 16579: u64 [a1 + 0xd0] = a2\n 16583: a4 = a1\n 16585: a0 = s1 + 0x7ff\n 16589: a0 = a0 + 0x201\n 16593: a1 = s1 + 0x7ff\n 16597: a1 = a1 + 0x1e1\n 16601: a2 = s1 + 0x7ff\n 16605: a2 = a2 + 0x1c1\n 16609: u64 [a4 + 0xc8] = a3\n 16613: ra = 664, jump @825\n      : @573 [@dyn 332] (gas: 24)\n 16619: a1 = s1 + 0x7ff\n 16623: a1 = a1 + 0x119\n 16627: a0 = u64 [a1 + 0xe8]\n 16631: t0 = u64 [a1 + 0x100]\n 16635: a2 = u64 [a1 + 0xf0]\n 16639: a3 = u64 [a1 + 0xf8]\n 16643: a4 = a0 + 0xa0\n 16647: a0 = a4 <u a0\n 16650: a5 = a2 + a0\n 16653: a2 = a5 <u a2\n 16656: a2 = a0 if a0 == 0\n 16659: a2 = a2 + a3\n 16662: a0 = a2 <u a3\n 16665: a3 = t0 + a0\n 16668: u64 [a1 + 0x68] = a4\n 16671: u64 [a1 + 0x70] = a5\n 16674: u64 [a1 + 0x78] = a2\n 16677: a2 = a1\n 16679: a0 = s1 + 0x7ff\n 16683: a0 = a0 + 0x1a1\n 16687: a1 = s1 + 0x7ff\n 16691: a1 = a1 + 0x181\n 16695: u64 [a2 + 0x80] = a3\n 16699: ra = 666, jump @784\n      : @574 [@dyn 333] (gas: 29)\n 16705: a4 = s1 + 0x7ff\n 16709: a4 = a4 + 0x119\n 16713: a0 = u64 [a4 + 0x98]\n 16717: u64 [s1 + 0xb0] = a0\n 16721: a0 = u64 [a4 + 0x90]\n 16725: u64 [s1 + 0xb8] = a0\n 16729: a0 = u64 [a4 + 0x88]\n 16733: u64 [s1 + 0xc0] = a0\n 16737: a0 = u64 [s1 + 0x1a0]\n 16741: u64 [a4 + 0x20] = a0\n 16744: a2 = u64 [s1 + 0x1a8]\n 16748: u64 [a4 + 0x18] = a2\n 16751: a1 = u64 [s1 + 0x1b0]\n 16755: a3 = s1 + 0x1000\n 16759: u64 [a3 + 0xfffffffffffff928] = a1\n 16763: a3 = u64 [s1 + 0x1b8]\n 16767: a5 = s1 + 0x1000\n 16771: u64 [a5 + 0xfffffffffffff920] = a3\n 16775: u64 [a4 + 0x40] = a0\n 16778: u64 [a4 + 0x38] = a2\n 16781: u64 [a4 + 0x30] = a1\n 16784: a0 = s1 + 0x7ff\n 16788: a0 = a0 + 0x161\n 16792: a1 = s1 + 0x7ff\n 16796: a1 = a1 + 0x141\n 16800: a2 = s1 + 0x7ff\n 16804: a2 = a2 + 0x121\n 16808: u64 [a4 + 0x28] = a3\n 16811: ra = 668, jump @825\n      : @575 [@dyn 334] (gas: 37)\n 16817: a1 = s1 + 0x7ff\n 16821: a1 = a1 + 0x119\n 16825: a0 = u64 [a1 + 0x48]\n 16828: t0 = u64 [a1 + 0x60]\n 16831: a2 = u64 [a1 + 0x50]\n 16834: a3 = u64 [a1 + 0x58]\n 16837: a4 = a0 + 0xc0\n 16841: a5 = a4 <u a0\n 16844: t1 = a2 + a5\n 16847: a1 = t1 <u a2\n 16850: a1 = a5 if a5 == 0\n 16853: a1 = a1 + a3\n 16856: a5 = a1 <u a3\n 16859: a5 = a5 + t0\n 16862: t2 = s1 + 0x1000\n 16866: u64 [t2 + 0xfffffffffffff8a0] = a4\n 16870: a4 = s1 + 0x1000\n 16874: u64 [a4 + 0xfffffffffffff8d8] = t0\n 16878: a4 = s1 + 0x1000\n 16882: u64 [a4 + 0xfffffffffffff8d0] = a3\n 16886: a3 = s1 + 0x1000\n 16890: u64 [a3 + 0xfffffffffffff8c8] = a2\n 16894: a2 = s1 + 0x1000\n 16898: u64 [a2 + 0xfffffffffffff8c0] = a0\n 16902: a0 = s1 + 0x1000\n 16906: u64 [a0 + 0xfffffffffffff8a8] = t1\n 16910: a0 = s1 + 0x1000\n 16914: u64 [a0 + 0xfffffffffffff8b0] = a1\n 16918: a0 = s1 + 0x7ff\n 16922: a0 = a0 + 0xe1\n 16926: a1 = s1 + 0x7ff\n 16930: a1 = a1 + 0xc1\n 16934: a2 = s1 + 0x7ff\n 16938: a2 = a2 + 0xa1\n 16942: a3 = s1 + 0x1000\n 16946: u64 [a3 + 0xfffffffffffff8b8] = a5\n 16950: ra = 670, jump @724\n      : @576 [@dyn 335] (gas: 51)\n 16956: a0 = s1 + 0x1000\n 16960: a0 = u64 [a0 + 0xfffffffffffff8f8]\n 16964: u64 [s1 + 0x90] = a0\n 16968: a0 = s1 + 0x1000\n 16972: a0 = u64 [a0 + 0xfffffffffffff8f0]\n 16976: u64 [s1 + 0x98] = a0\n 16980: a0 = s1 + 0x1000\n 16984: a0 = u64 [a0 + 0xfffffffffffff8e8]\n 16988: u64 [s1 + 0xa0] = a0\n 16992: a0 = s1 + 0x1000\n 16996: a0 = u64 [a0 + 0xfffffffffffff8e0]\n 17000: u64 [s1 + 0xa8] = a0\n 17004: a1 = s1 + 0x7ff\n 17008: a1 = a1 + 0x119\n 17012: a0 = u64 [a1]\n 17014: u64 [s1 + 0x70] = a0\n 17017: a0 = u64 [a1 + 0xfffffffffffffff8]\n 17020: u64 [s1 + 0x78] = a0\n 17023: a0 = s1 + 0x1000\n 17027: a0 = u64 [a0 + 0xfffffffffffff908]\n 17031: u64 [s1 + 0x80] = a0\n 17035: a0 = s1 + 0x1000\n 17039: a0 = u64 [a0 + 0xfffffffffffff900]\n 17043: u64 [s1 + 0x88] = a0\n 17047: a0 = u64 [s1 + 0x1a0]\n 17051: a1 = s1 + 0x1000\n 17055: u64 [a1 + 0xfffffffffffff858] = a0\n 17059: a2 = u64 [s1 + 0x1a8]\n 17063: a1 = s1 + 0x1000\n 17067: u64 [a1 + 0xfffffffffffff850] = a2\n 17071: a1 = u64 [s1 + 0x1b0]\n 17075: a3 = s1 + 0x1000\n 17079: u64 [a3 + 0xfffffffffffff848] = a1\n 17083: a3 = u64 [s1 + 0x1b8]\n 17087: a4 = s1 + 0x1000\n 17091: u64 [a4 + 0xfffffffffffff840] = a3\n 17095: a4 = s1 + 0x1000\n 17099: u64 [a4 + 0xfffffffffffff878] = a0\n 17103: a0 = s1 + 0x1000\n 17107: u64 [a0 + 0xfffffffffffff870] = a2\n 17111: a0 = s1 + 0x1000\n 17115: u64 [a0 + 0xfffffffffffff868] = a1\n 17119: a0 = s1 + 0x7ff\n 17123: a0 = a0 + 0x81\n 17127: a1 = s1 + 0x7ff\n 17131: a1 = a1 + 0x61\n 17134: a2 = s1 + 0x7ff\n 17138: a2 = a2 + 0x41\n 17141: a4 = s1 + 0x1000\n 17145: u64 [a4 + 0xfffffffffffff860] = a3\n 17149: ra = 672, jump @825\n      : @577 [@dyn 336] (gas: 29)\n 17155: a0 = s1 + 0x1000\n 17159: a0 = u64 [a0 + 0xfffffffffffff880]\n 17163: a1 = s1 + 0x1000\n 17167: t0 = u64 [a1 + 0xfffffffffffff898]\n 17171: a1 = s1 + 0x1000\n 17175: a2 = u64 [a1 + 0xfffffffffffff888]\n 17179: a1 = s1 + 0x1000\n 17183: a3 = u64 [a1 + 0xfffffffffffff890]\n 17187: a4 = a0 + 0xe0\n 17191: a5 = a4 <u a0\n 17194: t1 = a2 + a5\n 17197: a1 = t1 <u a2\n 17200: a1 = a5 if a5 == 0\n 17203: a1 = a1 + a3\n 17206: a5 = a1 <u a3\n 17209: a5 = a5 + t0\n 17212: u64 [s1 + 0x7c0] = a4\n 17216: u64 [s1 + 0x7f8] = t0\n 17220: u64 [s1 + 0x7f0] = a3\n 17224: u64 [s1 + 0x7e8] = a2\n 17228: u64 [s1 + 0x7e0] = a0\n 17232: u64 [s1 + 0x7c8] = t1\n 17236: u64 [s1 + 0x7d0] = a1\n 17240: a0 = s1 + 0x7ff\n 17244: a0 = a0 + 0x1\n 17247: a1 = s1 + 0x7e0\n 17251: a2 = s1 + 0x7c0\n 17255: u64 [s1 + 0x7d8] = a5\n 17259: ra = 674, jump @724\n      : @578 [@dyn 337] (gas: 27)\n 17265: a0 = s1 + 0x1000\n 17269: a0 = u64 [a0 + 0xfffffffffffff818]\n 17273: u64 [s1 + 0x50] = a0\n 17276: a0 = s1 + 0x1000\n 17280: a0 = u64 [a0 + 0xfffffffffffff810]\n 17284: u64 [s1 + 0x58] = a0\n 17287: a0 = s1 + 0x1000\n 17291: a0 = u64 [a0 + 0xfffffffffffff808]\n 17295: u64 [s1 + 0x60] = a0\n 17298: a0 = s1 + 0x1000\n 17302: a0 = u64 [a0 + 0xfffffffffffff800]\n 17306: u64 [s1 + 0x68] = a0\n 17309: a0 = s1 + 0x1000\n 17313: a0 = u64 [a0 + 0xfffffffffffff838]\n 17317: u64 [s1 + 0x30] = a0\n 17320: a0 = s1 + 0x1000\n 17324: a0 = u64 [a0 + 0xfffffffffffff830]\n 17328: u64 [s1 + 0x38] = a0\n 17331: a0 = s1 + 0x1000\n 17335: a0 = u64 [a0 + 0xfffffffffffff828]\n 17339: u64 [s1 + 0x40] = a0\n 17342: a0 = s1 + 0x1000\n 17346: a0 = u64 [a0 + 0xfffffffffffff820]\n 17350: u64 [s1 + 0x48] = a0\n 17353: a0 = s1 + 0x7a0\n 17357: a1 = 0x40\n 17360: ra = 676, jump @2\n      : @579 [@dyn 338] (gas: 15)\n 17366: a4 = s1 + 0x700\n 17370: a2 = u64 [a4 + 0xb8]\n 17374: a3 = u64 [a4 + 0xb0]\n 17378: a0 = u64 [a4 + 0xa8]\n 17382: a1 = u64 [a4 + 0xa0]\n 17386: u64 [s1 + 0x1b0] = a0\n 17390: a0 = a0 | a2\n 17393: u64 [s1 + 0x1b8] = a1\n 17397: a1 = a1 | a3\n 17400: a1 = a1 | a0\n 17403: a1 = a1 >> 0x20\n 17406: a0 = a0 | a3\n 17409: a0 = a0 << 0x20\n 17412: a0 = a0 | a1\n 17415: jump @558 if a0 != 0\n      : @580 (gas: 14)\n 17419: a0 = u64 [s1 + 0x128]\n 17423: a4 = s1 + 0x700\n 17427: u64 [a4 + 0x80] = a0\n 17431: a0 = u64 [s1 + 0x130]\n 17435: u64 [a4 + 0x88] = a0\n 17439: a0 = u64 [s1 + 0x138]\n 17443: u64 [a4 + 0x90] = a0\n 17447: a1 = s1 + 0x780\n 17451: a0 = u64 [s1 + 0x140]\n 17455: u64 [a4 + 0x98] = a0\n 17459: a0 = u64 [s1 + 0x1b8]\n 17463: u64 [s1 + 0x1a8] = a2\n 17467: u64 [s1 + 0x1a0] = a3\n 17471: ra = 678, jump @4\n      : @581 [@dyn 339] (gas: 14)\n 17477: a3 = s1 + 0x100\n 17481: a2 = u64 [a3 + 0xa0]\n 17485: a0 = u64 [a3 + 0xa8]\n 17489: a2 = a2 | a0\n 17492: a0 = 0x100000000\n 17502: u64 [a3 + 0x38] = a0\n 17505: a0 = 0xffffffe0\n 17515: a1 = u64 [a3 + 0xb8]\n 17519: a0 = a1 <u a0\n 17522: a1 = u64 [a3 + 0xb0]\n 17526: a0 = 0 if a1 != 0\n 17528: u64 [a3 + 0x40] = a2\n 17531: a0 = 0 if a2 != 0\n 17533: jump @558 if a0 == 0\n      : @582 (gas: 13)\n 17537: a0 = u64 [s1 + 0x1b8]\n 17541: i32 a0 = a0 + 0x20\n 17544: a1 = u64 [s1 + 0x108]\n 17548: a3 = s1 + 0x700\n 17552: u64 [a3 + 0x60] = a1\n 17555: a1 = u64 [s1 + 0x110]\n 17559: u64 [a3 + 0x68] = a1\n 17562: a1 = u64 [s1 + 0x118]\n 17566: u64 [a3 + 0x70] = a1\n 17569: a1 = s1 + 0x760\n 17573: a2 = u64 [s1 + 0x120]\n 17577: u64 [a3 + 0x78] = a2\n 17580: ra = 680, jump @4\n      : @583 [@dyn 340] (gas: 4)\n 17586: a2 = s1 + 0x100\n 17590: a0 = u64 [a2 + 0x38]\n 17593: a0 = a0 + 0xffffffffffffffc0\n 17596: t0 = 682, jump @869\n      : @584 [@dyn 341] (gas: 1)\n 17602: jump @558 if a0 == 0\n      : @585 (gas: 8)\n 17606: a0 = u64 [s1 + 0x1b8]\n 17610: i32 a0 = a0 + 0x40\n 17613: u64 [s1 + 1880] = 0\n 17617: u64 [s1 + 1872] = 0\n 17621: u64 [s1 + 1856] = 0x120\n 17627: a1 = s1 + 0x740\n 17631: u64 [s1 + 1864] = 0\n 17635: ra = 684, jump @4\n      : @586 [@dyn 342] (gas: 39)\n 17641: a1 = u64 [s1 + 0x1b8]\n 17645: a0 = a1 + 0x120\n 17649: a1 = a0 <u a1\n 17652: a3 = u64 [s1 + 0x1b0]\n 17656: a2 = a3 + a1\n 17659: a3 = a2 <u a3\n 17662: a3 = a1 if a1 == 0\n 17665: a1 = u64 [s1 + 0x1a0]\n 17669: a3 = a3 + a1\n 17672: a4 = a3 <u a1\n 17675: a1 = u64 [s1 + 0x1a8]\n 17679: a4 = a4 + a1\n 17682: a5 = s1 + 0x600\n 17686: u64 [a5 + 0xc8] = a2\n 17690: u64 [a5 + 0xc0] = a0\n 17694: a0 = u64 [s1 + 0xc8]\n 17698: u64 [a5 + 0xf8] = a0\n 17702: a0 = u64 [s1 + 0xd0]\n 17706: u64 [a5 + 0xf0] = a0\n 17710: a0 = u64 [s1 + 0xd8]\n 17714: u64 [a5 + 0xe8] = a0\n 17718: a0 = u64 [s1 + 0xe0]\n 17722: u64 [a5 + 0xe0] = a0\n 17726: a0 = u64 [s1 + 0xe8]\n 17730: a1 = s1 + 0x700\n 17734: u64 [a1 + 0x18] = a0\n 17737: a0 = u64 [s1 + 0xf0]\n 17741: u64 [a1 + 0x10] = a0\n 17744: a0 = u64 [s1 + 0xf8]\n 17748: u64 [a1 + 0x8] = a0\n 17751: a0 = u64 [s1 + 0x100]\n 17755: u64 [a1] = a0\n 17757: u64 [a5 + 0xd0] = a3\n 17761: a0 = s1 + 0x720\n 17765: a1 = s1 + 0x700\n 17769: a2 = s1 + 0x6e0\n 17773: a3 = s1 + 0x6c0\n 17777: u64 [a5 + 0xd8] = a4\n 17781: ra = 686, jump @814\n      : @587 [@dyn 343] (gas: 5)\n 17787: a0 = 0x100000000\n 17797: a2 = s1 + 0x100\n 17801: u64 [a2 + 0x38] = a0\n 17804: a0 = 0xffffffa0\n 17814: t0 = 688, jump @869\n      : @588 [@dyn 344] (gas: 1)\n 17820: jump @558 if a0 == 0\n      : @589 (gas: 25)\n 17824: a1 = 0xffffffff\n 17834: a3 = s1 + 0x700\n 17838: a2 = u64 [a3 + 0x38]\n 17841: u64 [s1 + 0x118] = a2\n 17845: a2 = u64 [a3 + 0x30]\n 17848: u64 [s1 + 0x120] = a2\n 17852: a2 = u64 [a3 + 0x28]\n 17855: u64 [s1 + 0x128] = a2\n 17859: a2 = u64 [a3 + 0x20]\n 17862: u64 [s1 + 0x130] = a2\n 17866: a2 = u64 [s1 + 0xb0]\n 17870: a2 = a2 & a1\n 17873: a1 = u64 [s1 + 0xb8]\n 17877: a1 = a1 & 0xffffffffffffffff\n 17880: a3 = u64 [s1 + 0xc0]\n 17884: a3 = a3 & 0xffffffffffffffff\n 17887: a0 = u64 [s1 + 0x1b8]\n 17891: i32 a0 = a0 + 0x60\n 17894: u64 [s1 + 1720] = 0\n 17898: a4 = s1 + 0x600\n 17902: u64 [a4 + 0xa0] = a3\n 17906: u64 [a4 + 0xa8] = a1\n 17910: a1 = s1 + 0x6a0\n 17914: u64 [a4 + 0xb0] = a2\n 17918: ra = 690, jump @4\n      : @590 [@dyn 345] (gas: 4)\n 17924: a2 = s1 + 0x100\n 17928: a0 = u64 [a2 + 0x38]\n 17931: a0 = a0 + 0xffffffffffffff80\n 17934: t0 = 692, jump @869\n      : @591 [@dyn 346] (gas: 1)\n 17940: jump @558 if a0 == 0\n      : @592 (gas: 31)\n 17944: a5 = u64 [s1 + 0x1b8]\n 17948: a0 = u64 [s1 + 0x130]\n 17952: t0 = a0 <u a5\n 17955: t1 = a0\n 17957: a3 = u64 [s1 + 0x1b0]\n 17961: a0 = u64 [s1 + 0x128]\n 17965: a1 = a0 ^ a3\n 17968: a2 = a0 <u a3\n 17971: t2 = a3\n 17973: a2 = t0 if a1 == 0\n 17976: a3 = u64 [s1 + 0x1a0]\n 17980: a4 = u64 [s1 + 0x120]\n 17984: a1 = a4 - a3\n 17987: ra = a4 <u a3\n 17990: a4 = u64 [s1 + 0x1a8]\n 17994: a3 = u64 [s1 + 0x118]\n 17998: a4 = a3 - a4\n 18001: a4 = a4 - ra\n 18004: a3 = a1 <u a2\n 18007: a4 = a4 - a3\n 18010: a1 = a1 - a2\n 18013: a2 = a0 - t2\n 18016: a2 = a2 - t0\n 18019: a3 = t1 - a5\n 18022: i32 a0 = a5 + 0x80\n 18026: u64 [s1 + 0x680] = a3\n 18030: u64 [s1 + 0x688] = a2\n 18034: u64 [s1 + 0x690] = a1\n 18038: a1 = s1 + 0x680\n 18042: u64 [s1 + 0x698] = a4\n 18046: ra = 694, jump @4\n      : @593 [@dyn 347] (gas: 30)\n 18052: a0 = u64 [s1 + 0x118]\n 18056: a5 = s1 + 0x600\n 18060: u64 [a5 + 0x18] = a0\n 18063: a0 = u64 [s1 + 0x120]\n 18067: u64 [a5 + 0x10] = a0\n 18070: a0 = u64 [s1 + 0x128]\n 18074: u64 [a5 + 0x8] = a0\n 18077: a0 = u64 [s1 + 0x130]\n 18081: u64 [a5] = a0\n 18083: a0 = u64 [s1 + 0x70]\n 18086: u64 [a5 + 0x38] = a0\n 18089: a0 = u64 [s1 + 0x78]\n 18092: u64 [a5 + 0x30] = a0\n 18095: a0 = u64 [s1 + 0x80]\n 18099: u64 [a5 + 0x28] = a0\n 18102: a0 = u64 [s1 + 0x88]\n 18106: u64 [a5 + 0x20] = a0\n 18109: a0 = u64 [s1 + 0x90]\n 18113: u64 [a5 + 0x58] = a0\n 18116: a0 = u64 [s1 + 0x98]\n 18120: u64 [a5 + 0x50] = a0\n 18123: a0 = u64 [s1 + 0xa0]\n 18127: u64 [a5 + 0x48] = a0\n 18130: a0 = s1 + 0x660\n 18134: a1 = s1 + 0x640\n 18138: a2 = s1 + 0x620\n 18142: a3 = s1 + 0x600\n 18146: a4 = u64 [s1 + 0xa8]\n 18150: u64 [a5 + 0x40] = a4\n 18153: ra = 696, jump @814\n      : @594 [@dyn 348] (gas: 5)\n 18159: a0 = 0x100000000\n 18169: a2 = s1 + 0x100\n 18173: u64 [a2 + 0x38] = a0\n 18176: a0 = 0xffffff60\n 18186: t0 = 698, jump @869\n      : @595 [@dyn 349] (gas: 1)\n 18192: jump @558 if a0 == 0\n      : @596 (gas: 38)\n 18196: a2 = s1 + 0x600\n 18200: a0 = u64 [a2 + 0x60]\n 18203: a1 = u64 [a2 + 0x68]\n 18206: t2 = u64 [s1 + 0x678]\n 18210: u64 [s1 + 0x128] = t2\n 18214: a4 = u64 [a2 + 0x70]\n 18217: u64 [s1 + 0x130] = a4\n 18221: a5 = u64 [s1 + 0x1b8]\n 18225: t0 = a0 <u a5\n 18228: t1 = a0\n 18230: u64 [s1 + 0x118] = a0\n 18234: a3 = u64 [s1 + 0x1b0]\n 18238: a0 = a1\n 18240: a1 = a1 ^ a3\n 18243: a2 = a0 <u a3\n 18246: ra = a0\n 18248: u64 [s1 + 0x120] = a0\n 18252: a0 = a3\n 18254: a2 = t0 if a1 == 0\n 18257: a3 = u64 [s1 + 0x1a0]\n 18261: a1 = a4 - a3\n 18264: a3 = a4 <u a3\n 18267: a4 = u64 [s1 + 0x1a8]\n 18271: a4 = t2 - a4\n 18274: a4 = a4 - a3\n 18277: a3 = a1 <u a2\n 18280: a4 = a4 - a3\n 18283: a1 = a1 - a2\n 18286: a2 = ra - a0\n 18289: a2 = a2 - t0\n 18292: a3 = t1 - a5\n 18295: i32 a0 = a5 + 0xa0\n 18299: u64 [s1 + 0x5e0] = a3\n 18303: u64 [s1 + 0x5e8] = a2\n 18307: u64 [s1 + 0x5f0] = a1\n 18311: a1 = s1 + 0x5e0\n 18315: u64 [s1 + 0x5f8] = a4\n 18319: ra = 700, jump @4\n      : @597 [@dyn 350] (gas: 29)\n 18325: a0 = u64 [s1 + 0x128]\n 18329: u64 [s1 + 0x578] = a0\n 18333: a0 = u64 [s1 + 0x130]\n 18337: u64 [s1 + 0x570] = a0\n 18341: a0 = u64 [s1 + 0x120]\n 18345: u64 [s1 + 0x568] = a0\n 18349: a0 = u64 [s1 + 0x118]\n 18353: u64 [s1 + 0x560] = a0\n 18357: a0 = u64 [s1 + 0x30]\n 18360: u64 [s1 + 0x598] = a0\n 18364: a0 = u64 [s1 + 0x38]\n 18367: u64 [s1 + 0x590] = a0\n 18371: a0 = u64 [s1 + 0x40]\n 18374: u64 [s1 + 0x588] = a0\n 18378: a0 = u64 [s1 + 0x48]\n 18381: u64 [s1 + 0x580] = a0\n 18385: a0 = u64 [s1 + 0x50]\n 18388: u64 [s1 + 0x5b8] = a0\n 18392: a0 = u64 [s1 + 0x58]\n 18395: u64 [s1 + 0x5b0] = a0\n 18399: a0 = u64 [s1 + 0x60]\n 18402: u64 [s1 + 0x5a8] = a0\n 18406: a0 = s1 + 0x5c0\n 18410: a1 = s1 + 0x5a0\n 18414: a2 = s1 + 0x580\n 18418: a3 = s1 + 0x560\n 18422: a4 = u64 [s1 + 0x68]\n 18425: u64 [s1 + 0x5a0] = a4\n 18429: ra = 702, jump @814\n      : @598 [@dyn 351] (gas: 16)\n 18435: a1 = s1 + 0x500\n 18439: a0 = u64 [a1 + 0xd8]\n 18443: u64 [s1 + 0x120] = a0\n 18447: a0 = u64 [a1 + 0xd0]\n 18451: u64 [s1 + 0x118] = a0\n 18455: a0 = u64 [a1 + 0xc8]\n 18459: u64 [s1 + 0x128] = a0\n 18463: a0 = u64 [a1 + 0xc0]\n 18467: u64 [s1 + 0x130] = a0\n 18471: a0 = u64 [s1 + 0x188]\n 18475: i32 a1 = a0 + 0x24\n 18478: a0 = s1 + 0x2000\n 18482: i32 a0 = a0 + 0x640\n 18486: ra = 0x2c0\n 18490: ecalli 1 // 'call_data_load'\n 18492: fallthrough\n      : @599 [@dyn 352] (gas: 4)\n 18493: a2 = s1 + 0x100\n 18497: a0 = u64 [a2 + 0x38]\n 18500: a0 = a0 + 0xffffffffffffff40\n 18504: t0 = 706, jump @869\n      : @600 [@dyn 353] (gas: 1)\n 18510: jump @558 if a0 == 0\n      : @601 (gas: 15)\n 18514: a0 = s1 + 0x2118\n 18518: a5 = a0 + 0x500\n 18522: a2 = u64 [a5 + 0x28]\n 18525: a1 = u64 [a5 + 0x30]\n 18528: a3 = u64 [a5 + 0x38]\n 18531: a4 = u64 [a5 + 0x40]\n 18534: a0 = u64 [s1 + 0x1b8]\n 18538: i32 a0 = a0 + 0xc0\n 18542: a5 = s1 + 0x500\n 18546: u64 [a5 + 0x58] = a4\n 18549: u64 [a5 + 0x50] = a3\n 18552: u64 [a5 + 0x48] = a1\n 18555: a1 = s1 + 0x540\n 18559: u64 [a5 + 0x40] = a2\n 18562: ra = 708, jump @4\n      : @602 [@dyn 354] (gas: 5)\n 18568: a0 = 0x100000000\n 18578: a2 = s1 + 0x100\n 18582: u64 [a2 + 0x88] = a0\n 18586: a0 = 0xffffff20\n 18596: t0 = 710, jump @869\n      : @603 [@dyn 355] (gas: 1)\n 18602: jump @558 if a0 == 0\n      : @604 (gas: 13)\n 18606: a0 = u64 [s1 + 0x1b8]\n 18610: i32 a0 = a0 + 0xe0\n 18614: a1 = u64 [s1 + 0x168]\n 18618: a3 = s1 + 0x500\n 18622: u64 [a3 + 0x20] = a1\n 18625: a1 = u64 [s1 + 0x178]\n 18629: u64 [a3 + 0x28] = a1\n 18632: a1 = u64 [s1 + 0x180]\n 18636: u64 [a3 + 0x30] = a1\n 18639: a1 = s1 + 0x520\n 18643: a2 = u64 [s1 + 0x190]\n 18647: u64 [a3 + 0x38] = a2\n 18650: ra = 712, jump @4\n      : @605 [@dyn 356] (gas: 5)\n 18656: a0 = s1 + 0x2000\n 18660: i32 a0 = a0 + 0x660\n 18664: ra = 0x2ca\n 18668: ecalli 7 // 'now'\n 18670: fallthrough\n      : @606 [@dyn 357] (gas: 4)\n 18671: a2 = s1 + 0x100\n 18675: a0 = u64 [a2 + 0x88]\n 18679: a0 = a0 + 0xffffffffffffff00\n 18683: t0 = 716, jump @869\n      : @607 [@dyn 358] (gas: 1)\n 18689: jump @558 if a0 == 0\n      : @608 (gas: 15)\n 18693: a0 = s1 + 0x2118\n 18697: a5 = a0 + 0x500\n 18701: a2 = u64 [a5 + 0x48]\n 18704: a1 = u64 [a5 + 0x50]\n 18707: a3 = u64 [a5 + 0x58]\n 18710: a4 = u64 [a5 + 0x60]\n 18713: a0 = u64 [s1 + 0x1b8]\n 18717: i32 a0 = a0 + 0x100\n 18721: a5 = s1 + 0x500\n 18725: u64 [a5 + 0x18] = a4\n 18728: u64 [a5 + 0x10] = a3\n 18731: u64 [a5 + 0x8] = a1\n 18734: a1 = s1 + 0x500\n 18738: u64 [a5] = a2\n 18740: ra = 718, jump @4\n      : @609 [@dyn 359] (gas: 3)\n 18746: a0 = u64 [s1 + 0x170]\n 18750: ecalli 3 // 'caller'\n 18752: fallthrough\n      : @610 (gas: 30)\n 18753: t0 = u64 [s1 + 0x130]\n 18757: ra = u64 [s1 + 0x1b8]\n 18761: t1 = t0 <u ra\n 18764: a5 = u64 [s1 + 0x1b0]\n 18768: a1 = u64 [s1 + 0x128]\n 18772: a3 = a1 ^ a5\n 18775: a2 = a1 <u a5\n 18778: a2 = t1 if a3 == 0\n 18781: a3 = u64 [s1 + 0x1a0]\n 18785: a4 = u64 [s1 + 0x118]\n 18789: a0 = a4 - a3\n 18792: t2 = a4 <u a3\n 18795: a4 = u64 [s1 + 0x1a8]\n 18799: a3 = u64 [s1 + 0x120]\n 18803: a4 = a3 - a4\n 18806: a4 = a4 - t2\n 18809: a3 = a0 <u a2\n 18812: a4 = a4 - a3\n 18815: a2 = a0 - a2\n 18818: a1 = a1 - a5\n 18821: a0 = a1 - t1\n 18824: a1 = t0 - ra\n 18827: a0 = a0 | a4\n 18830: a3 = a1 | a2\n 18833: a3 = a3 | a0\n 18836: a0 = a0 | a2\n 18839: a3 = a3 >> 0x20\n 18842: a0 = a0 << 0x20\n 18845: a0 = a0 | a3\n 18848: jump @558 if a0 != 0\n      : @611 (gas: 50)\n 18852: a3 = u64 [s1 + 0x198]\n 18856: a0 = u64 [a3 + 0x8]\n 18859: a2 = i32 [a3 + 0x10]\n 18862: a3 = u64 [a3]\n 18864: a4 = reverse a0\n 18866: a0 = a4 << 0x20\n 18869: a2 = reverse a2\n 18871: a2 = a2 >> 0x20\n 18874: t0 = a2 | a0\n 18877: a4 = a4 >> 0x20\n 18880: a3 = reverse a3\n 18882: a2 = a3 << 0x20\n 18885: t1 = a2 | a4\n 18888: a3 = a3 >> 0x20\n 18891: u64 [s1 + 1176] = 0\n 18895: a0 = u64 [s1 + 0x10]\n 18898: u64 [s1 + 0x4b0] = a0\n 18902: a0 = u64 [s1 + 0x18]\n 18905: u64 [s1 + 0x4a8] = a0\n 18909: a0 = u64 [s1 + 0x20]\n 18912: u64 [s1 + 0x4a0] = a0\n 18916: a0 = u64 [s1 + 0x148]\n 18920: u64 [s1 + 0x4d0] = a0\n 18924: a0 = u64 [s1 + 0x150]\n 18928: u64 [s1 + 0x4c8] = a0\n 18932: a0 = u64 [s1 + 0x158]\n 18936: u64 [s1 + 0x4c0] = a0\n 18940: a4 = u64 [0x200f8]\n 18945: a5 = u64 [0x20100]\n 18950: a0 = u64 [0x20108]\n 18955: a2 = u64 [0x20110]\n 18960: u64 [s1 + 0x4f8] = a4\n 18964: a4 = s1 + 0x400\n 18968: u64 [a4 + 0xf0] = a5\n 18972: u64 [a4 + 0xe8] = a0\n 18976: u64 [a4 + 0xe0] = a2\n 18980: u64 [a4 + 0x90] = a3\n 18984: a0 = u64 [s1 + 0x28]\n 18987: u64 [a4 + 0xb8] = a0\n 18991: a0 = u64 [s1 + 0x160]\n 18995: u64 [a4 + 0xd8] = a0\n 18999: u64 [s1 + 0x488] = t1\n 19003: a2 = s1 + 0x4e0\n 19007: a3 = s1 + 0x4c0\n 19011: a4 = s1 + 0x4a0\n 19015: a5 = s1 + 0x480\n 19019: u64 [s1 + 0x480] = t0\n 19023: a0 = u64 [s1 + 0x1b8]\n 19027: ra = 0x1fe\n 19031: jump @10\n      : @612 (gas: 4)\n 19034: a0 = 0\n 19036: a1 = 0\n 19038: ra = 0x2d0\n 19042: jump @13\n      : @613 (gas: 2)\n 19045: a1 = 0\n 19047: ra = 720, jump @13\n      : @614 [@dyn 360] (gas: 3)\n 19053: i32 a1 = a0 + 0\n 19055: a0 = 0x1\n 19058: jump @616\n      : @615 (gas: 4)\n 19060: a1 = 0x20230\n 19065: i32 a1 = a1 + 0\n 19067: a0 = 0x1\n 19070: fallthrough\n      : @616 (gas: 5)\n 19071: a2 = 0\n 19073: ecalli 8 // 'seal_return'\n 19075: a0 = 0\n 19077: ra = 0x2d0\n 19081: jump @13\n      : @617 (gas: 3)\n 19084: a0 = 0\n 19086: ra = 0x2d0\n 19090: jump @13\n      : @618 (gas: 16)\n 19093: a0 = t0 >> 0x20\n 19096: a0 = a0 << 0x20\n 19099: a1 = u64 [s1 + 0x178]\n 19103: a0 = a0 | a1\n 19106: a1 = u64 [s1 + 0x170]\n 19110: a2 = u64 [s1 + 0x168]\n 19114: a1 = a1 | a2\n 19117: a2 = s1 + 0x2918\n 19121: a5 = a2 + 0x100\n 19125: u64 [a5 + 0x28] = a3\n 19128: u64 [a5 + 0x30] = a4\n 19131: u64 [a5 + 0x40] = a1\n 19134: u64 [a5 + 0x38] = a0\n 19137: a1 = s1 + 0x2a40\n 19141: a0 = u64 [s1 + 0x1b0]\n 19145: ra = 722, jump @7\n      : @619 [@dyn 361] (gas: 12)\n 19151: a0 = s1 + 0x2118\n 19155: u64 [a0 + 448] = 0\n 19159: a1 = u64 [s1 + 0x188]\n 19163: a3 = a0 + 0x100\n 19167: u64 [a3 + 0xb8] = a1\n 19171: a1 = u64 [s1 + 0x198]\n 19175: u64 [a3 + 0xb0] = a1\n 19179: a1 = s1 + 0x22c0\n 19183: a2 = u64 [s1 + 0x190]\n 19187: u64 [a3 + 0xa8] = a2\n 19191: a0 = 0\n 19193: ra = 724, jump @4\n      : @620 [@dyn 362] (gas: 3)\n 19199: t0 = 0x2d6\n 19203: a2 = s1 + 0x2118\n 19207: fallthrough\n      : @621 [@dyn 363] (gas: 7)\n 19208: u64 [a2 + 416] = 0\n 19212: u64 [a2 + 408] = 0\n 19216: u64 [a2 + 392] = 0x1\n 19221: a0 = 0x20\n 19224: a1 = s1 + 0x22a0\n 19228: u64 [a2 + 400] = 0\n 19232: ra = 728, jump @4\n      : @622 [@dyn 364] (gas: 7)\n 19238: a0 = sp + 0xffffffffffffffe0\n 19241: a0 = a0 & 0xffffffffffffffe0\n 19244: u64 [s1 + 0x1b8] = a0\n 19248: sp = a0\n 19250: a1 = 0x40\n 19253: a0 = 0\n 19255: ra = 730, jump @13\n      : @623 [@dyn 365] (gas: 4)\n 19261: a1 = sp + 0xffffffffffffffe0\n 19264: a1 = a1 & 0xffffffffffffffe0\n 19267: u64 [s1 + 0x1b0] = a1\n 19271: t0 = 732, jump @870\n      : @624 [@dyn 366] (gas: 5)\n 19277: ra = 0x2de\n 19281: ecalli 6 // 'hash_keccak_256'\n 19283: a3 = u64 [s1 + 0x1b0]\n 19287: t0 = 0x2e0\n 19291: jump @879\n      : @625 [@dyn 367] (gas: 2)\n 19294: a3 = u64 [s1 + 0x1b0]\n 19298: t0 = 736, jump @879\n      : @626 [@dyn 368] (gas: 7)\n 19304: a1 = u64 [s1 + 0x1b8]\n 19308: u64 [a1 + 0x18] = a3\n 19311: u64 [a1 + 0x10] = a2\n 19314: u64 [a1 + 0x8] = a4\n 19317: u64 [a1] = a0\n 19319: a0 = s1 + 0x2280\n 19323: ra = 738, jump @6\n      : @627 [@dyn 369] (gas: 17)\n 19329: a3 = s1 + 0x2118\n 19333: a4 = a3 + 0x100\n 19337: a0 = u64 [a4 + 0x68]\n 19340: a1 = u64 [a4 + 0x70]\n 19343: a2 = u64 [a4 + 0x80]\n 19347: a3 = u64 [a4 + 0x78]\n 19350: a0 = a0 & 0xffffffffffffff00\n 19354: a0 = a0 | 0x1\n 19357: a4 = s1 + 0x2918\n 19361: a5 = a4 + 0x100\n 19365: u64 [a5 + 0x60] = a2\n 19368: u64 [a5 + 0x58] = a3\n 19371: u64 [a5 + 0x50] = a1\n 19374: u64 [a5 + 0x48] = a0\n 19377: a1 = s1 + 0x2a60\n 19381: a0 = u64 [s1 + 0x1b8]\n 19385: ra = 740, jump @7\n      : @628 [@dyn 370] (gas: 1)\n 19391: jump @631\n      : @629 (gas: 14)\n 19394: a3 = s1 + 0x2918\n 19398: a0 = u64 [a3 + 0xc8]\n 19402: a1 = u64 [a3 + 0xd0]\n 19406: a2 = u64 [a3 + 0xd8]\n 19410: a3 = u64 [a3 + 0xe0]\n 19414: a4 = s1 + 0x1918\n 19418: u64 [a4 + 0x700] = a3\n 19422: a3 = a4 + 0x600\n 19426: u64 [a3 + 0xf8] = a2\n 19430: u64 [a3 + 0xf0] = a1\n 19434: a1 = s1 + 0x2000\n 19438: u64 [a3 + 0xe8] = a0\n 19442: a0 = a5\n 19444: ra = 742, jump @4\n      : @630 [@dyn 371] (gas: 23)\n 19450: a2 = s1 + 0x100\n 19454: a0 = u64 [a2 + 0xa0]\n 19458: a4 = s1 + 0x1918\n 19462: a5 = a4 + 0x600\n 19466: u64 [a5 + 0xb8] = a0\n 19470: a0 = u64 [a2 + 0xa8]\n 19474: u64 [a5 + 0xb0] = a0\n 19478: a0 = u64 [a2 + 0xb8]\n 19482: u64 [a5 + 0xa8] = a0\n 19486: a0 = u64 [0x20038]\n 19491: a1 = u64 [0x20040]\n 19496: a2 = u64 [0x20048]\n 19501: a3 = u64 [0x20050]\n 19506: u64 [a5 + 0xe0] = a0\n 19510: u64 [a5 + 0xd8] = a1\n 19514: u64 [a5 + 0xd0] = a2\n 19518: u64 [a5 + 0xc8] = a3\n 19522: a1 = 0x20\n 19525: a2 = s1 + 0x1fe0\n 19529: a3 = s1 + 0x1fc0\n 19533: u64 [a4 + 1728] = 0\n 19537: a0 = u64 [s1 + 0x1b0]\n 19541: ra = 744, jump @8\n      : @631 [@dyn 372] (gas: 3)\n 19547: a0 = 0\n 19549: a1 = 0\n 19551: ra = 746, jump @13\n      : @632 [@dyn 373] (gas: 3)\n 19557: i32 a1 = a0 + 0\n 19559: a0 = 0\n 19561: jump @616\n      : @633 [@dyn 374] (gas: 1)\n 19564: jump @636 if a0 == 0\n      : @634 (gas: 1)\n 19567: t0 = 750, jump @877\n      : @635 [@dyn 375] (gas: 1)\n 19573: ret\n      : @636 (gas: 3)\n 19575: a0 = sp + 0xa0\n 19579: a1 = 0x40\n 19582: ra = 752, jump @2\n      : @637 [@dyn 376] (gas: 1)\n 19588: t0 = 754, jump @858\n      : @638 [@dyn 377] (gas: 1)\n 19594: jump @650 if a0 != 0\n      : @639 (gas: 1)\n 19597: t0 = 756, jump @865\n      : @640 [@dyn 378] (gas: 1)\n 19603: ra = 758, jump @4\n      : @641 [@dyn 379] (gas: 1)\n 19609: t0 = 760, jump @857\n      : @642 [@dyn 380] (gas: 1)\n 19615: jump @650 if a0 == 0\n      : @643 (gas: 1)\n 19618: t0 = 762, jump @866\n      : @644 [@dyn 381] (gas: 1)\n 19624: ra = 764, jump @4\n      : @645 [@dyn 382] (gas: 1)\n 19630: t0 = 766, jump @864\n      : @646 [@dyn 383] (gas: 1)\n 19636: jump @650 if a0 == 0\n      : @647 (gas: 8)\n 19639: s1 = u64 [sp + 0x18]\n 19642: i32 a0 = s1 + 0x24\n 19645: u64 [sp + 88] = 0\n 19648: u64 [sp + 80] = 0\n 19651: u64 [sp + 64] = 0x1a\n 19655: a1 = sp + 0x40\n 19658: u64 [sp + 72] = 0\n 19661: ra = 768, jump @4\n      : @648 [@dyn 384] (gas: 1)\n 19667: t0 = 770, jump @861\n      : @649 [@dyn 385] (gas: 1)\n 19673: jump @651 if a0 != 0\n      : @650 (gas: 1)\n 19676: trap\n      : @651 (gas: 12)\n 19677: s1 = u64 [sp + 0x18]\n 19680: i32 a0 = s1 + 0x44\n 19683: a1 = u64 [0x20158]\n 19688: a2 = u64 [0x20160]\n 19693: a3 = u64 [0x20168]\n 19698: u64 [sp + 0x38] = a1\n 19701: u64 [sp + 0x30] = a2\n 19704: u64 [sp + 0x28] = a3\n 19707: a2 = 0x6c79000000000000\n 19717: a1 = sp + 0x20\n 19720: u64 [sp + 0x20] = a2\n 19723: ra = 772, jump @4\n      : @652 [@dyn 386] (gas: 3)\n 19729: a1 = 0x64\n 19732: a0 = s1\n 19734: ra = 774, jump @13\n      : @653 [@dyn 387] (gas: 1)\n 19740: t0 = 776, jump @886\n      : @654 [@dyn 388] (gas: 4)\n 19746: ra = 0x30a\n 19750: ecalli 8 // 'seal_return'\n 19752: t0 = 0x30c\n 19756: jump @859\n      : @655 [@dyn 389] (gas: 1)\n 19759: t0 = 780, jump @859\n      : @656 [@dyn 390] (gas: 1)\n 19765: jump @659 if a0 == 0\n      : @657 (gas: 1)\n 19768: t0 = 782, jump @877\n      : @658 [@dyn 391] (gas: 1)\n 19774: ret\n      : @659 (gas: 3)\n 19776: a0 = sp + 0xa0\n 19780: a1 = 0x40\n 19783: ra = 784, jump @2\n      : @660 [@dyn 392] (gas: 1)\n 19789: t0 = 786, jump @858\n      : @661 [@dyn 393] (gas: 1)\n 19795: jump @673 if a0 != 0\n      : @662 (gas: 1)\n 19798: t0 = 788, jump @865\n      : @663 [@dyn 394] (gas: 1)\n 19804: ra = 790, jump @4\n      : @664 [@dyn 395] (gas: 1)\n 19810: t0 = 792, jump @857\n      : @665 [@dyn 396] (gas: 1)\n 19816: jump @673 if a0 == 0\n      : @666 (gas: 1)\n 19819: t0 = 794, jump @866\n      : @667 [@dyn 397] (gas: 1)\n 19825: ra = 796, jump @4\n      : @668 [@dyn 398] (gas: 1)\n 19831: t0 = 798, jump @864\n      : @669 [@dyn 399] (gas: 1)\n 19837: jump @673 if a0 == 0\n      : @670 (gas: 8)\n 19840: s1 = u64 [sp + 0x18]\n 19843: i32 a0 = s1 + 0x24\n 19846: u64 [sp + 88] = 0\n 19849: u64 [sp + 80] = 0\n 19852: u64 [sp + 64] = 0x1d\n 19856: a1 = sp + 0x40\n 19859: u64 [sp + 72] = 0\n 19862: ra = 800, jump @4\n      : @671 [@dyn 400] (gas: 1)\n 19868: t0 = 802, jump @861\n      : @672 [@dyn 401] (gas: 1)\n 19874: jump @674 if a0 != 0\n      : @673 (gas: 1)\n 19877: trap\n      : @674 (gas: 12)\n 19878: s1 = u64 [sp + 0x18]\n 19881: i32 a0 = s1 + 0x44\n 19884: a1 = u64 [0x20170]\n 19889: a2 = u64 [0x20178]\n 19894: a3 = u64 [0x20180]\n 19899: u64 [sp + 0x38] = a1\n 19902: u64 [sp + 0x30] = a2\n 19905: u64 [sp + 0x28] = a3\n 19908: a2 = 0x206f6e6c79000000\n 19918: a1 = sp + 0x20\n 19921: u64 [sp + 0x20] = a2\n 19924: ra = 804, jump @4\n      : @675 [@dyn 402] (gas: 3)\n 19930: a1 = 0x64\n 19933: a0 = s1\n 19935: ra = 806, jump @13\n      : @676 [@dyn 403] (gas: 1)\n 19941: t0 = 808, jump @886\n      : @677 [@dyn 404] (gas: 4)\n 19947: ra = 0x32a\n 19951: ecalli 8 // 'seal_return'\n 19953: t0 = 0x32c\n 19957: jump @859\n      : @678 [@dyn 405] (gas: 1)\n 19960: t0 = 812, jump @859\n      : @679 [@dyn 406] (gas: 1)\n 19966: jump @682 if a0 == 0\n      : @680 (gas: 1)\n 19969: t0 = 814, jump @877\n      : @681 [@dyn 407] (gas: 1)\n 19975: ret\n      : @682 (gas: 3)\n 19977: a0 = sp + 0xa0\n 19981: a1 = 0x40\n 19984: ra = 816, jump @2\n      : @683 [@dyn 408] (gas: 1)\n 19990: t0 = 818, jump @858\n      : @684 [@dyn 409] (gas: 1)\n 19996: jump @696 if a0 != 0\n      : @685 (gas: 1)\n 19999: t0 = 820, jump @865\n      : @686 [@dyn 410] (gas: 1)\n 20005: ra = 822, jump @4\n      : @687 [@dyn 411] (gas: 1)\n 20011: t0 = 824, jump @857\n      : @688 [@dyn 412] (gas: 1)\n 20017: jump @696 if a0 == 0\n      : @689 (gas: 1)\n 20020: t0 = 826, jump @866\n      : @690 [@dyn 413] (gas: 1)\n 20026: ra = 828, jump @4\n      : @691 [@dyn 414] (gas: 1)\n 20032: t0 = 830, jump @864\n      : @692 [@dyn 415] (gas: 1)\n 20038: jump @696 if a0 == 0\n      : @693 (gas: 8)\n 20041: s1 = u64 [sp + 0x18]\n 20044: i32 a0 = s1 + 0x24\n 20047: u64 [sp + 88] = 0\n 20050: u64 [sp + 80] = 0\n 20053: u64 [sp + 64] = 0x1d\n 20057: a1 = sp + 0x40\n 20060: u64 [sp + 72] = 0\n 20063: ra = 832, jump @4\n      : @694 [@dyn 416] (gas: 1)\n 20069: t0 = 834, jump @861\n      : @695 [@dyn 417] (gas: 1)\n 20075: jump @697 if a0 != 0\n      : @696 (gas: 1)\n 20078: trap\n      : @697 (gas: 12)\n 20079: s1 = u64 [sp + 0x18]\n 20082: i32 a0 = s1 + 0x44\n 20085: a1 = u64 [0x20188]\n 20090: a2 = u64 [0x20190]\n 20095: a3 = u64 [0x20198]\n 20100: u64 [sp + 0x38] = a1\n 20103: u64 [sp + 0x30] = a2\n 20106: u64 [sp + 0x28] = a3\n 20109: a2 = 0x68616e2030000000\n 20119: a1 = sp + 0x20\n 20122: u64 [sp + 0x20] = a2\n 20125: ra = 836, jump @4\n      : @698 [@dyn 418] (gas: 3)\n 20131: a1 = 0x64\n 20134: a0 = s1\n 20136: ra = 838, jump @13\n      : @699 [@dyn 419] (gas: 1)\n 20142: t0 = 840, jump @886\n      : @700 [@dyn 420] (gas: 4)\n 20148: ra = 0x34a\n 20152: ecalli 8 // 'seal_return'\n 20154: t0 = 0x34c\n 20158: jump @859\n      : @701 [@dyn 421] (gas: 1)\n 20161: t0 = 844, jump @859\n      : @702 [@dyn 422] (gas: 1)\n 20167: jump @705 if a0 == 0\n      : @703 (gas: 1)\n 20170: t0 = 846, jump @877\n      : @704 [@dyn 423] (gas: 1)\n 20176: ret\n      : @705 (gas: 3)\n 20178: a0 = sp + 0xa0\n 20182: a1 = 0x40\n 20185: ra = 848, jump @2\n      : @706 [@dyn 424] (gas: 1)\n 20191: t0 = 850, jump @858\n      : @707 [@dyn 425] (gas: 1)\n 20197: jump @719 if a0 != 0\n      : @708 (gas: 1)\n 20200: t0 = 852, jump @865\n      : @709 [@dyn 426] (gas: 1)\n 20206: ra = 854, jump @4\n      : @710 [@dyn 427] (gas: 1)\n 20212: t0 = 856, jump @857\n      : @711 [@dyn 428] (gas: 1)\n 20218: jump @719 if a0 == 0\n      : @712 (gas: 1)\n 20221: t0 = 858, jump @866\n      : @713 [@dyn 429] (gas: 1)\n 20227: ra = 860, jump @4\n      : @714 [@dyn 430] (gas: 1)\n 20233: t0 = 862, jump @864\n      : @715 [@dyn 431] (gas: 1)\n 20239: jump @719 if a0 == 0\n      : @716 (gas: 8)\n 20242: s1 = u64 [sp + 0x18]\n 20245: i32 a0 = s1 + 0x24\n 20248: u64 [sp + 88] = 0\n 20251: u64 [sp + 80] = 0\n 20254: u64 [sp + 64] = 0x1c\n 20258: a1 = sp + 0x40\n 20261: u64 [sp + 72] = 0\n 20264: ra = 864, jump @4\n      : @717 [@dyn 432] (gas: 1)\n 20270: t0 = 866, jump @861\n      : @718 [@dyn 433] (gas: 1)\n 20276: jump @720 if a0 != 0\n      : @719 (gas: 1)\n 20279: trap\n      : @720 (gas: 12)\n 20280: s1 = u64 [sp + 0x18]\n 20283: i32 a0 = s1 + 0x44\n 20286: a1 = u64 [0x201a0]\n 20291: a2 = u64 [0x201a8]\n 20296: a3 = u64 [0x201b0]\n 20301: u64 [sp + 0x38] = a1\n 20304: u64 [sp + 0x30] = a2\n 20307: u64 [sp + 0x28] = a3\n 20310: a2 = 0x616e203000000000\n 20320: a1 = sp + 0x20\n 20323: u64 [sp + 0x20] = a2\n 20326: ra = 868, jump @4\n      : @721 [@dyn 434] (gas: 3)\n 20332: a1 = 0x64\n 20335: a0 = s1\n 20337: ra = 870, jump @13\n      : @722 [@dyn 435] (gas: 1)\n 20343: t0 = 872, jump @886\n      : @723 [@dyn 436] (gas: 3)\n 20349: ra = 0x36a\n 20353: ecalli 8 // 'seal_return'\n 20355: fallthrough\n      : @724 [@dyn 437] (gas: 6)\n 20356: sp = sp + 0xffffffffffffff60\n 20360: u64 [sp + 0x98] = ra\n 20364: u64 [sp + 0x90] = s0\n 20368: u64 [sp + 0x88] = s1\n 20372: s0 = sp + 0xa0\n 20376: t0 = 876, jump @884\n      : @725 [@dyn 438] (gas: 2)\n 20382: u64 [sp + 0x20] = a0\n 20385: jump @733 if a3 != 0\n      : @726 (gas: 11)\n 20389: a0 = u64 [a1 + 0x18]\n 20392: u64 [sp + 0x38] = a0\n 20395: a0 = u64 [a1 + 0x10]\n 20398: u64 [sp + 0x30] = a0\n 20401: s1 = u64 [a1 + 0x8]\n 20404: a0 = u64 [a1]\n 20406: u64 [sp + 0x28] = a0\n 20409: i32 a1 = a2 + 0\n 20411: i32 a0 = sp + 0x40\n 20414: ecalli 1 // 'call_data_load'\n 20416: fallthrough\n      : @727 (gas: 51)\n 20417: a0 = 0x20218\n 20422: u64 [sp + 0x8] = a0\n 20425: a2 = u32 [0x20218]\n 20430: a0 = u64 [sp + 0x58]\n 20433: u64 [sp + 0x10] = a0\n 20436: t1 = u64 [sp + 0x50]\n 20439: a1 = u64 [sp + 0x28]\n 20442: a3 = a2 <u a1\n 20445: a4 = s1 >u 0\n 20447: a4 = a3 if s1 == 0\n 20450: t0 = u64 [sp + 0x30]\n 20453: t2 = -t0\n 20455: u64 [sp + 0x18] = s1\n 20458: a5 = s1 + a3\n 20461: a0 = -a5\n 20463: a2 = a2 - a1\n 20466: a3 = a2 + 0xffffffffffffffe1\n 20469: a2 = a3 <u a2\n 20472: a5 = a5 ^ 0xffffffffffffffff\n 20475: a5 = a5 + a2\n 20478: a1 = a5 ^ a0\n 20481: a0 = a5 <u a0\n 20484: a0 = a2 if a1 == 0\n 20487: a1 = t2 <u a4\n 20490: a2 = t0\n 20492: t0 = u64 [sp + 0x10]\n 20495: a2 = a2 >u 0\n 20497: s1 = u64 [sp + 0x38]\n 20500: a2 = a2 + s1\n 20503: a1 = a1 + a2\n 20506: a2 = u64 [sp + 0x48]\n 20509: s1 = t2 - a4\n 20512: a4 = s1 <u 0x1\n 20515: a1 = a1 + a4\n 20518: a4 = u64 [sp + 0x40]\n 20521: s1 = s1 + 0xffffffffffffffff\n 20524: a0 = a0 + s1\n 20527: s1 = a0 <u s1\n 20530: s1 = s1 - a1\n 20533: a1 = a2 ^ a5\n 20536: a5 = a2 <u a5\n 20539: a3 = a4 <u a3\n 20542: a3 = a5 if a1 != 0\n 20545: a1 = t1 <u a0\n 20548: a5 = t0 ^ s1\n 20551: s1 = t0 <s s1\n 20554: s1 = a1 if a5 == 0\n 20557: a0 = t1 ^ a0\n 20560: a0 = a0 | a5\n 20563: a3 = s1 if a0 != 0\n 20566: jump @734 if a3 == 0\n      : @728 (gas: 28)\n 20570: a0 = u64 [sp + 0x28]\n 20573: a5 = a4 + a0\n 20576: a0 = a5 <u a4\n 20579: s1 = u64 [sp + 0x18]\n 20582: s1 = s1 + a2\n 20585: s1 = s1 + a0\n 20588: a1 = s1 ^ a2\n 20591: a2 = s1 <u a2\n 20594: a2 = a0 if a1 == 0\n 20597: a0 = u64 [sp + 0x30]\n 20600: a0 = a0 + t1\n 20603: a3 = a0 + a2\n 20606: a1 = a3 <u a0\n 20609: a0 = a0 <u t1\n 20612: a2 = u64 [sp + 0x38]\n 20615: t0 = t0 + a2\n 20618: a0 = a0 + t0\n 20621: a1 = a1 + a0\n 20624: a0 = a5 | a3\n 20627: u64 [sp + 0x30] = a1\n 20630: a1 = a1 | s1\n 20633: a0 = a0 | a1\n 20636: a0 = a0 >> 0x20\n 20639: u64 [sp + 0x38] = a3\n 20642: a1 = a1 | a3\n 20645: a1 = a1 << 0x20\n 20648: a0 = a0 | a1\n 20651: jump @733 if a0 != 0\n      : @729 (gas: 5)\n 20655: u64 [sp + 0x28] = a5\n 20658: i32 a1 = a5 + 0\n 20660: i32 a0 = sp + 0x60\n 20663: ecalli 1 // 'call_data_load'\n 20665: fallthrough\n      : @730 (gas: 7)\n 20666: ra = u64 [sp + 0x78]\n 20669: a2 = u64 [sp + 0x70]\n 20672: a5 = u64 [sp + 0x68]\n 20675: a0 = a2 | ra\n 20678: a3 = a5 <u 0x1\n 20681: a3 = 0 if a0 != 0\n 20683: jump @735 if a3 == 0\n      : @731 (gas: 51)\n 20687: t1 = u64 [sp + 0x60]\n 20690: a0 = u64 [sp + 0x28]\n 20693: a1 = a0 + 0x20\n 20696: u64 [sp + 0x18] = a1\n 20699: a0 = a1 <u a0\n 20702: a1 = s1 + a0\n 20705: u64 [sp + 0x10] = a1\n 20708: a3 = a1 <u s1\n 20711: a3 = a0 if a0 == 0\n 20714: a0 = u64 [sp + 0x8]\n 20717: s1 = u32 [a0]\n 20719: a0 = u64 [sp + 0x38]\n 20722: a3 = a3 + a0\n 20725: a0 = a3 <u a0\n 20728: a1 = u64 [sp + 0x30]\n 20731: a0 = a0 + a1\n 20734: u64 [sp + 0x8] = a0\n 20737: a4 = s1 <u t1\n 20740: a1 = a5 >u 0\n 20742: a1 = a4 if a5 == 0\n 20745: t0 = -a2\n 20747: a0 = t0 <u a1\n 20750: u64 [sp + 0x28] = a0\n 20753: u64 [sp + 0x30] = a2\n 20756: t2 = a2 >u 0\n 20758: u64 [sp + 0x38] = ra\n 20761: t2 = t2 + ra\n 20764: ra = u64 [sp + 0x8]\n 20767: a0 = -t2\n 20769: a2 = u64 [sp + 0x28]\n 20772: a0 = a0 - a2\n 20775: a2 = u64 [sp + 0x10]\n 20778: a1 = t0 - a1\n 20781: u64 [sp + 0x28] = t1\n 20784: t2 = s1 - t1\n 20787: t1 = a5\n 20789: s1 = -a5\n 20791: s1 = s1 - a4\n 20794: a4 = a2 ^ s1\n 20797: s1 = s1 <u a2\n 20800: t0 = u64 [sp + 0x18]\n 20803: a5 = t2 <u t0\n 20806: a5 = s1 if a4 != 0\n 20809: a4 = a1 <u a3\n 20812: s1 = ra ^ a0\n 20815: a0 = a0 <s ra\n 20818: a0 = a4 if s1 == 0\n 20821: a1 = a1 ^ a3\n 20824: a1 = a1 | s1\n 20827: a5 = a0 if a1 != 0\n 20830: jump @736 if a5 != 0\n      : @732 (gas: 18)\n 20833: a0 = u64 [sp + 0x20]\n 20836: a1 = u64 [sp + 0x28]\n 20839: u64 [a0 + 0x20] = a1\n 20842: u64 [a0] = t0\n 20844: u64 [a0 + 0x28] = t1\n 20847: u64 [a0 + 0x8] = a2\n 20850: a1 = u64 [sp + 0x30]\n 20853: u64 [a0 + 0x30] = a1\n 20856: u64 [a0 + 0x10] = a3\n 20859: a1 = u64 [sp + 0x38]\n 20862: u64 [a0 + 0x38] = a1\n 20865: u64 [a0 + 0x18] = ra\n 20868: sp = s0 + 0xffffffffffffff60\n 20872: ra = u64 [sp + 0x98]\n 20876: s0 = u64 [sp + 0x90]\n 20880: s1 = u64 [sp + 0x88]\n 20884: sp = sp + 0xa0\n 20888: ret\n      : @733 (gas: 1)\n 20890: trap\n      : @734 (gas: 2)\n 20891: a1 = 0x20230\n 20896: jump @737\n      : @735 (gas: 2)\n 20898: a1 = 0x20230\n 20903: jump @737\n      : @736 (gas: 2)\n 20905: a1 = 0x20230\n 20910: fallthrough\n      : @737 (gas: 7)\n 20911: i32 a1 = a1 + 0\n 20913: a0 = 0x1\n 20916: a2 = 0\n 20918: ra = 0x36e\n 20922: ecalli 8 // 'seal_return'\n 20924: t0 = 0x370\n 20928: jump @859\n      : @738 [@dyn 439] (gas: 1)\n 20931: t0 = 880, jump @859\n      : @739 [@dyn 440] (gas: 1)\n 20937: jump @742 if a0 == 0\n      : @740 (gas: 1)\n 20940: t0 = 882, jump @877\n      : @741 [@dyn 441] (gas: 1)\n 20946: ret\n      : @742 (gas: 3)\n 20948: a0 = sp + 0xa0\n 20952: a1 = 0x40\n 20955: ra = 884, jump @2\n      : @743 [@dyn 442] (gas: 1)\n 20961: t0 = 886, jump @858\n      : @744 [@dyn 443] (gas: 1)\n 20967: jump @756 if a0 != 0\n      : @745 (gas: 1)\n 20970: t0 = 888, jump @865\n      : @746 [@dyn 444] (gas: 1)\n 20976: ra = 890, jump @4\n      : @747 [@dyn 445] (gas: 1)\n 20982: t0 = 892, jump @857\n      : @748 [@dyn 446] (gas: 1)\n 20988: jump @756 if a0 == 0\n      : @749 (gas: 1)\n 20991: t0 = 894, jump @866\n      : @750 [@dyn 447] (gas: 1)\n 20997: ra = 896, jump @4\n      : @751 [@dyn 448] (gas: 1)\n 21003: t0 = 898, jump @864\n      : @752 [@dyn 449] (gas: 1)\n 21009: jump @756 if a0 == 0\n      : @753 (gas: 8)\n 21012: s1 = u64 [sp + 0x18]\n 21015: i32 a0 = s1 + 0x24\n 21018: u64 [sp + 88] = 0\n 21021: u64 [sp + 80] = 0\n 21024: u64 [sp + 64] = 0x16\n 21028: a1 = sp + 0x40\n 21031: u64 [sp + 72] = 0\n 21034: ra = 900, jump @4\n      : @754 [@dyn 450] (gas: 1)\n 21040: t0 = 902, jump @861\n      : @755 [@dyn 451] (gas: 1)\n 21046: jump @757 if a0 != 0\n      : @756 (gas: 1)\n 21049: trap\n      : @757 (gas: 11)\n 21050: s1 = u64 [sp + 0x18]\n 21053: i32 a0 = s1 + 0x44\n 21056: a1 = u64 [0x201b8]\n 21061: a2 = u64 [0x201c0]\n 21066: a3 = u64 [0x201c8]\n 21071: u64 [sp + 0x38] = a1\n 21074: u64 [sp + 0x30] = a2\n 21077: u64 [sp + 0x28] = a3\n 21080: a1 = sp + 0x20\n 21083: u64 [sp + 32] = 0\n 21086: ra = 904, jump @4\n      : @758 [@dyn 452] (gas: 3)\n 21092: a1 = 0x64\n 21095: a0 = s1\n 21097: ra = 906, jump @13\n      : @759 [@dyn 453] (gas: 1)\n 21103: t0 = 908, jump @886\n      : @760 [@dyn 454] (gas: 4)\n 21109: ra = 0x38e\n 21113: ecalli 8 // 'seal_return'\n 21115: t0 = 0x390\n 21119: jump @859\n      : @761 [@dyn 455] (gas: 1)\n 21122: t0 = 912, jump @859\n      : @762 [@dyn 456] (gas: 1)\n 21128: jump @765 if a0 == 0\n      : @763 (gas: 1)\n 21131: t0 = 914, jump @877\n      : @764 [@dyn 457] (gas: 1)\n 21137: ret\n      : @765 (gas: 3)\n 21139: a0 = sp + 0xa0\n 21143: a1 = 0x40\n 21146: ra = 916, jump @2\n      : @766 [@dyn 458] (gas: 1)\n 21152: t0 = 918, jump @858\n      : @767 [@dyn 459] (gas: 1)\n 21158: jump @779 if a0 != 0\n      : @768 (gas: 1)\n 21161: t0 = 920, jump @865\n      : @769 [@dyn 460] (gas: 1)\n 21167: ra = 922, jump @4\n      : @770 [@dyn 461] (gas: 1)\n 21173: t0 = 924, jump @857\n      : @771 [@dyn 462] (gas: 1)\n 21179: jump @779 if a0 == 0\n      : @772 (gas: 1)\n 21182: t0 = 926, jump @866\n      : @773 [@dyn 463] (gas: 1)\n 21188: ra = 928, jump @4\n      : @774 [@dyn 464] (gas: 1)\n 21194: t0 = 930, jump @864\n      : @775 [@dyn 465] (gas: 1)\n 21200: jump @779 if a0 == 0\n      : @776 (gas: 8)\n 21203: s1 = u64 [sp + 0x18]\n 21206: i32 a0 = s1 + 0x24\n 21209: u64 [sp + 88] = 0\n 21212: u64 [sp + 80] = 0\n 21215: u64 [sp + 64] = 0x1b\n 21219: a1 = sp + 0x40\n 21222: u64 [sp + 72] = 0\n 21225: ra = 932, jump @4\n      : @777 [@dyn 466] (gas: 1)\n 21231: t0 = 934, jump @861\n      : @778 [@dyn 467] (gas: 1)\n 21237: jump @780 if a0 != 0\n      : @779 (gas: 1)\n 21240: trap\n      : @780 (gas: 12)\n 21241: s1 = u64 [sp + 0x18]\n 21244: i32 a0 = s1 + 0x44\n 21247: a1 = u64 [0x201d0]\n 21252: a2 = u64 [0x201d8]\n 21257: a3 = u64 [0x201e0]\n 21262: u64 [sp + 0x38] = a1\n 21265: u64 [sp + 0x30] = a2\n 21268: u64 [sp + 0x28] = a3\n 21271: a2 = 0x7074790000000000\n 21281: a1 = sp + 0x20\n 21284: u64 [sp + 0x20] = a2\n 21287: ra = 936, jump @4\n      : @781 [@dyn 468] (gas: 3)\n 21293: a1 = 0x64\n 21296: a0 = s1\n 21298: ra = 938, jump @13\n      : @782 [@dyn 469] (gas: 1)\n 21304: t0 = 940, jump @886\n      : @783 [@dyn 470] (gas: 3)\n 21310: ra = 0x3ae\n 21314: ecalli 8 // 'seal_return'\n 21316: fallthrough\n      : @784 [@dyn 471] (gas: 18)\n 21317: sp = sp + 0xffffffffffffffc0\n 21320: u64 [sp + 0x38] = ra\n 21323: u64 [sp + 0x30] = s0\n 21326: u64 [sp + 0x28] = s1\n 21329: s0 = sp + 0x40\n 21332: sp = sp & 0xffffffffffffffe0\n 21335: a2 = u64 [a1 + 0x10]\n 21338: a3 = u64 [a1 + 0x18]\n 21341: a4 = u64 [a1 + 0x8]\n 21344: a1 = u64 [a1]\n 21346: a3 = a3 | a4\n 21349: a4 = a1 | a2\n 21352: a4 = a4 | a3\n 21355: a4 = a4 >> 0x20\n 21358: a2 = a2 | a3\n 21361: a2 = a2 << 0x20\n 21364: a2 = a2 | a4\n 21367: jump @789 if a2 != 0\n      : @785 (gas: 6)\n 21370: s1 = a0\n 21372: i32 a1 = a1 + 0\n 21374: i32 a0 = sp + 0\n 21376: ra = 0x3b0\n 21380: ecalli 1 // 'call_data_load'\n 21382: fallthrough\n      : @786 [@dyn 472] (gas: 3)\n 21383: a0 = u64 [sp + 0x10]\n 21386: a1 = u64 [sp + 0x18]\n 21389: t0 = 946, jump @875\n      : @787 [@dyn 473] (gas: 1)\n 21395: jump @790 if a3 == 0\n      : @788 (gas: 12)\n 21398: a2 = u64 [sp]\n 21400: a3 = u64 [sp + 0x8]\n 21403: u64 [s1] = a2\n 21405: u64 [s1 + 0x8] = a3\n 21408: u64 [s1 + 0x10] = a0\n 21411: u64 [s1 + 0x18] = a1\n 21414: sp = s0 + 0xffffffffffffffc0\n 21417: ra = u64 [sp + 0x38]\n 21420: s0 = u64 [sp + 0x30]\n 21423: s1 = u64 [sp + 0x28]\n 21426: sp = sp + 0x40\n 21429: ret\n      : @789 (gas: 1)\n 21431: trap\n      : @790 (gas: 8)\n 21432: a1 = 0x20230\n 21437: i32 a1 = a1 + 0\n 21439: a0 = 0x1\n 21442: a2 = 0\n 21444: ra = 0x3b4\n 21448: ecalli 8 // 'seal_return'\n 21450: t0 = 0x3b6\n 21454: jump @859\n      : @791 [@dyn 474] (gas: 1)\n 21457: t0 = 950, jump @859\n      : @792 [@dyn 475] (gas: 1)\n 21463: jump @795 if a0 == 0\n      : @793 (gas: 1)\n 21466: t0 = 952, jump @877\n      : @794 [@dyn 476] (gas: 1)\n 21472: ret\n      : @795 (gas: 3)\n 21474: a0 = sp + 0xa0\n 21478: a1 = 0x40\n 21481: ra = 954, jump @2\n      : @796 [@dyn 477] (gas: 1)\n 21487: t0 = 956, jump @858\n      : @797 [@dyn 478] (gas: 1)\n 21493: jump @809 if a0 != 0\n      : @798 (gas: 1)\n 21496: t0 = 958, jump @865\n      : @799 [@dyn 479] (gas: 1)\n 21502: ra = 960, jump @4\n      : @800 [@dyn 480] (gas: 1)\n 21508: t0 = 962, jump @857\n      : @801 [@dyn 481] (gas: 1)\n 21514: jump @809 if a0 == 0\n      : @802 (gas: 1)\n 21517: t0 = 964, jump @866\n      : @803 [@dyn 482] (gas: 1)\n 21523: ra = 966, jump @4\n      : @804 [@dyn 483] (gas: 1)\n 21529: t0 = 968, jump @864\n      : @805 [@dyn 484] (gas: 1)\n 21535: jump @809 if a0 == 0\n      : @806 (gas: 8)\n 21538: s1 = u64 [sp + 0x18]\n 21541: i32 a0 = s1 + 0x24\n 21544: u64 [sp + 88] = 0\n 21547: u64 [sp + 80] = 0\n 21550: u64 [sp + 64] = 0x18\n 21554: a1 = sp + 0x40\n 21557: u64 [sp + 72] = 0\n 21560: ra = 970, jump @4\n      : @807 [@dyn 485] (gas: 1)\n 21566: t0 = 972, jump @861\n      : @808 [@dyn 486] (gas: 1)\n 21572: jump @810 if a0 != 0\n      : @809 (gas: 1)\n 21575: trap\n      : @810 (gas: 11)\n 21576: s1 = u64 [sp + 0x18]\n 21579: i32 a0 = s1 + 0x44\n 21582: a1 = u64 [0x201e8]\n 21587: a2 = u64 [0x201f0]\n 21592: a3 = u64 [0x201f8]\n 21597: u64 [sp + 0x38] = a1\n 21600: u64 [sp + 0x30] = a2\n 21603: u64 [sp + 0x28] = a3\n 21606: a1 = sp + 0x20\n 21609: u64 [sp + 32] = 0\n 21612: ra = 974, jump @4\n      : @811 [@dyn 487] (gas: 3)\n 21618: a1 = 0x64\n 21621: a0 = s1\n 21623: ra = 976, jump @13\n      : @812 [@dyn 488] (gas: 1)\n 21629: t0 = 978, jump @886\n      : @813 [@dyn 489] (gas: 3)\n 21635: ra = 0x3d4\n 21639: ecalli 8 // 'seal_return'\n 21641: fallthrough\n      : @814 [@dyn 490] (gas: 22)\n 21642: sp = sp + 0xffffffffffffff40\n 21646: u64 [sp + 0xb8] = ra\n 21650: u64 [sp + 0xb0] = s0\n 21654: u64 [sp + 0xa8] = s1\n 21658: s0 = sp + 0xc0\n 21662: sp = sp & 0xfffffffffffffff0\n 21665: a5 = u64 [a3 + 0x10]\n 21668: a4 = u64 [a3 + 0x18]\n 21671: s1 = u64 [a3 + 0x8]\n 21674: t0 = u64 [a3]\n 21676: u64 [sp + 0x50] = a4\n 21679: u64 [sp + 0x40] = s1\n 21682: a3 = s1 | a4\n 21685: a4 = t0 | a5\n 21688: a4 = a4 | a3\n 21691: a4 = a4 >> 0x20\n 21694: u64 [sp + 0x58] = a5\n 21697: a3 = a3 | a5\n 21700: a3 = a3 << 0x20\n 21703: a3 = a3 | a4\n 21706: u64 [sp] = a0\n 21708: jump @824 if a3 != 0\n      : @815 (gas: 23)\n 21712: a0 = u64 [a2 + 0x18]\n 21715: a3 = u64 [a2 + 0x10]\n 21718: a4 = u64 [a2 + 0x8]\n 21721: a2 = u64 [a2]\n 21723: a5 = u64 [a1 + 0x18]\n 21726: u64 [sp + 0x18] = a5\n 21729: s1 = u64 [a1 + 0x10]\n 21732: a5 = u64 [a1 + 0x8]\n 21735: u64 [sp + 0x10] = a5\n 21738: a1 = u64 [a1]\n 21740: u64 [sp + 0x8] = a1\n 21743: u64 [sp + 0x20] = a2\n 21746: u64 [sp + 0x80] = a2\n 21750: u64 [sp + 0x28] = a4\n 21753: u64 [sp + 0x88] = a4\n 21757: u64 [sp + 0x30] = a3\n 21760: u64 [sp + 0x90] = a3\n 21764: a1 = sp + 0x80\n 21768: u64 [sp + 0x38] = a0\n 21771: u64 [sp + 0x98] = a0\n 21775: u64 [sp + 0x48] = t0\n 21778: a0 = t0\n 21780: ra = 982, jump @4\n      : @816 [@dyn 491] (gas: 11)\n 21786: t1 = u64 [sp + 0x8]\n 21789: a0 = t1 | s1\n 21792: a1 = u64 [sp + 0x18]\n 21795: a2 = u64 [sp + 0x10]\n 21798: a1 = a1 | a2\n 21801: a0 = a0 | a1\n 21804: a0 = a0 >> 0x20\n 21807: a1 = a1 | s1\n 21810: a1 = a1 << 0x20\n 21813: a0 = a0 | a1\n 21816: jump @824 if a0 != 0\n      : @817 (gas: 15)\n 21820: a2 = u64 [sp + 0x30]\n 21823: a4 = u64 [sp + 0x20]\n 21826: a0 = a4 | a2\n 21829: a1 = u64 [sp + 0x38]\n 21832: a3 = u64 [sp + 0x28]\n 21835: a1 = a1 | a3\n 21838: a0 = a0 | a1\n 21841: a0 = a0 >> 0x20\n 21844: a1 = a1 | a2\n 21847: a1 = a1 << 0x20\n 21850: a0 = a0 | a1\n 21853: a3 = u64 [sp + 0x58]\n 21856: a2 = u64 [sp + 0x50]\n 21859: s1 = u64 [sp + 0x40]\n 21862: jump @824 if a0 != 0\n      : @818 (gas: 9)\n 21866: a1 = a4\n 21868: a0 = a3 | a2\n 21871: a4 = 0xffffffe0\n 21881: a3 = u64 [sp + 0x48]\n 21884: u64 [sp + 0x18] = a4\n 21887: a4 = a3 <u a4\n 21890: a4 = 0 if s1 != 0\n 21892: a4 = 0 if a0 != 0\n 21894: jump @824 if a4 == 0\n      : @819 (gas: 5)\n 21898: i32 t1 = t1 + 0\n 21900: u64 [sp + 0x10] = t1\n 21903: i32 a0 = a3 + 0x20\n 21906: s1 = a1\n 21908: ra = 984, jump @13\n      : @820 [@dyn 492] (gas: 5)\n 21914: i32 a0 = a0 + 0\n 21916: i32 a1 = s1 + 0\n 21918: a2 = u64 [sp + 0x10]\n 21921: ecalli 0 // 'call_data_copy'\n 21922: fallthrough\n      : @821 (gas: 27)\n 21923: a1 = u64 [sp + 0x48]\n 21926: a0 = a1 + s1\n 21929: a1 = a0 <u a1\n 21932: a2 = u64 [sp + 0x28]\n 21935: s1 = u64 [sp + 0x40]\n 21938: a2 = a2 + s1\n 21941: a2 = a2 + a1\n 21944: a3 = a2 ^ s1\n 21947: a4 = a2 <u s1\n 21950: a4 = a1 if a3 == 0\n 21953: a3 = u64 [sp + 0x58]\n 21956: a1 = u64 [sp + 0x30]\n 21959: a1 = a1 + a3\n 21962: t0 = a1 <u a3\n 21965: a5 = u64 [sp + 0x38]\n 21968: a3 = u64 [sp + 0x50]\n 21971: a5 = a5 + a3\n 21974: a3 = a5 + t0\n 21977: a4 = a4 + a1\n 21980: a1 = a4 <u a1\n 21983: a1 = a1 + a3\n 21986: a1 = a1 | a4\n 21989: a3 = u64 [sp + 0x18]\n 21992: a3 = a0 <u a3\n 21995: a3 = 0 if a2 != 0\n 21997: a3 = 0 if a1 != 0\n 21999: jump @824 if a3 == 0\n      : @822 (gas: 7)\n 22003: i32 a0 = a0 + 0x20\n 22006: u64 [sp + 120] = 0\n 22009: u64 [sp + 112] = 0\n 22012: u64 [sp + 104] = 0\n 22015: a1 = sp + 0x60\n 22018: u64 [sp + 96] = 0\n 22021: ra = 986, jump @4\n      : @823 [@dyn 493] (gas: 34)\n 22027: a0 = u64 [sp + 0x20]\n 22030: a0 = a0 + 0x1f\n 22033: a1 = 0x1ffffffe0\n 22043: a0 = a0 & a1\n 22046: a1 = u64 [sp + 0x48]\n 22049: a0 = a0 + a1\n 22052: a1 = a0 <u a1\n 22055: a2 = s1 + a1\n 22058: a3 = a2 <u s1\n 22061: a3 = a1 if a1 == 0\n 22064: a1 = u64 [sp + 0x58]\n 22067: a3 = a3 + a1\n 22070: a1 = a3 <u a1\n 22073: a4 = u64 [sp + 0x50]\n 22076: a1 = a1 + a4\n 22079: a4 = a0 + 0x20\n 22082: a0 = a4 <u a0\n 22085: a5 = a2 + a0\n 22088: a2 = a5 <u a2\n 22091: a2 = a0 if a0 == 0\n 22094: a2 = a2 + a3\n 22097: a0 = a2 <u a3\n 22100: a0 = a0 + a1\n 22103: a1 = u64 [sp]\n 22105: u64 [a1] = a4\n 22107: u64 [a1 + 0x8] = a5\n 22110: u64 [a1 + 0x10] = a2\n 22113: u64 [a1 + 0x18] = a0\n 22116: sp = s0 + 0xffffffffffffff40\n 22120: ra = u64 [sp + 0xb8]\n 22124: s0 = u64 [sp + 0xb0]\n 22128: s1 = u64 [sp + 0xa8]\n 22132: sp = sp + 0xc0\n 22136: ret\n      : @824 (gas: 1)\n 22138: trap\n      : @825 (gas: 6)\n 22139: sp = sp + 0xffffffffffffff80\n 22142: u64 [sp + 0x78] = ra\n 22145: u64 [sp + 0x70] = s0\n 22148: u64 [sp + 0x68] = s1\n 22151: s0 = sp + 0x80\n 22155: t0 = 988, jump @884\n      : @826 [@dyn 494] (gas: 2)\n 22161: u64 [sp + 0x30] = a0\n 22164: jump @830 if a3 != 0\n      : @827 (gas: 11)\n 22168: a0 = u64 [a1 + 0x18]\n 22171: u64 [sp + 0x20] = a0\n 22174: a0 = u64 [a1 + 0x10]\n 22177: u64 [sp + 0x18] = a0\n 22180: s1 = u64 [a1 + 0x8]\n 22183: a0 = u64 [a1]\n 22185: u64 [sp + 0x38] = a0\n 22188: i32 a1 = a2 + 0\n 22190: i32 a0 = sp + 0x40\n 22193: ecalli 1 // 'call_data_load'\n 22195: fallthrough\n      : @828 (gas: 46)\n 22196: ra = u64 [sp + 0x18]\n 22199: t2 = u64 [sp + 0x20]\n 22202: a2 = u32 [0x20218]\n 22207: t0 = u64 [sp + 0x58]\n 22210: t1 = u64 [sp + 0x50]\n 22213: a1 = u64 [sp + 0x38]\n 22216: a3 = a2 <u a1\n 22219: a4 = s1 >u 0\n 22221: a4 = a3 if s1 == 0\n 22224: a0 = -ra\n 22226: u64 [sp + 0x28] = s1\n 22229: a5 = s1 + a3\n 22232: s1 = -a5\n 22234: a2 = a2 - a1\n 22237: a3 = a2 + 0xffffffffffffff01\n 22241: a2 = a3 <u a2\n 22244: a5 = a5 ^ 0xffffffffffffffff\n 22247: a5 = a5 + a2\n 22250: a1 = a5 ^ s1\n 22253: s1 = a5 <u s1\n 22256: s1 = a2 if a1 == 0\n 22259: a1 = a0 <u a4\n 22262: a2 = ra >u 0\n 22264: a2 = a2 + t2\n 22267: a1 = a1 + a2\n 22270: a2 = u64 [sp + 0x48]\n 22273: a0 = a0 - a4\n 22276: a4 = a0 <u 0x1\n 22279: a1 = a1 + a4\n 22282: a4 = u64 [sp + 0x40]\n 22285: a0 = a0 + 0xffffffffffffffff\n 22288: s1 = s1 + a0\n 22291: a0 = s1 <u a0\n 22294: a0 = a0 - a1\n 22297: a1 = a2 ^ a5\n 22300: a5 = a2 <u a5\n 22303: a3 = a4 <u a3\n 22306: a3 = a5 if a1 != 0\n 22309: a1 = t1 <u s1\n 22312: a5 = t0 ^ a0\n 22315: a0 = t0 <s a0\n 22318: a0 = a1 if a5 == 0\n 22321: a1 = t1 ^ s1\n 22324: a1 = a1 | a5\n 22327: a3 = a0 if a1 != 0\n 22330: jump @831 if a3 == 0\n      : @829 (gas: 27)\n 22333: a0 = u64 [sp + 0x38]\n 22336: a0 = a0 + a4\n 22339: a1 = a0 <u a4\n 22342: a3 = u64 [sp + 0x28]\n 22345: a3 = a3 + a2\n 22348: a3 = a3 + a1\n 22351: a4 = a3 ^ a2\n 22354: a2 = a3 <u a2\n 22357: a2 = a1 if a4 == 0\n 22360: a1 = t1 + ra\n 22363: a2 = a2 + a1\n 22366: a4 = a2 <u a1\n 22369: a1 = a1 <u t1\n 22372: t0 = t0 + t2\n 22375: a1 = a1 + t0\n 22378: a1 = a1 + a4\n 22381: a4 = u64 [sp + 0x30]\n 22384: u64 [a4] = a0\n 22386: u64 [a4 + 0x8] = a3\n 22389: u64 [a4 + 0x10] = a2\n 22392: u64 [a4 + 0x18] = a1\n 22395: sp = s0 + 0xffffffffffffff80\n 22398: ra = u64 [sp + 0x78]\n 22401: s0 = u64 [sp + 0x70]\n 22404: s1 = u64 [sp + 0x68]\n 22407: sp = sp + 0x80\n 22411: ret\n      : @830 (gas: 1)\n 22413: trap\n      : @831 (gas: 8)\n 22414: a1 = 0x20230\n 22419: i32 a1 = a1 + 0\n 22421: a0 = 0x1\n 22424: a2 = 0\n 22426: ra = 0x3de\n 22430: ecalli 8 // 'seal_return'\n 22432: t0 = 0x3e0\n 22436: jump @859\n      : @832 [@dyn 495] (gas: 1)\n 22439: t0 = 992, jump @859\n      : @833 [@dyn 496] (gas: 1)\n 22445: jump @836 if a0 == 0\n      : @834 (gas: 1)\n 22448: t0 = 994, jump @877\n      : @835 [@dyn 497] (gas: 1)\n 22454: ret\n      : @836 (gas: 3)\n 22456: a0 = sp + 0xa0\n 22460: a1 = 0x40\n 22463: ra = 996, jump @2\n      : @837 [@dyn 498] (gas: 1)\n 22469: t0 = 998, jump @858\n      : @838 [@dyn 499] (gas: 1)\n 22475: jump @850 if a0 != 0\n      : @839 (gas: 1)\n 22478: t0 = 1000, jump @865\n      : @840 [@dyn 500] (gas: 1)\n 22484: ra = 1002, jump @4\n      : @841 [@dyn 501] (gas: 1)\n 22490: t0 = 1004, jump @857\n      : @842 [@dyn 502] (gas: 1)\n 22496: jump @850 if a0 == 0\n      : @843 (gas: 1)\n 22499: t0 = 1006, jump @866\n      : @844 [@dyn 503] (gas: 1)\n 22505: ra = 1008, jump @4\n      : @845 [@dyn 504] (gas: 1)\n 22511: t0 = 1010, jump @864\n      : @846 [@dyn 505] (gas: 1)\n 22517: jump @850 if a0 == 0\n      : @847 (gas: 8)\n 22520: s1 = u64 [sp + 0x18]\n 22523: i32 a0 = s1 + 0x24\n 22526: u64 [sp + 88] = 0\n 22529: u64 [sp + 80] = 0\n 22532: u64 [sp + 64] = 0x17\n 22536: a1 = sp + 0x40\n 22539: u64 [sp + 72] = 0\n 22542: ra = 1012, jump @4\n      : @848 [@dyn 506] (gas: 1)\n 22548: t0 = 1014, jump @861\n      : @849 [@dyn 507] (gas: 1)\n 22554: jump @851 if a0 != 0\n      : @850 (gas: 1)\n 22557: trap\n      : @851 (gas: 11)\n 22558: s1 = u64 [sp + 0x18]\n 22561: i32 a0 = s1 + 0x44\n 22564: a1 = u64 [0x20200]\n 22569: a2 = u64 [0x20208]\n 22574: a3 = u64 [0x20210]\n 22579: u64 [sp + 0x38] = a1\n 22582: u64 [sp + 0x30] = a2\n 22585: u64 [sp + 0x28] = a3\n 22588: a1 = sp + 0x20\n 22591: u64 [sp + 32] = 0\n 22594: ra = 1016, jump @4\n      : @852 [@dyn 508] (gas: 3)\n 22600: a1 = 0x64\n 22603: a0 = s1\n 22605: ra = 1018, jump @13\n      : @853 [@dyn 509] (gas: 1)\n 22611: t0 = 1020, jump @886\n      : @854 [@dyn 510] (gas: 4)\n 22617: ecalli 8 // 'seal_return'\n 22619: a0 = 0\n 22621: ra = 0x3fe\n 22625: jump @19\n      : @855 [export #0: 'call'] (gas: 2)\n 22628: a0 = 0\n 22630: ra = 1022, jump @19\n      : @856 [@dyn 511] [export #1: 'deploy'] (gas: 2)\n 22636: a0 = 0x1\n 22639: ra = 1024, jump @19\n      : @857 [@dyn 512] (gas: 11)\n 22645: a2 = u64 [sp + 0x8]\n 22648: a2 = a2 | s1\n 22651: s1 = 0x100000000\n 22661: a0 = 0xfffffffc\n 22671: a1 = u64 [sp + 0x18]\n 22674: a0 = a1 <u a0\n 22677: a1 = u64 [sp + 0x10]\n 22680: a0 = 0 if a1 != 0\n 22682: u64 [sp + 0x8] = a2\n 22685: a0 = 0 if a2 != 0\n 22687: jump [t0]\n      : @858 (gas: 15)\n 22689: a2 = u64 [sp + 0xb8]\n 22693: s1 = u64 [sp + 0xb0]\n 22697: a0 = u64 [sp + 0xa8]\n 22701: a1 = u64 [sp + 0xa0]\n 22705: u64 [sp + 0x10] = a0\n 22708: u64 [sp + 0x8] = a2\n 22711: a0 = a0 | a2\n 22714: u64 [sp + 0x18] = a1\n 22717: a1 = a1 | s1\n 22720: a1 = a1 | a0\n 22723: a1 = a1 >> 0x20\n 22726: a0 = a0 | s1\n 22729: a0 = a0 << 0x20\n 22732: a0 = a0 | a1\n 22735: jump [t0]\n      : @859 (gas: 14)\n 22737: sp = sp + 0xffffffffffffff20\n 22741: u64 [sp + 0xd8] = ra\n 22745: u64 [sp + 0xd0] = s0\n 22749: u64 [sp + 0xc8] = s1\n 22753: s0 = sp + 0xe0\n 22757: sp = sp & 0xfffffffffffffff0\n 22760: a1 = u64 [a0 + 0x10]\n 22763: a2 = u64 [a0 + 0x18]\n 22766: a3 = u64 [a0 + 0x8]\n 22769: a0 = u64 [a0]\n 22771: a2 = a2 | a3\n 22774: a0 = a0 | a1\n 22777: a0 = a0 | a2\n 22780: jump [t0]\n      : @860 (gas: 15)\n 22782: a0 = a1 <u a0\n 22785: a5 = a3 + a0\n 22788: a3 = a5 <u a3\n 22791: a3 = a0 if a0 == 0\n 22794: a3 = a3 + a4\n 22797: a0 = a3 <u a4\n 22800: a0 = a0 + a2\n 22803: a2 = a1 | a3\n 22806: a0 = a0 | a5\n 22809: a2 = a2 | a0\n 22812: a2 = a2 >> 0x20\n 22815: a0 = a0 | a3\n 22818: a0 = a0 << 0x20\n 22821: a0 = a0 | a2\n 22824: jump [t0]\n      : @861 (gas: 7)\n 22826: a0 = 0xffffffbc\n 22836: a0 = s1 <u a0\n 22839: a1 = u64 [sp + 0x10]\n 22842: a0 = 0 if a1 != 0\n 22844: a1 = u64 [sp + 0x8]\n 22847: a0 = 0 if a1 != 0\n 22849: jump [t0]\n      : @862 (gas: 7)\n 22851: a4 = 0x100000000\n 22861: a0 = 0xfffffffc\n 22871: a0 = a1 <u a0\n 22874: a2 = u64 [a5 + 0xb0]\n 22878: a0 = 0 if a2 != 0\n 22880: a0 = 0 if a3 != 0\n 22882: jump [t0]\n      : @863 (gas: 9)\n 22884: a2 = s1 + 0x100\n 22888: a3 = u64 [a2 + 0xb8]\n 22892: a0 = 0xffffffbc\n 22902: a0 = a3 <u a0\n 22905: a1 = u64 [a2 + 0xb0]\n 22909: a0 = 0 if a1 != 0\n 22911: a1 = u64 [a2 + 0xa8]\n 22915: a0 = 0 if a1 != 0\n 22917: jump [t0]\n      : @864 (gas: 8)\n 22919: a0 = s1 + 0xffffffffffffffdc\n 22922: a1 = u64 [sp + 0x18]\n 22925: a0 = a1 <u a0\n 22928: a1 = u64 [sp + 0x10]\n 22931: a0 = 0 if a1 != 0\n 22933: a1 = u64 [sp + 0x8]\n 22936: a0 = 0 if a1 != 0\n 22938: jump [t0]\n      : @865 (gas: 8)\n 22940: u64 [sp + 144] = 0\n 22944: u64 [sp + 136] = 0\n 22948: u64 [sp + 128] = 0\n 22952: a0 = 0x8c379a000000000\n 22962: a1 = sp + 0x80\n 22966: u64 [sp + 0x98] = a0\n 22970: a0 = u64 [sp + 0x18]\n 22973: jump [t0]\n      : @866 (gas: 8)\n 22975: a0 = u64 [sp + 0x18]\n 22978: i32 a0 = a0 + 0x4\n 22981: u64 [sp + 120] = 0\n 22984: u64 [sp + 112] = 0\n 22987: u64 [sp + 96] = 0x20\n 22991: a1 = sp + 0x60\n 22994: u64 [sp + 104] = 0\n 22997: jump [t0]\n      : @867 (gas: 10)\n 22999: a2 = s1 + 0x100\n 23003: a4 = u64 [a2 + 0xa8]\n 23007: a3 = u64 [a2 + 0xb0]\n 23011: a1 = u64 [a2 + 0xb8]\n 23015: a0 = u64 [a2 + 0xa0]\n 23019: a0 = a0 + 0xffffffffffffffdc\n 23022: a0 = a1 <u a0\n 23025: a0 = 0 if a3 != 0\n 23027: a0 = 0 if a4 != 0\n 23029: jump [t0]\n      : @868 (gas: 10)\n 23031: a4 = s1 + 0x100\n 23035: a3 = u64 [a4 + 0xa8]\n 23039: a2 = u64 [a4 + 0xb0]\n 23043: a1 = u64 [a4 + 0xb8]\n 23047: a0 = u64 [a4 + 0xa0]\n 23051: a0 = a0 + 0xffffffffffffffdc\n 23054: a0 = a1 <u a0\n 23057: a0 = 0 if a2 != 0\n 23059: a0 = 0 if a3 != 0\n 23061: jump [t0]\n      : @869 (gas: 7)\n 23063: a1 = u64 [a2 + 0xb8]\n 23067: a0 = a1 <u a0\n 23070: a1 = u64 [a2 + 0xb0]\n 23074: a0 = 0 if a1 != 0\n 23076: a1 = u64 [a2 + 0x40]\n 23079: a0 = 0 if a1 != 0\n 23081: jump [t0]\n      : @870 (gas: 5)\n 23083: sp = a1\n 23085: i32 a0 = a0 + 0\n 23087: i32 a2 = a1 + 0\n 23089: a1 = 0x40\n 23092: jump [t0]\n      : @871 (gas: 14)\n 23094: a0 = u64 [a2 + 0x8]\n 23097: a1 = u64 [a2]\n 23099: a2 = i32 [a2 + 0x10]\n 23102: a0 = reverse a0\n 23104: a3 = a0 >> 0x20\n 23107: a1 = reverse a1\n 23109: a4 = a1 << 0x20\n 23112: a3 = a3 | a4\n 23115: a0 = a0 << 0x20\n 23118: a2 = reverse a2\n 23120: a2 = a2 >> 0x20\n 23123: a0 = a0 | a2\n 23126: a1 = a1 >> 0x20\n 23129: jump [t0]\n      : @872 (gas: 10)\n 23131: a0 = u64 [a3 + 0x18]\n 23134: a1 = u64 [a3 + 0x10]\n 23137: a2 = u64 [a3 + 0x8]\n 23140: a3 = u64 [a3]\n 23142: a0 = reverse a0\n 23144: a1 = reverse a1\n 23146: a2 = reverse a2\n 23148: a3 = reverse a3\n 23150: a4 = s1 + 0x2118\n 23154: jump [t0]\n      : @873 (gas: 10)\n 23156: a0 = u64 [a3 + 0x18]\n 23159: a1 = u64 [a3 + 0x10]\n 23162: a2 = u64 [a3 + 0x8]\n 23165: a3 = u64 [a3]\n 23167: a0 = reverse a0\n 23169: a1 = reverse a1\n 23171: a2 = reverse a2\n 23173: a3 = reverse a3\n 23175: a4 = s1 + 0x2918\n 23179: jump [t0]\n      : @874 (gas: 15)\n 23181: a0 = u64 [a2 + 0x8]\n 23184: a1 = i32 [a2 + 0x10]\n 23187: a2 = u64 [a2]\n 23189: a0 = reverse a0\n 23191: a3 = a0 << 0x20\n 23194: a1 = reverse a1\n 23196: a1 = a1 >> 0x20\n 23199: a3 = a3 | a1\n 23202: a0 = a0 >> 0x20\n 23205: a1 = reverse a2\n 23207: a2 = a1 << 0x20\n 23210: a0 = a0 | a2\n 23213: a1 = a1 >> 0x20\n 23216: a2 = s1 + 0x1918\n 23220: jump [t0]\n      : @875 (gas: 8)\n 23222: a2 = 0x100000000\n 23232: a2 = a2 ^ a0\n 23235: a2 = a2 | a1\n 23238: a3 = a0 >> 0x20\n 23241: a3 = a3 <u 0x1\n 23244: a3 = 0 if a1 != 0\n 23246: a3 = 0 if a2 == 0\n 23248: jump [t0]\n      : @876 (gas: 15)\n 23250: a3 = u64 [s1 + 0x198]\n 23254: a0 = u64 [a3 + 0x18]\n 23257: a1 = u64 [a3 + 0x10]\n 23260: a2 = u64 [a3 + 0x8]\n 23263: a3 = u64 [a3]\n 23265: a0 = reverse a0\n 23267: a4 = reverse a1\n 23269: a2 = reverse a2\n 23271: a3 = reverse a3\n 23273: a1 = u64 [s1 + 0x1b0]\n 23277: u64 [a1 + 0x18] = a3\n 23280: u64 [a1 + 0x10] = a2\n 23283: u64 [a1 + 0x8] = a4\n 23286: u64 [a1] = a0\n 23288: jump [t0]\n      : @877 (gas: 6)\n 23290: sp = s0 + 0xffffffffffffff20\n 23294: ra = u64 [sp + 0xd8]\n 23298: s0 = u64 [sp + 0xd0]\n 23302: s1 = u64 [sp + 0xc8]\n 23306: sp = sp + 0xe0\n 23310: jump [t0]\n      : @878 (gas: 12)\n 23312: a3 = u64 [s1 + 0x190]\n 23316: a0 = u64 [a3 + 0x18]\n 23319: a1 = u64 [a3 + 0x10]\n 23322: a2 = u64 [a3 + 0x8]\n 23325: a3 = u64 [a3]\n 23327: a0 = reverse a0\n 23329: a1 = reverse a1\n 23331: a2 = reverse a2\n 23333: a3 = reverse a3\n 23335: a4 = s1 + 0x2118\n 23339: a5 = a4 + 0x700\n 23343: jump [t0]\n      : @879 (gas: 9)\n 23345: a0 = u64 [a3 + 0x18]\n 23348: a1 = u64 [a3 + 0x10]\n 23351: a2 = u64 [a3 + 0x8]\n 23354: a3 = u64 [a3]\n 23356: a0 = reverse a0\n 23358: a4 = reverse a1\n 23360: a2 = reverse a2\n 23362: a3 = reverse a3\n 23364: jump [t0]\n      : @880 (gas: 14)\n 23366: a0 = u64 [a2 + 0x8]\n 23369: a1 = i32 [a2 + 0x10]\n 23372: a2 = u64 [a2]\n 23374: a0 = reverse a0\n 23376: a3 = a0 << 0x20\n 23379: a1 = reverse a1\n 23381: a1 = a1 >> 0x20\n 23384: a3 = a3 | a1\n 23387: a0 = a0 >> 0x20\n 23390: a1 = reverse a2\n 23392: a2 = a1 << 0x20\n 23395: a0 = a0 | a2\n 23398: a1 = a1 >> 0x20\n 23401: jump [t0]\n      : @881 (gas: 11)\n 23403: a3 = u64 [s1 + 0x190]\n 23407: a0 = u64 [a3 + 0x18]\n 23410: a1 = u64 [a3 + 0x10]\n 23413: a2 = u64 [a3 + 0x8]\n 23416: a3 = u64 [a3]\n 23418: a0 = reverse a0\n 23420: a1 = reverse a1\n 23422: a2 = reverse a2\n 23424: a3 = reverse a3\n 23426: a4 = s1 + 0x2118\n 23430: jump [t0]\n      : @882 (gas: 8)\n 23432: a4 = a4 | a2\n 23435: a2 = a0 | a1\n 23438: a2 = a2 | a4\n 23441: a2 = a2 >> 0x20\n 23444: a1 = a1 | a4\n 23447: a1 = a1 << 0x20\n 23450: a1 = a1 | a2\n 23453: jump [t0]\n      : @883 (gas: 9)\n 23455: a3 = s1 + 0x100\n 23459: a2 = u64 [a3 + 0xb8]\n 23463: a0 = 0xffffffbc\n 23473: a0 = a2 <u a0\n 23476: a1 = u64 [a3 + 0xb0]\n 23480: a0 = 0 if a1 != 0\n 23482: a1 = u64 [a3 + 0xa8]\n 23486: a0 = 0 if a1 != 0\n 23488: jump [t0]\n      : @884 (gas: 13)\n 23490: sp = sp & 0xffffffffffffffe0\n 23493: a3 = u64 [a2 + 0x10]\n 23496: a4 = u64 [a2 + 0x18]\n 23499: a5 = u64 [a2 + 0x8]\n 23502: a2 = u64 [a2]\n 23504: a4 = a4 | a5\n 23507: a5 = a2 | a3\n 23510: a5 = a5 | a4\n 23513: a5 = a5 >> 0x20\n 23516: a3 = a3 | a4\n 23519: a3 = a3 << 0x20\n 23522: a3 = a3 | a5\n 23525: jump [t0]\n      : @885 (gas: 4)\n 23527: a0 = 0x2118\n 23531: a3 = s1 + a0\n 23534: a4 = a3 + 0x700\n 23538: jump [t0]\n      : @886 (gas: 4)\n 23540: i32 a1 = a0 + 0\n 23542: a0 = 0x1\n 23545: a2 = 0x64\n 23548: jump [t0]\n      : @887 (gas: 5)\n 23550: a1 = a3 <u a1\n 23553: a1 = a0 if a0 == 0\n 23556: a0 = u64 [s1 + 0x188]\n 23560: a4 = a0 + a1\n 23563: jump [t0]\n      : @888 (gas: 8)\n 23565: a2 = s1 + 0x100\n 23569: a1 = u64 [a2 + 0xb0]\n 23573: a0 = a1 <u a0\n 23576: a1 = u64 [a2 + 0xa8]\n 23580: a0 = 0 if a1 != 0\n 23582: a1 = u64 [a2 + 0xa0]\n 23586: a0 = 0 if a1 != 0\n 23588: jump [t0]\n      : @889 (gas: 7)\n 23590: a1 = u8 [s1 + 0x1b8]\n 23594: a1 = a1 >u 0\n 23596: u64 [a3 + 544] = 0\n 23600: u64 [a3 + 536] = 0\n 23604: u64 [a3 + 0x208] = a1\n 23608: a1 = 0x2000\n 23612: jump [t0]\n      : @890 (gas: 4)\n 23614: a0 = u64 [s1 + 0x1b8]\n 23618: a0 = i32 [a0]\n 23620: a1 = 0x23\n 23623: jump [t0]\n      : @891 (gas: 4)\n 23625: i32 a0 = a0 + 0x118\n 23629: a3 = s1 + a0\n 23632: a4 = a3 + 0x600\n 23636: jump [t0]\n      : @892 (gas: 4)\n 23638: i32 a0 = a1 + 0x4\n 23641: a1 = 0x1918\n 23645: a2 = s1 + a1\n 23648: jump [t0]\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"object":""},"methodIdentifiers":{"authorizeProvider(address)":"112ea262","authorizedProviders(address)":"69dc3ae2","createShipment((uint256,uint256,uint256,uint256,string,address,string,string))":"16f7af7c","owner()":"8da5cb5b","revokeProvider(address)":"ac1e8b8e","shipmentExists(uint256)":"f83cc7e8","transferOwnership(address)":"f2fde38b","updateShipment(((uint256,uint256,uint256,uint256,string,address,string,string),bytes32,uint256))":"11d48f8c","updateShipmentStatus(uint256,uint8)":"7defa920","verifyShipment(uint256)":"92d15fc4"}},"irOptimized":"/// @use-src 0:\"contracts/LogisticsTracking.sol\"\nobject \"LogisticsEvents_521\" {\n    code {\n        {\n            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:453:471  \"owner = msg.sender\" */ 0x00, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ or(and(sload(/** @src 0:453:471  \"owner = msg.sender\" */ 0x00), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:461:471  \"msg.sender\" */ caller()))\n            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n            mstore(/** @src 0:453:471  \"owner = msg.sender\" */ 0x00, /** @src 0:461:471  \"msg.sender\" */ caller())\n            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n            mstore(0x20, /** @src 0:515:519  \"true\" */ 0x01)\n            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n            let dataSlot := keccak256(/** @src 0:453:471  \"owner = msg.sender\" */ 0x00, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ 64)\n            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:515:519  \"true\" */ 0x01))\n            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n            let _2 := datasize(\"LogisticsEvents_521_deployed\")\n            codecopy(_1, dataoffset(\"LogisticsEvents_521_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/LogisticsTracking.sol\"\n    object \"LogisticsEvents_521_deployed\" {\n        code {\n            {\n                /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x112ea262 {\n                        if callvalue() { revert(_3, _3) }\n                        let _4 := 32\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _5 := sub(shl(160, 1), 1)\n                        let _6 := and(value, _5)\n                        if iszero(eq(value, _6)) { revert(_3, _3) }\n                        /// @src 0:563:621  \"require(msg.sender == owner, \\\"Not authorized: owner only\\\")\"\n                        require_helper_stringliteral_ecad(/** @src 0:571:590  \"msg.sender == owner\" */ eq(/** @src 0:571:581  \"msg.sender\" */ caller(), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(_3), _5)))\n                        if /** @src 0:2301:2323  \"provider != address(0)\" */ iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _6)\n                        {\n                            let memPtr := mload(_1)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _2), _4)\n                            mstore(add(memPtr, 36), 24)\n                            mstore(add(memPtr, 68), \"Invalid provider address\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(_3, _6)\n                        mstore(_4, /** @src 0:2371:2390  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        if iszero(/** @src 0:2370:2400  \"!authorizedProviders[provider]\" */ iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff)))\n                        {\n                            let memPtr_1 := mload(_1)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), _4)\n                            mstore(add(memPtr_1, 36), 27)\n                            mstore(add(memPtr_1, 68), \"Provider already authorized\")\n                            revert(memPtr_1, 100)\n                        }\n                        mstore(_3, _6)\n                        mstore(_4, /** @src 0:2371:2390  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let dataSlot := keccak256(_3, _1)\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:2371:2390  \"authorizedProviders\" */ 0x01))\n                        /// @src 0:2502:2547  \"ProviderAuthorized(provider, block.timestamp)\"\n                        let _7 := /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_7, /** @src 0:2531:2546  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2502:2547  \"ProviderAuthorized(provider, block.timestamp)\"\n                        log2(_7, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _4, /** @src 0:2502:2547  \"ProviderAuthorized(provider, block.timestamp)\" */ 0x5ee18bb17d127d4409f69ab086fffad6d93acf3010f7a646b731b79ada5d2cdf, _6)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0x11d48f8c {\n                        if callvalue() { revert(_3, _3) }\n                        let _8 := 32\n                        let _9 := not(3)\n                        if slt(add(calldatasize(), _9), _8) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        if gt(offset, 0xffffffffffffffff) { revert(_3, _3) }\n                        let _10 := add(_2, offset)\n                        if slt(add(sub(calldatasize(), offset), _9), 96) { revert(_3, _3) }\n                        mstore(_3, /** @src 0:713:723  \"msg.sender\" */ caller())\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        mstore(_8, /** @src 0:693:712  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:685:758  \"require(authorizedProviders[msg.sender], \\\"Not authorized: provider only\\\")\"\n                        require_helper_stringliteral_7fd4(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        mstore(_3, calldataload(/** @src 0:3988:4001  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10)))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        mstore(_8, /** @src 0:3973:3987  \"shipmentExists\" */ 0x02)\n                        /// @src 0:3965:4041  \"require(shipmentExists[data.shipment.shipmentId], \\\"Shipment does not exist\\\")\"\n                        require_helper_stringliteral_cb52(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        /// @src 0:4051:4117  \"require(data.shipment.weight > 0, \\\"Weight must be greater than 0\\\")\"\n                        require_helper_stringliteral_9e0c(/** @src 0:4059:4083  \"data.shipment.weight > 0\" */ iszero(iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:4059:4079  \"data.shipment.weight\" */ add(/** @src 0:4059:4072  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _8)))))\n                        /// @src 0:4127:4191  \"require(data.shipment.price > 0, \\\"Price must be greater than 0\\\")\"\n                        require_helper_stringliteral_f496(/** @src 0:4135:4158  \"data.shipment.price > 0\" */ iszero(iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:4135:4154  \"data.shipment.price\" */ add(/** @src 0:4135:4148  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _1)))))\n                        /// @src 0:4215:4228  \"data.shipment\"\n                        let expr_offset := access_calldata_tail_struct_ShipmentData_calldata(_10, _10)\n                        /// @src 0:4215:4235  \"data.shipment.origin\"\n                        let expr_offset_1, expr_length := access_calldata_tail_string_calldata(expr_offset, add(expr_offset, 128))\n                        /// @src 0:4201:4274  \"require(bytes(data.shipment.origin).length > 0, \\\"Origin cannot be empty\\\")\"\n                        require_helper_stringliteral_810c(/** @src 0:4209:4247  \"bytes(data.shipment.origin).length > 0\" */ iszero(iszero(/** @src 0:4209:4243  \"bytes(data.shipment.origin).length\" */ expr_length)))\n                        /// @src 0:4298:4311  \"data.shipment\"\n                        let expr_offset_2 := access_calldata_tail_struct_ShipmentData_calldata(_10, _10)\n                        /// @src 0:4298:4323  \"data.shipment.destination\"\n                        let expr_offset_3, expr_length_1 := access_calldata_tail_string_calldata(expr_offset_2, add(expr_offset_2, 192))\n                        /// @src 0:4284:4367  \"require(bytes(data.shipment.destination).length > 0, \\\"Destination cannot be empty\\\")\"\n                        require_helper_stringliteral_96b7(/** @src 0:4292:4335  \"bytes(data.shipment.destination).length > 0\" */ iszero(iszero(/** @src 0:4292:4331  \"bytes(data.shipment.destination).length\" */ expr_length_1)))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let _11 := sub(shl(160, 1), 1)\n                        /// @src 0:4377:4450  \"require(data.shipment.receiver != address(0), \\\"Invalid receiver address\\\")\"\n                        require_helper_stringliteral_5cbb(/** @src 0:4385:4421  \"data.shipment.receiver != address(0)\" */ iszero(iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(/** @src 0:4385:4407  \"data.shipment.receiver\" */ read_from_calldatat_address(add(/** @src 0:4385:4398  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:4385:4407  \"data.shipment.receiver\" */ 160)), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _11))))\n                        let value_1 := calldataload(/** @src 0:4533:4556  \"data.previousShipmentId\" */ add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset, /** @src 0:4533:4556  \"data.previousShipmentId\" */ 68))\n                        /// @src 0:4529:4672  \"if (data.previousShipmentId != 0) {...\"\n                        if /** @src 0:4533:4561  \"data.previousShipmentId != 0\" */ iszero(iszero(value_1))\n                        /// @src 0:4529:4672  \"if (data.previousShipmentId != 0) {...\"\n                        {\n                            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                            mstore(_3, value_1)\n                            mstore(_8, /** @src 0:3973:3987  \"shipmentExists\" */ 0x02)\n                            /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                            if iszero(and(sload(keccak256(_3, _1)), 0xff))\n                            {\n                                let memPtr_2 := mload(_1)\n                                mstore(memPtr_2, shl(229, 4594637))\n                                mstore(add(memPtr_2, _2), _8)\n                                mstore(add(memPtr_2, 36), _8)\n                                mstore(add(memPtr_2, /** @src 0:4533:4556  \"data.previousShipmentId\" */ 68), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ \"Previous shipment does not exist\")\n                                revert(memPtr_2, 100)\n                            }\n                        }\n                        let value_2 := calldataload(/** @src 0:4724:4737  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let value_3 := calldataload(/** @src 0:4762:4782  \"data.shipment.weight\" */ add(/** @src 0:4762:4775  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _8))\n                        let value_4 := calldataload(/** @src 0:4796:4815  \"data.shipment.price\" */ add(/** @src 0:4796:4809  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _1))\n                        let value_5 := calldataload(/** @src 0:4829:4848  \"data.shipment.batch\" */ add(/** @src 0:4829:4842  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ 96))\n                        /// @src 0:4862:4875  \"data.shipment\"\n                        let expr_offset_4 := access_calldata_tail_struct_ShipmentData_calldata(_10, _10)\n                        /// @src 0:4862:4882  \"data.shipment.origin\"\n                        let expr_offset_5, expr_length_2 := access_calldata_tail_string_calldata(expr_offset_4, add(expr_offset_4, /** @src 0:4215:4235  \"data.shipment.origin\" */ 128))\n                        /// @src 0:4920:4942  \"data.shipment.receiver\"\n                        let expr := read_from_calldatat_address(add(/** @src 0:4920:4933  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_10, _10), /** @src 0:4385:4407  \"data.shipment.receiver\" */ 160))\n                        /// @src 0:4956:4969  \"data.shipment\"\n                        let expr_offset_6 := access_calldata_tail_struct_ShipmentData_calldata(_10, _10)\n                        /// @src 0:4956:4981  \"data.shipment.destination\"\n                        let expr_offset_7, expr_length_3 := access_calldata_tail_string_calldata(expr_offset_6, add(expr_offset_6, /** @src 0:4298:4323  \"data.shipment.destination\" */ 192))\n                        /// @src 0:4995:5008  \"data.shipment\"\n                        let expr_offset_8 := access_calldata_tail_struct_ShipmentData_calldata(_10, _10)\n                        /// @src 0:4995:5020  \"data.shipment.description\"\n                        let expr_offset_9, expr_length_4 := access_calldata_tail_string_calldata(expr_offset_8, add(expr_offset_8, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ 224))\n                        /// @src 0:4695:5132  \"ShipmentUpdated(...\"\n                        let _12 := /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ mload(_1)\n                        let _13 := 288\n                        mstore(_12, value_3)\n                        mstore(add(_12, _8), value_4)\n                        mstore(add(_12, _1), _13)\n                        let tail := abi_encode_string_calldata(expr_offset_5, expr_length_2, add(_12, _13))\n                        mstore(add(_12, 96), and(expr, _11))\n                        mstore(add(_12, /** @src 0:4215:4235  \"data.shipment.origin\" */ 128), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ sub(tail, _12))\n                        let tail_1 := abi_encode_string_calldata(expr_offset_7, expr_length_3, tail)\n                        mstore(add(_12, /** @src 0:4385:4407  \"data.shipment.receiver\" */ 160), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ sub(tail_1, _12))\n                        let tail_2 := abi_encode_string_calldata(expr_offset_9, expr_length_4, tail_1)\n                        mstore(add(_12, /** @src 0:4298:4323  \"data.shipment.destination\" */ 192), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:5034:5056  \"data.previousBlockHash\" */ add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset, /** @src 0:5034:5056  \"data.previousBlockHash\" */ 36)))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        mstore(add(_12, 224), value_1)\n                        mstore(add(_12, 256), /** @src 0:5107:5122  \"block.timestamp\" */ timestamp())\n                        /// @src 0:4695:5132  \"ShipmentUpdated(...\"\n                        log4(_12, sub(tail_2, _12), 0x9f42ef51a9f3d588bcdf47445030f8bb28bbd1d52ca38d40ae3650052998fec9, value_2, value_5, /** @src 0:713:723  \"msg.sender\" */ caller())\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0x16f7af7c {\n                        if callvalue() { revert(_3, _3) }\n                        let _14 := 32\n                        let _15 := not(3)\n                        if slt(add(calldatasize(), _15), _14) { revert(_3, _3) }\n                        let offset_1 := calldataload(_2)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_3, _3) }\n                        let _16 := add(_2, offset_1)\n                        if slt(add(sub(calldatasize(), offset_1), _15), 256) { revert(_3, _3) }\n                        mstore(_3, /** @src 0:713:723  \"msg.sender\" */ caller())\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        mstore(_14, /** @src 0:693:712  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:685:758  \"require(authorizedProviders[msg.sender], \\\"Not authorized: provider only\\\")\"\n                        require_helper_stringliteral_7fd4(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        let value_6 := calldataload(_16)\n                        mstore(_3, value_6)\n                        mstore(_14, /** @src 0:3002:3016  \"shipmentExists\" */ 0x02)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        if iszero(/** @src 0:3001:3033  \"!shipmentExists[data.shipmentId]\" */ iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff)))\n                        {\n                            let memPtr_3 := mload(_1)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _2), _14)\n                            mstore(add(memPtr_3, 36), 26)\n                            mstore(add(memPtr_3, 68), \"Shipment ID already exists\")\n                            revert(memPtr_3, 100)\n                        }\n                        let value_7 := calldataload(/** @src 0:3082:3093  \"data.weight\" */ add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3082:3093  \"data.weight\" */ 36))\n                        /// @src 0:3074:3131  \"require(data.weight > 0, \\\"Weight must be greater than 0\\\")\"\n                        require_helper_stringliteral_9e0c(/** @src 0:3082:3097  \"data.weight > 0\" */ iszero(iszero(value_7)))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let value_8 := calldataload(/** @src 0:3149:3159  \"data.price\" */ add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3149:3159  \"data.price\" */ 68))\n                        /// @src 0:3141:3196  \"require(data.price > 0, \\\"Price must be greater than 0\\\")\"\n                        require_helper_stringliteral_f496(/** @src 0:3149:3163  \"data.price > 0\" */ iszero(iszero(value_8)))\n                        /// @src 0:3220:3231  \"data.origin\"\n                        let _17 := add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3220:3231  \"data.origin\" */ 132)\n                        let expr_offset_10, expr_length_5 := access_calldata_tail_string_calldata(_16, _17)\n                        /// @src 0:3206:3270  \"require(bytes(data.origin).length > 0, \\\"Origin cannot be empty\\\")\"\n                        require_helper_stringliteral_810c(/** @src 0:3214:3243  \"bytes(data.origin).length > 0\" */ iszero(iszero(/** @src 0:3214:3239  \"bytes(data.origin).length\" */ expr_length_5)))\n                        /// @src 0:3294:3310  \"data.destination\"\n                        let _18 := add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3294:3310  \"data.destination\" */ 196)\n                        let expr_offset_11, expr_length_6 := access_calldata_tail_string_calldata(_16, _18)\n                        /// @src 0:3280:3354  \"require(bytes(data.destination).length > 0, \\\"Destination cannot be empty\\\")\"\n                        require_helper_stringliteral_96b7(/** @src 0:3288:3322  \"bytes(data.destination).length > 0\" */ iszero(iszero(/** @src 0:3288:3318  \"bytes(data.destination).length\" */ expr_length_6)))\n                        /// @src 0:3372:3385  \"data.receiver\"\n                        let _19 := add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3372:3385  \"data.receiver\" */ 164)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let _20 := sub(shl(160, 1), 1)\n                        /// @src 0:3364:3428  \"require(data.receiver != address(0), \\\"Invalid receiver address\\\")\"\n                        require_helper_stringliteral_5cbb(/** @src 0:3372:3399  \"data.receiver != address(0)\" */ iszero(iszero(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(/** @src 0:3372:3385  \"data.receiver\" */ read_from_calldatat_address(_19), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _20))))\n                        mstore(_3, value_6)\n                        mstore(_14, /** @src 0:3002:3016  \"shipmentExists\" */ 0x02)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let dataSlot_1 := keccak256(_3, _1)\n                        sstore(dataSlot_1, or(and(sload(dataSlot_1), not(255)), /** @src 0:693:712  \"authorizedProviders\" */ 0x01))\n                        /// @src 0:3677:3688  \"data.origin\"\n                        let expr_offset_12, expr_length_7 := access_calldata_tail_string_calldata(_16, _17)\n                        /// @src 0:3726:3739  \"data.receiver\"\n                        let expr_1 := read_from_calldatat_address(_19)\n                        /// @src 0:3753:3769  \"data.destination\"\n                        let expr_offset_13, expr_length_8 := access_calldata_tail_string_calldata(_16, _18)\n                        /// @src 0:3783:3799  \"data.description\"\n                        let expr_offset_14, expr_length_9 := access_calldata_tail_string_calldata(_16, add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3783:3799  \"data.description\" */ 228))\n                        /// @src 0:3546:3838  \"ShipmentCreated(...\"\n                        let _21 := /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_21, value_7)\n                        mstore(add(_21, _14), value_8)\n                        mstore(add(_21, _1), 224)\n                        let tail_3 := abi_encode_string_calldata(expr_offset_12, expr_length_7, add(_21, 224))\n                        mstore(add(_21, /** @src 0:3653:3663  \"data.batch\" */ 96), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(expr_1, _20))\n                        mstore(add(_21, /** @src 0:3220:3231  \"data.origin\" */ 128), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ sub(tail_3, _21))\n                        let tail_4 := abi_encode_string_calldata(expr_offset_13, expr_length_8, tail_3)\n                        mstore(add(_21, /** @src 0:3372:3385  \"data.receiver\" */ 160), /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ sub(tail_4, _21))\n                        let tail_5 := abi_encode_string_calldata(expr_offset_14, expr_length_9, tail_4)\n                        mstore(add(_21, /** @src 0:3294:3310  \"data.destination\" */ 192), /** @src 0:3813:3828  \"block.timestamp\" */ timestamp())\n                        /// @src 0:3546:3838  \"ShipmentCreated(...\"\n                        log4(_21, sub(tail_5, _21), 0x2e67bb7b05c9edf169046c89c5dc056b899ccb504aa01d02ac5008aa405e9302, value_6, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:3653:3663  \"data.batch\" */ add(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:3653:3663  \"data.batch\" */ 100)), /** @src 0:713:723  \"msg.sender\" */ caller())\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0x69dc3ae2 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_9 := calldataload(_2)\n                        let _22 := and(value_9, sub(shl(160, 1), 1))\n                        if iszero(eq(value_9, _22)) { revert(_3, _3) }\n                        mstore(_3, _22)\n                        mstore(32, /** @src 0:164:215  \"mapping(address => bool) public authorizedProviders\" */ 1)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let value_10 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos := mload(_1)\n                        mstore(memPos, iszero(iszero(value_10)))\n                        return(memPos, 32)\n                    }\n                    case 0x7defa920 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _1) { revert(_3, _3) }\n                        let value_11 := calldataload(_2)\n                        let value_12 := calldataload(36)\n                        if iszero(lt(value_12, _2)) { revert(_3, _3) }\n                        mstore(_3, /** @src 0:713:723  \"msg.sender\" */ caller())\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        mstore(32, 1)\n                        /// @src 0:685:758  \"require(authorizedProviders[msg.sender], \\\"Not authorized: provider only\\\")\"\n                        require_helper_stringliteral_7fd4(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        mstore(_3, value_11)\n                        mstore(32, /** @src 0:5286:5300  \"shipmentExists\" */ 0x02)\n                        /// @src 0:5278:5340  \"require(shipmentExists[shipmentId], \\\"Shipment does not exist\\\")\"\n                        require_helper_stringliteral_cb52(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        /// @src 0:5364:5492  \"ShipmentStatusChanged(...\"\n                        let _23 := /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_23, /** @src 0:5467:5482  \"block.timestamp\" */ timestamp())\n                        /// @src 0:5364:5492  \"ShipmentStatusChanged(...\"\n                        log4(_23, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ 32, /** @src 0:5364:5492  \"ShipmentStatusChanged(...\" */ 0xf3d2211e54c75402b7f1a202586b4922f05c5191a3eaa61196354a280105b0ad, value_11, value_12, /** @src 0:713:723  \"msg.sender\" */ caller())\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_13 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, value_13)\n                        return(memPos_1, 32)\n                    }\n                    case 0x92d15fc4 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 0:5654:5668  \"shipmentExists\" */ 0x02)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let value_14 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, iszero(iszero(value_14)))\n                        return(memPos_2, 32)\n                    }\n                    case 0xac1e8b8e {\n                        if callvalue() { revert(_3, _3) }\n                        let _24 := 32\n                        if slt(add(calldatasize(), not(3)), _24) { revert(_3, _3) }\n                        let value_15 := calldataload(_2)\n                        let _25 := sub(shl(160, 1), 1)\n                        let _26 := and(value_15, _25)\n                        if iszero(eq(value_15, _26)) { revert(_3, _3) }\n                        let cleaned := and(sload(_3), _25)\n                        /// @src 0:563:621  \"require(msg.sender == owner, \\\"Not authorized: owner only\\\")\"\n                        require_helper_stringliteral_ecad(/** @src 0:571:590  \"msg.sender == owner\" */ eq(/** @src 0:571:581  \"msg.sender\" */ caller(), /** @src 0:571:590  \"msg.sender == owner\" */ cleaned))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        if /** @src 0:2643:2660  \"provider != owner\" */ eq(/** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _26, /** @src 0:2643:2660  \"provider != owner\" */ cleaned)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        {\n                            let memPtr_4 := mload(_1)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _2), _24)\n                            mstore(add(memPtr_4, 36), 19)\n                            mstore(add(memPtr_4, 68), \"Cannot revoke owner\")\n                            revert(memPtr_4, 100)\n                        }\n                        mstore(_3, _26)\n                        mstore(_24, /** @src 0:2702:2721  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        if iszero(and(sload(keccak256(_3, _1)), 0xff))\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), _24)\n                            mstore(add(memPtr_5, 36), 23)\n                            mstore(add(memPtr_5, 68), \"Provider not authorized\")\n                            revert(memPtr_5, 100)\n                        }\n                        mstore(_3, _26)\n                        mstore(_24, /** @src 0:2702:2721  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let dataSlot_2 := keccak256(_3, _1)\n                        sstore(dataSlot_2, and(sload(dataSlot_2), not(255)))\n                        /// @src 0:2830:2872  \"ProviderRevoked(provider, block.timestamp)\"\n                        let _27 := /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_27, /** @src 0:2856:2871  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2830:2872  \"ProviderRevoked(provider, block.timestamp)\"\n                        log2(_27, /** @src 0:58:6018  \"contract LogisticsEvents {...\" */ _24, /** @src 0:2830:2872  \"ProviderRevoked(provider, block.timestamp)\" */ 0x9bb673ad8a87cc3127dff95aacd54437e94c3262aca5f99a5ddc8a0e9ac71b19, _26)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_16 := calldataload(_2)\n                        let _28 := sub(shl(160, 1), 1)\n                        let _29 := and(value_16, _28)\n                        if iszero(eq(value_16, _29)) { revert(_3, _3) }\n                        let _30 := sload(_3)\n                        let cleaned_1 := and(_30, _28)\n                        /// @src 0:563:621  \"require(msg.sender == owner, \\\"Not authorized: owner only\\\")\"\n                        require_helper_stringliteral_ecad(/** @src 0:571:590  \"msg.sender == owner\" */ eq(/** @src 0:571:581  \"msg.sender\" */ caller(), /** @src 0:571:590  \"msg.sender == owner\" */ cleaned_1))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        if /** @src 0:5805:5827  \"newOwner != address(0)\" */ iszero(_29)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        {\n                            let memPtr_6 := mload(_1)\n                            mstore(memPtr_6, shl(229, 4594637))\n                            mstore(add(memPtr_6, _2), 32)\n                            mstore(add(memPtr_6, 36), 25)\n                            mstore(add(memPtr_6, 68), \"Invalid new owner address\")\n                            revert(memPtr_6, 100)\n                        }\n                        if /** @src 0:5875:5892  \"newOwner != owner\" */ eq(_29, cleaned_1)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        {\n                            let memPtr_7 := mload(_1)\n                            mstore(memPtr_7, shl(229, 4594637))\n                            mstore(add(memPtr_7, _2), 32)\n                            mstore(add(memPtr_7, 36), 31)\n                            mstore(add(memPtr_7, 68), \"New owner same as current owner\")\n                            revert(memPtr_7, 100)\n                        }\n                        sstore(_3, or(and(_30, shl(160, 0xffffffffffffffffffffffff)), _29))\n                        mstore(_3, _29)\n                        mstore(32, /** @src 0:6005:6009  \"true\" */ 0x01)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let dataSlot_3 := keccak256(_3, _1)\n                        sstore(dataSlot_3, or(and(sload(dataSlot_3), not(255)), /** @src 0:6005:6009  \"true\" */ 0x01))\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0xf83cc7e8 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        mstore(_3, calldataload(_2))\n                        mstore(32, /** @src 0:273:319  \"mapping(uint256 => bool) public shipmentExists\" */ 2)\n                        /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                        let value_17 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, iszero(iszero(value_17)))\n                        return(memPos_3, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function require_helper_stringliteral_ecad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 26)\n                    mstore(add(memPtr, 68), \"Not authorized: owner only\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_7fd4(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Not authorized: provider only\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_9e0c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Weight must be greater than 0\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_f496(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"Price must be greater than 0\")\n                    revert(memPtr, 100)\n                }\n            }\n            function access_calldata_tail_string_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function require_helper_stringliteral_810c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 22)\n                    mstore(add(memPtr, 68), \"Origin cannot be empty\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_96b7(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 27)\n                    mstore(add(memPtr, 68), \"Destination cannot be empty\")\n                    revert(memPtr, 100)\n                }\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            function require_helper_stringliteral_5cbb(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"Invalid receiver address\")\n                    revert(memPtr, 100)\n                }\n            }\n            function abi_encode_string_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:6018  \"contract LogisticsEvents {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function access_calldata_tail_struct_ShipmentData_calldata(base_ref, ptr_to_tail) -> addr\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(254)))) { revert(0, 0) }\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n            function require_helper_stringliteral_cb52(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 23)\n                    mstore(add(memPtr, 68), \"Shipment does not exist\")\n                    revert(memPtr, 100)\n                }\n            }\n        }\n        data \".metadata\" hex\"a264697066735822122016648f076341364b482636c6f508c87dbab55f5192c7e709fc18c99b66555aea64736f6c63430008140033\"\n    }\n}\n","hash":"91157fd89e4c0d4c87713b4a5640e8ffe45a4ddc3ddbb85ba4a0cd3590e428aa","factoryDependencies":{}}}}}}