{"id":"8825ecc4d08185de8d49184f0449f2db","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"contracts/LogisticsTracking.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract LogisticsEvents {\n    address public owner;\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not authorized\");\n        _;\n    }\n\n    struct ShipmentData {\n        uint256 shipmentId;\n        uint256 weight;\n        uint256 price;\n        uint256 batch;\n        string origin;\n        address receiver;\n        string destination;\n        string description;\n    }\n\n    struct ShipmentUpdateData {\n        ShipmentData shipment;\n        bytes32 previousBlockHash;\n        uint256 previousShipmentId;\n    }\n\n    event ShipmentCreated(\n        uint256 indexed shipmentId,\n        uint256 weight,\n        uint256 price,\n        uint256 indexed batch,\n        string origin,\n        address indexed sender,\n        address receiver,\n        string destination,\n        string description,\n        uint256 timestamp\n    );\n\n    event ShipmentUpdated(\n        uint256 indexed shipmentId,\n        uint256 weight,\n        uint256 price,\n        uint256 indexed batch,\n        string origin,\n        address indexed sender,\n        address receiver,\n        string destination,\n        string description,\n        bytes32 previousBlockHash,\n        uint256 previousShipmentId,\n        uint256 timestamp\n    );\n\n    function createShipment(ShipmentData calldata data) external onlyOwner {\n        emit ShipmentCreated(\n            data.shipmentId,\n            data.weight,\n            data.price,\n            data.batch,\n            data.origin,\n            msg.sender,\n            data.receiver,\n            data.destination,\n            data.description,\n            block.timestamp\n        );\n    }\n\n    function updateShipment(ShipmentUpdateData calldata data) external onlyOwner {\n        emit ShipmentUpdated(\n            data.shipment.shipmentId,\n            data.shipment.weight,\n            data.shipment.price,\n            data.shipment.batch,\n            data.shipment.origin,\n            msg.sender,\n            data.shipment.receiver,\n            data.shipment.destination,\n            data.shipment.description,\n            data.previousBlockHash,\n            data.previousShipmentId,\n            block.timestamp\n        );\n    }\n}\n"}},"settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200},"evmVersion":"paris","outputSelection":{"*":{"*":["abi","metadata","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers"],"":["ast"]}},"resolc":{"version":"latest","compilerSource":"binary","settings":{"viaIR":true,"optimizer":{"enabled":true,"runs":200}}}}},"output":{"errors":[],"version":"0.8.20","long_version":"0.8.20+commit.a1b79de6.Linux.g++","revive_version":"0.3.0+commit.ed60869.llvm-18.1.8","sources":{"contracts/LogisticsTracking.sol":{"id":0,"ast":{"absolutePath":"contracts/LogisticsTracking.sol","exportedSymbols":{"LogisticsEvents":[174]},"id":175,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:0"},{"abstract":false,"baseContracts":[],"canonicalName":"LogisticsEvents","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":174,"linearizedBaseContracts":[174],"name":"LogisticsEvents","nameLocation":"67:15:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":3,"mutability":"mutable","name":"owner","nameLocation":"104:5:0","nodeType":"VariableDeclaration","scope":174,"src":"89:20:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2,"name":"address","nodeType":"ElementaryTypeName","src":"89:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":11,"nodeType":"Block","src":"130:35:0","statements":[{"expression":{"id":9,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"140:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":7,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"148:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"152:6:0","memberName":"sender","nodeType":"MemberAccess","src":"148:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"140:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10,"nodeType":"ExpressionStatement","src":"140:18:0"}]},"id":12,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4,"nodeType":"ParameterList","parameters":[],"src":"127:2:0"},"returnParameters":{"id":5,"nodeType":"ParameterList","parameters":[],"src":"130:0:0"},"scope":174,"src":"116:49:0","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":23,"nodeType":"Block","src":"192:74:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":15,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"210:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":16,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"214:6:0","memberName":"sender","nodeType":"MemberAccess","src":"210:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":17,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3,"src":"224:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"210:19:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":19,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"231:16:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":14,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"202:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"202:46:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"202:46:0"},{"id":22,"nodeType":"PlaceholderStatement","src":"258:1:0"}]},"id":24,"name":"onlyOwner","nameLocation":"180:9:0","nodeType":"ModifierDefinition","parameters":{"id":13,"nodeType":"ParameterList","parameters":[],"src":"189:2:0"},"src":"171:95:0","virtual":false,"visibility":"internal"},{"canonicalName":"LogisticsEvents.ShipmentData","id":41,"members":[{"constant":false,"id":26,"mutability":"mutable","name":"shipmentId","nameLocation":"310:10:0","nodeType":"VariableDeclaration","scope":41,"src":"302:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"302:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"mutability":"mutable","name":"weight","nameLocation":"338:6:0","nodeType":"VariableDeclaration","scope":41,"src":"330:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"330:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":30,"mutability":"mutable","name":"price","nameLocation":"362:5:0","nodeType":"VariableDeclaration","scope":41,"src":"354:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":29,"name":"uint256","nodeType":"ElementaryTypeName","src":"354:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":32,"mutability":"mutable","name":"batch","nameLocation":"385:5:0","nodeType":"VariableDeclaration","scope":41,"src":"377:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":34,"mutability":"mutable","name":"origin","nameLocation":"407:6:0","nodeType":"VariableDeclaration","scope":41,"src":"400:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":33,"name":"string","nodeType":"ElementaryTypeName","src":"400:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":36,"mutability":"mutable","name":"receiver","nameLocation":"431:8:0","nodeType":"VariableDeclaration","scope":41,"src":"423:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":35,"name":"address","nodeType":"ElementaryTypeName","src":"423:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":38,"mutability":"mutable","name":"destination","nameLocation":"456:11:0","nodeType":"VariableDeclaration","scope":41,"src":"449:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":37,"name":"string","nodeType":"ElementaryTypeName","src":"449:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"description","nameLocation":"484:11:0","nodeType":"VariableDeclaration","scope":41,"src":"477:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":39,"name":"string","nodeType":"ElementaryTypeName","src":"477:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ShipmentData","nameLocation":"279:12:0","nodeType":"StructDefinition","scope":174,"src":"272:230:0","visibility":"public"},{"canonicalName":"LogisticsEvents.ShipmentUpdateData","id":49,"members":[{"constant":false,"id":44,"mutability":"mutable","name":"shipment","nameLocation":"557:8:0","nodeType":"VariableDeclaration","scope":49,"src":"544:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_storage_ptr","typeString":"struct LogisticsEvents.ShipmentData"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"ShipmentData","nameLocations":["544:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"544:12:0"},"referencedDeclaration":41,"src":"544:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_storage_ptr","typeString":"struct LogisticsEvents.ShipmentData"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"previousBlockHash","nameLocation":"583:17:0","nodeType":"VariableDeclaration","scope":49,"src":"575:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45,"name":"bytes32","nodeType":"ElementaryTypeName","src":"575:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"previousShipmentId","nameLocation":"618:18:0","nodeType":"VariableDeclaration","scope":49,"src":"610:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":47,"name":"uint256","nodeType":"ElementaryTypeName","src":"610:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ShipmentUpdateData","nameLocation":"515:18:0","nodeType":"StructDefinition","scope":174,"src":"508:135:0","visibility":"public"},{"anonymous":false,"eventSelector":"2e67bb7b05c9edf169046c89c5dc056b899ccb504aa01d02ac5008aa405e9302","id":71,"name":"ShipmentCreated","nameLocation":"655:15:0","nodeType":"EventDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"indexed":true,"mutability":"mutable","name":"shipmentId","nameLocation":"696:10:0","nodeType":"VariableDeclaration","scope":71,"src":"680:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":50,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":53,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"724:6:0","nodeType":"VariableDeclaration","scope":71,"src":"716:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":52,"name":"uint256","nodeType":"ElementaryTypeName","src":"716:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":55,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"748:5:0","nodeType":"VariableDeclaration","scope":71,"src":"740:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":54,"name":"uint256","nodeType":"ElementaryTypeName","src":"740:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"batch","nameLocation":"779:5:0","nodeType":"VariableDeclaration","scope":71,"src":"763:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":56,"name":"uint256","nodeType":"ElementaryTypeName","src":"763:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"801:6:0","nodeType":"VariableDeclaration","scope":71,"src":"794:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":58,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"833:6:0","nodeType":"VariableDeclaration","scope":71,"src":"817:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"817:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"857:8:0","nodeType":"VariableDeclaration","scope":71,"src":"849:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":62,"name":"address","nodeType":"ElementaryTypeName","src":"849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":65,"indexed":false,"mutability":"mutable","name":"destination","nameLocation":"882:11:0","nodeType":"VariableDeclaration","scope":71,"src":"875:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":64,"name":"string","nodeType":"ElementaryTypeName","src":"875:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":67,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"910:11:0","nodeType":"VariableDeclaration","scope":71,"src":"903:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"903:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":69,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"939:9:0","nodeType":"VariableDeclaration","scope":71,"src":"931:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":68,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"670:284:0"},"src":"649:306:0"},{"anonymous":false,"eventSelector":"9f42ef51a9f3d588bcdf47445030f8bb28bbd1d52ca38d40ae3650052998fec9","id":97,"name":"ShipmentUpdated","nameLocation":"967:15:0","nodeType":"EventDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"indexed":true,"mutability":"mutable","name":"shipmentId","nameLocation":"1008:10:0","nodeType":"VariableDeclaration","scope":97,"src":"992:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":75,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"1036:6:0","nodeType":"VariableDeclaration","scope":97,"src":"1028:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":74,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":77,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1060:5:0","nodeType":"VariableDeclaration","scope":97,"src":"1052:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":76,"name":"uint256","nodeType":"ElementaryTypeName","src":"1052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":true,"mutability":"mutable","name":"batch","nameLocation":"1091:5:0","nodeType":"VariableDeclaration","scope":97,"src":"1075:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":78,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":false,"mutability":"mutable","name":"origin","nameLocation":"1113:6:0","nodeType":"VariableDeclaration","scope":97,"src":"1106:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":80,"name":"string","nodeType":"ElementaryTypeName","src":"1106:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":83,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1145:6:0","nodeType":"VariableDeclaration","scope":97,"src":"1129:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"1129:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"indexed":false,"mutability":"mutable","name":"receiver","nameLocation":"1169:8:0","nodeType":"VariableDeclaration","scope":97,"src":"1161:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":84,"name":"address","nodeType":"ElementaryTypeName","src":"1161:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":87,"indexed":false,"mutability":"mutable","name":"destination","nameLocation":"1194:11:0","nodeType":"VariableDeclaration","scope":97,"src":"1187:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":86,"name":"string","nodeType":"ElementaryTypeName","src":"1187:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":89,"indexed":false,"mutability":"mutable","name":"description","nameLocation":"1222:11:0","nodeType":"VariableDeclaration","scope":97,"src":"1215:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":88,"name":"string","nodeType":"ElementaryTypeName","src":"1215:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":91,"indexed":false,"mutability":"mutable","name":"previousBlockHash","nameLocation":"1251:17:0","nodeType":"VariableDeclaration","scope":97,"src":"1243:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":90,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1243:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":93,"indexed":false,"mutability":"mutable","name":"previousShipmentId","nameLocation":"1286:18:0","nodeType":"VariableDeclaration","scope":97,"src":"1278:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":92,"name":"uint256","nodeType":"ElementaryTypeName","src":"1278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":95,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1322:9:0","nodeType":"VariableDeclaration","scope":97,"src":"1314:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":94,"name":"uint256","nodeType":"ElementaryTypeName","src":"1314:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"982:355:0"},"src":"961:377:0"},{"body":{"id":128,"nodeType":"Block","src":"1415:314:0","statements":[{"eventCall":{"arguments":[{"expression":{"id":106,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1459:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1464:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":26,"src":"1459:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":108,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1488:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1493:6:0","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":28,"src":"1488:11:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":110,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1513:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":30,"src":"1513:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":112,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1537:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1542:5:0","memberName":"batch","nodeType":"MemberAccess","referencedDeclaration":32,"src":"1537:10:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":114,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1561:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1566:6:0","memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":34,"src":"1561:11:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":116,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1586:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1590:6:0","memberName":"sender","nodeType":"MemberAccess","src":"1586:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":118,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1610:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1615:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":36,"src":"1610:13:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":120,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1637:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1642:11:0","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":38,"src":"1637:16:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":122,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":100,"src":"1667:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1672:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":40,"src":"1667:16:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":124,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1697:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1703:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"1697:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":105,"name":"ShipmentCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"1430:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,string memory,address,address,string memory,string memory,uint256)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:292:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"EmitStatement","src":"1425:297:0"}]},"functionSelector":"16f7af7c","id":129,"implemented":true,"kind":"function","modifiers":[{"id":103,"kind":"modifierInvocation","modifierName":{"id":102,"name":"onlyOwner","nameLocations":["1405:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1405:9:0"},"nodeType":"ModifierInvocation","src":"1405:9:0"}],"name":"createShipment","nameLocation":"1353:14:0","nodeType":"FunctionDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"data","nameLocation":"1390:4:0","nodeType":"VariableDeclaration","scope":129,"src":"1368:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData"},"typeName":{"id":99,"nodeType":"UserDefinedTypeName","pathNode":{"id":98,"name":"ShipmentData","nameLocations":["1368:12:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"1368:12:0"},"referencedDeclaration":41,"src":"1368:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_storage_ptr","typeString":"struct LogisticsEvents.ShipmentData"}},"visibility":"internal"}],"src":"1367:28:0"},"returnParameters":{"id":104,"nodeType":"ParameterList","parameters":[],"src":"1415:0:0"},"scope":174,"src":"1344:385:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":172,"nodeType":"Block","src":"1812:459:0","statements":[{"eventCall":{"arguments":[{"expression":{"expression":{"id":138,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1856:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1861:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1856:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1870:10:0","memberName":"shipmentId","nodeType":"MemberAccess","referencedDeclaration":26,"src":"1856:24:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":141,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1894:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1899:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1894:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1908:6:0","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":28,"src":"1894:20:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":144,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1928:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1933:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1928:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1942:5:0","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":30,"src":"1928:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":147,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1961:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1966:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1961:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1975:5:0","memberName":"batch","nodeType":"MemberAccess","referencedDeclaration":32,"src":"1961:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"expression":{"id":150,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"1994:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1999:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"1994:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2008:6:0","memberName":"origin","nodeType":"MemberAccess","referencedDeclaration":34,"src":"1994:20:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":153,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2028:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2032:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2028:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":155,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2052:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2057:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2052:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2066:8:0","memberName":"receiver","nodeType":"MemberAccess","referencedDeclaration":36,"src":"2052:22:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"expression":{"id":158,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2093:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2088:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2102:11:0","memberName":"destination","nodeType":"MemberAccess","referencedDeclaration":38,"src":"2088:25:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"expression":{"id":161,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2127:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2132:8:0","memberName":"shipment","nodeType":"MemberAccess","referencedDeclaration":44,"src":"2127:13:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentData_$41_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentData calldata"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2141:11:0","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":40,"src":"2127:25:0","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2166:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2171:17:0","memberName":"previousBlockHash","nodeType":"MemberAccess","referencedDeclaration":46,"src":"2166:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"2202:4:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData calldata"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2207:18:0","memberName":"previousShipmentId","nodeType":"MemberAccess","referencedDeclaration":48,"src":"2202:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":168,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2239:5:0","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2245:9:0","memberName":"timestamp","nodeType":"MemberAccess","src":"2239:15:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":137,"name":"ShipmentUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"1827:15:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bytes32_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256,string memory,address,address,string memory,string memory,bytes32,uint256,uint256)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:437:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":171,"nodeType":"EmitStatement","src":"1822:442:0"}]},"functionSelector":"11d48f8c","id":173,"implemented":true,"kind":"function","modifiers":[{"id":135,"kind":"modifierInvocation","modifierName":{"id":134,"name":"onlyOwner","nameLocations":["1802:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"1802:9:0"},"nodeType":"ModifierInvocation","src":"1802:9:0"}],"name":"updateShipment","nameLocation":"1744:14:0","nodeType":"FunctionDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"data","nameLocation":"1787:4:0","nodeType":"VariableDeclaration","scope":173,"src":"1759:32:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_calldata_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData"},"typeName":{"id":131,"nodeType":"UserDefinedTypeName","pathNode":{"id":130,"name":"ShipmentUpdateData","nameLocations":["1759:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":49,"src":"1759:18:0"},"referencedDeclaration":49,"src":"1759:18:0","typeDescriptions":{"typeIdentifier":"t_struct$_ShipmentUpdateData_$49_storage_ptr","typeString":"struct LogisticsEvents.ShipmentUpdateData"}},"visibility":"internal"}],"src":"1758:34:0"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"1812:0:0"},"scope":174,"src":"1735:536:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":175,"src":"58:2215:0","usedErrors":[],"usedEvents":[71,97]}],"src":"32:2242:0"}}},"contracts":{"contracts/LogisticsTracking.sol":{"LogisticsEvents":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"shipmentId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batch","type":"uint256"},{"indexed":false,"internalType":"string","name":"origin","type":"string"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"string","name":"destination","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShipmentCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"shipmentId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":true,"internalType":"uint256","name":"batch","type":"uint256"},{"indexed":false,"internalType":"string","name":"origin","type":"string"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"address","name":"receiver","type":"address"},{"indexed":false,"internalType":"string","name":"destination","type":"string"},{"indexed":false,"internalType":"string","name":"description","type":"string"},{"indexed":false,"internalType":"bytes32","name":"previousBlockHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"previousShipmentId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ShipmentUpdated","type":"event"},{"inputs":[{"components":[{"internalType":"uint256","name":"shipmentId","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"batch","type":"uint256"},{"internalType":"string","name":"origin","type":"string"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"string","name":"destination","type":"string"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct LogisticsEvents.ShipmentData","name":"data","type":"tuple"}],"name":"createShipment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"uint256","name":"shipmentId","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"batch","type":"uint256"},{"internalType":"string","name":"origin","type":"string"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"string","name":"destination","type":"string"},{"internalType":"string","name":"description","type":"string"}],"internalType":"struct LogisticsEvents.ShipmentData","name":"shipment","type":"tuple"},{"internalType":"bytes32","name":"previousBlockHash","type":"bytes32"},{"internalType":"uint256","name":"previousShipmentId","type":"uint256"}],"internalType":"struct LogisticsEvents.ShipmentUpdateData","name":"data","type":"tuple"}],"name":"updateShipment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":{"llvm_arguments":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Default","level_middle_end_size":"Z"},"revive_pallet_version":null,"revive_version":"0.3.0+commit.ed60869.llvm-18.1.8","solc_metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShipmentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"previousBlockHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousShipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ShipmentUpdated\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.ShipmentData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"createShipment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"origin\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"destination\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.ShipmentData\",\"name\":\"shipment\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"previousBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"previousShipmentId\",\"type\":\"uint256\"}],\"internalType\":\"struct LogisticsEvents.ShipmentUpdateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"updateShipment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LogisticsTracking.sol\":\"LogisticsEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LogisticsTracking.sol\":{\"keccak256\":\"0x275782a075368a4c0dbf30d1dca9a26721a9b4e3e7fb2b5a541dd95c0b6cbc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3b0c01e530b10f9001c9a6a6ea34e1399bac7221454fedf30946fd3ac680db2\",\"dweb:/ipfs/Qmdo3TZQx8wNoXAE4wgJeNWYs9284HMJ63EnT77AAtsnQK\"]}},\"version\":1}","solc_version":"0.8.20+commit.a1b79de6.Linux.g++"},"evm":{"assembly":"// RO data = 0/0 bytes\n// RW data = 80/65664 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 3203\n// Code size = 10982 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20058]\n     5: jump @29 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30080\n    14: i32 a0 = a0 + 0\n    16: ecalli 8 // 'set_immutable_data'\n    18: jump @29\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @10\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @10\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 5 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 41)\n   706: sp = sp + 0xfffffffffffffee0\n   710: u64 [sp + 0x118] = ra\n   714: u64 [sp + 0x110] = s0\n   718: u64 [sp + 0x108] = s1\n   722: s0 = sp + 0x120\n   726: sp = sp & 0xffffffffffffffe0\n   729: s1 = u64 [a5]\n   731: u64 [sp + 0x60] = s1\n   734: s1 = u64 [a5 + 0x8]\n   737: u64 [sp + 0x68] = s1\n   740: s1 = u64 [a5 + 0x10]\n   743: u64 [sp + 0x70] = s1\n   746: a5 = u64 [a5 + 0x18]\n   749: u64 [sp + 0x78] = a5\n   752: a5 = u64 [a4]\n   754: u64 [sp + 0x38] = a5\n   757: a5 = u64 [a4 + 0x8]\n   760: u64 [sp + 0x40] = a5\n   763: a5 = u64 [a4 + 0x10]\n   766: u64 [sp + 0x48] = a5\n   769: a4 = u64 [a4 + 0x18]\n   772: u64 [sp + 0x50] = a4\n   775: t0 = 0x6\n   778: a4 = u64 [a3]\n   780: u64 [sp + 0x18] = a4\n   783: a4 = u64 [a3 + 0x8]\n   786: u64 [sp + 0x20] = a4\n   789: a4 = u64 [a3 + 0x10]\n   792: u64 [sp + 0x28] = a4\n   795: a3 = u64 [a3 + 0x18]\n   798: u64 [sp + 0x30] = a3\n   801: s1 = u64 [a2]\n   803: a3 = u64 [a2 + 0x8]\n   806: u64 [sp] = a3\n   808: a3 = u64 [a2 + 0x10]\n   811: u64 [sp + 0x8] = a3\n   814: a2 = u64 [a2 + 0x18]\n   817: u64 [sp + 0x10] = a2\n   820: u64 [sp + 0x58] = a1\n   823: ra = 0x8\n   826: jump @10\n      : @8 [@dyn 3] (gas: 2)\n   829: u64 [sp + 0x58] = a1\n   832: ra = 8, jump @10\n      : @9 [@dyn 4] (gas: 58)\n   837: a1 = reverse s1\n   839: u64 [sp + 0x98] = a1\n   843: a1 = u64 [sp]\n   845: a1 = reverse a1\n   847: u64 [sp + 0x90] = a1\n   851: a1 = u64 [sp + 0x8]\n   854: a1 = reverse a1\n   856: u64 [sp + 0x88] = a1\n   860: a1 = u64 [sp + 0x10]\n   863: a1 = reverse a1\n   865: u64 [sp + 0x80] = a1\n   869: a1 = u64 [sp + 0x18]\n   872: a1 = reverse a1\n   874: u64 [sp + 0xb8] = a1\n   878: a1 = u64 [sp + 0x20]\n   881: a1 = reverse a1\n   883: u64 [sp + 0xb0] = a1\n   887: a1 = u64 [sp + 0x28]\n   890: a1 = reverse a1\n   892: u64 [sp + 0xa8] = a1\n   896: a1 = u64 [sp + 0x30]\n   899: a1 = reverse a1\n   901: u64 [sp + 0xa0] = a1\n   905: a1 = u64 [sp + 0x38]\n   908: a1 = reverse a1\n   910: u64 [sp + 0xd8] = a1\n   914: a1 = u64 [sp + 0x40]\n   917: a1 = reverse a1\n   919: u64 [sp + 0xd0] = a1\n   923: a1 = u64 [sp + 0x48]\n   926: a1 = reverse a1\n   928: u64 [sp + 0xc8] = a1\n   932: a1 = u64 [sp + 0x50]\n   935: a1 = reverse a1\n   937: u64 [sp + 0xc0] = a1\n   941: a1 = u64 [sp + 0x60]\n   944: a1 = reverse a1\n   946: u64 [sp + 0xf8] = a1\n   950: a1 = u64 [sp + 0x68]\n   953: a1 = reverse a1\n   955: u64 [sp + 0xf0] = a1\n   959: a1 = u64 [sp + 0x70]\n   962: a1 = reverse a1\n   964: u64 [sp + 0xe8] = a1\n   968: a1 = u64 [sp + 0x78]\n   971: a1 = reverse a1\n   973: u64 [sp + 0xe0] = a1\n   977: i32 a2 = a0 + 0\n   979: a3 = i32 [sp + 0x58]\n   982: i32 a0 = sp + 0x80\n   986: a1 = 0x4\n   989: ecalli 4 // 'deposit_event'\n   991: sp = s0 + 0xfffffffffffffee0\n   995: ra = u64 [sp + 0x118]\n   999: s0 = u64 [sp + 0x110]\n  1003: s1 = u64 [sp + 0x108]\n  1007: sp = sp + 0x120\n  1011: ret\n      : @10 (gas: 2)\n  1013: i32 a2 = a0 >> 0x10\n  1016: jump @15 if a2 != 0\n      : @11 (gas: 4)\n  1019: a1 = a1 + a0\n  1022: i32 a1 = a1 + 0x1f\n  1025: a1 = a1 & 0xffffffffffffffe0\n  1028: jump @15 if a1 >u 65536\n      : @12 (gas: 3)\n  1034: a2 = 0x20054\n  1039: a3 = i32 [0x20054]\n  1044: jump @14 if a3 >=u a1\n      : @13 (gas: 2)\n  1047: u32 [0x20054] = a1\n  1052: fallthrough\n      : @14 (gas: 4)\n  1053: a1 = 0x20060\n  1058: i32 a0 = a0 + 0\n  1060: a0 = a0 + a1\n  1063: ret\n      : @15 (gas: 1)\n  1065: trap\n      : @16 (gas: 6)\n  1066: sp = sp + 0xfffffffffffffff0\n  1069: u64 [sp + 0x8] = ra\n  1072: u64 [sp] = s0\n  1074: s0 = a0 & 0x1\n  1077: ecalli 2 // 'call_data_size'\n  1079: fallthrough\n      : @17 (gas: 2)\n  1080: u32 [0x20050] = a0\n  1085: jump @19 if s0 == 0\n      : @18 (gas: 1)\n  1088: ra = 10, jump @20\n      : @19 [@dyn 5] (gas: 1)\n  1092: ra = 12, jump @31\n      : @20 [@dyn 6] (gas: 13)\n  1097: sp = sp + 0xffffffffffffff00\n  1101: u64 [sp + 0xf8] = ra\n  1105: u64 [sp + 0xf0] = s0\n  1109: u64 [sp + 0xe8] = s1\n  1113: s0 = sp + 0x100\n  1117: sp = sp & 0xffffffffffffffe0\n  1120: u64 [sp + 88] = 0\n  1123: u64 [sp + 80] = 0\n  1126: u64 [sp + 64] = 0x80\n  1131: a0 = 0x40\n  1134: a1 = sp + a0\n  1137: u64 [sp + 72] = 0\n  1140: ra = 14, jump @4\n      : @21 [@dyn 7] (gas: 7)\n  1145: u64 [sp + 120] = 0\n  1148: u64 [sp + 112] = 0\n  1151: u64 [sp + 104] = 0\n  1154: u64 [sp + 96] = 0\n  1157: i32 a0 = sp + 0x60\n  1160: ecalli 10 // 'value_transferred'\n  1162: fallthrough\n      : @22 (gas: 8)\n  1163: a0 = u64 [sp + 0x70]\n  1166: a1 = u64 [sp + 0x78]\n  1169: a2 = u64 [sp + 0x68]\n  1172: a3 = u64 [sp + 0x60]\n  1175: a1 = a1 | a2\n  1178: a0 = a0 | a3\n  1181: a0 = a0 | a1\n  1184: jump @24 if a0 == 0\n      : @23 (gas: 7)\n  1187: a1 = 0x20060\n  1192: i32 a1 = a1 + 0\n  1194: a0 = 0x1\n  1197: a2 = 0\n  1199: ra = 0x16\n  1202: ecalli 7 // 'seal_return'\n  1204: jump @31\n      : @24 (gas: 25)\n  1207: s1 = 0x30060\n  1212: i32 a0 = s1 + 0\n  1214: ecalli 3 // 'caller'\n  1216: a0 = u64 [0x30068]\n  1221: a1 = i32 [0x30070]\n  1226: a2 = u64 [0x30060]\n  1231: a0 = reverse a0\n  1233: a3 = a0 << 0x20\n  1236: a1 = reverse a1\n  1238: a1 = a1 >> 0x20\n  1241: a1 = a1 | a3\n  1244: u64 [sp + 0x18] = a1\n  1247: a0 = a0 >> 0x20\n  1250: a1 = reverse a2\n  1252: s1 = a1 << 0x20\n  1255: a0 = a0 | s1\n  1258: u64 [sp + 0x10] = a0\n  1261: s1 = a1 >> 0x20\n  1264: u64 [sp + 152] = 0\n  1268: u64 [sp + 144] = 0\n  1272: u64 [sp + 136] = 0\n  1276: u64 [sp + 128] = 0\n  1280: a0 = sp + 0x20\n  1283: a1 = sp + 0x80\n  1287: ra = 16, jump @6\n      : @25 [@dyn 8] (gas: 57)\n  1292: a0 = u32 [sp + 0x34]\n  1295: a0 = a0 << 0x20\n  1298: a1 = u64 [sp + 0x38]\n  1301: a0 = a0 | s1\n  1304: u64 [sp + 184] = 0\n  1308: u64 [sp + 176] = 0\n  1312: u64 [sp + 168] = 0\n  1316: u64 [sp + 160] = 0\n  1320: u64 [sp + 0xd8] = a1\n  1324: a1 = u64 [sp + 0x10]\n  1327: u64 [sp + 0xc8] = a1\n  1331: a1 = u64 [sp + 0x18]\n  1334: u64 [sp + 0xc0] = a1\n  1338: u64 [sp + 0xd0] = a0\n  1342: a0 = sp + 0xa0\n  1346: a1 = sp + 0xc0\n  1350: ra = 0x12\n  1353: sp = sp + 0xffffffffffffffa0\n  1356: u64 [sp + 0x58] = ra\n  1359: u64 [sp + 0x50] = s0\n  1362: s0 = sp + 0x60\n  1365: sp = sp & 0xffffffffffffffe0\n  1368: t0 = u64 [a0]\n  1370: a3 = u64 [a0 + 0x8]\n  1373: a4 = u64 [a0 + 0x10]\n  1376: a0 = u64 [a0 + 0x18]\n  1379: t1 = u64 [a1]\n  1381: a2 = u64 [a1 + 0x8]\n  1384: a5 = u64 [a1 + 0x10]\n  1387: a1 = u64 [a1 + 0x18]\n  1390: t2 = reverse a0\n  1392: a4 = reverse a4\n  1394: a3 = reverse a3\n  1396: a0 = reverse t0\n  1398: t0 = reverse a1\n  1400: a5 = reverse a5\n  1402: a2 = reverse a2\n  1404: a1 = reverse t1\n  1406: u64 [sp + 0x18] = a0\n  1409: u64 [sp + 0x10] = a3\n  1412: u64 [sp + 0x8] = a4\n  1415: u64 [sp] = t2\n  1417: u64 [sp + 0x38] = a1\n  1420: u64 [sp + 0x30] = a2\n  1423: u64 [sp + 0x28] = a5\n  1426: u64 [sp + 0x20] = t0\n  1429: i32 a1 = sp + 0\n  1431: i32 a3 = sp + 0x20\n  1434: a2 = 0xffffffffffffffff\n  1437: a4 = 0x20\n  1440: a0 = 0\n  1442: ecalli 9 // 'set_storage'\n  1444: sp = s0 + 0xffffffffffffffa0\n  1447: ra = u64 [sp + 0x58]\n  1450: s0 = u64 [sp + 0x50]\n  1453: sp = sp + 0x60\n  1456: ret\n      : @26 [@dyn 9] (gas: 2)\n  1458: a1 = i32 [0x20054]\n  1463: jump @28 if a1 >u 127\n      : @27 (gas: 2)\n  1467: u32 [0x20054] = 0x80\n  1474: fallthrough\n      : @28 (gas: 6)\n  1475: a0 = 0x20060\n  1480: i32 a0 = a0 + 0x80\n  1484: a1 = 0\n  1486: a2 = 0\n  1488: ecalli 0 // 'call_data_copy'\n  1489: jump @0\n      : @29 (gas: 3)\n  1492: a0 = 0x80\n  1496: a1 = 0\n  1498: ra = 20, jump @10\n      : @30 [@dyn 10] (gas: 6)\n  1503: i32 a1 = a0 + 0\n  1505: a0 = 0\n  1507: a2 = 0\n  1509: ra = 0x16\n  1512: ecalli 7 // 'seal_return'\n  1514: fallthrough\n      : @31 [@dyn 11] (gas: 19)\n  1515: sp = sp + 0xfffffffffffffe10\n  1519: u64 [sp + 0x1e8] = ra\n  1523: u64 [sp + 0x1e0] = s0\n  1527: u64 [sp + 0x1d8] = s1\n  1531: s0 = sp + 0x1f0\n  1535: sp = sp + 0xfffffffffffff800\n  1539: sp = sp + 0xfffffffffffff810\n  1543: sp = sp & 0xffffffffffffffe0\n  1546: s1 = sp\n  1548: a2 = s1 + 0x7ff\n  1552: a2 = a2 + 0x139\n  1556: u64 [a2 + 1600] = 0\n  1560: u64 [a2 + 1592] = 0\n  1564: u64 [a2 + 1576] = 0x80\n  1570: a0 = 0x40\n  1573: a1 = s1 + 0x7ff\n  1577: a1 = a1 + 0x761\n  1581: u64 [a2 + 1584] = 0\n  1585: ra = 24, jump @4\n      : @32 [@dyn 12] (gas: 4)\n  1590: a0 = 0x20050\n  1595: u64 [s1 + 0x1b0] = a0\n  1599: a0 = i32 [0x20050]\n  1604: jump @34 if a0 >=u 4\n      : @33 (gas: 1)\n  1608: jump @178\n      : @34 (gas: 13)\n  1611: a0 = sp + 0xffffffffffffffe0\n  1614: a0 = a0 & 0xffffffffffffffe0\n  1617: sp = a0\n  1619: u64 [a0 + 24] = 0\n  1622: u64 [a0 + 16] = 0\n  1625: u64 [a0 + 8] = 0\n  1628: u64 [s1 + 0x1a8] = a0\n  1632: u64 [a0 + 0] = 0\n  1634: a0 = s1 + 0x1000\n  1638: i32 a0 = a0 + 0xffffffffffffff80\n  1641: a1 = 0\n  1643: ecalli 1 // 'call_data_load'\n  1645: fallthrough\n      : @35 (gas: 4)\n  1646: a2 = s1 + 0x7ff\n  1650: a2 = a2 + 0x139\n  1654: a0 = i32 [a2 + 0x664]\n  1658: jump @37 if a0 != 2376452955\n      : @36 (gas: 1)\n  1665: jump @114\n      : @37 (gas: 1)\n  1668: jump @39 if a0 == 299143052\n      : @38 (gas: 1)\n  1675: jump @123\n      : @39 (gas: 8)\n  1678: u64 [a2 + 1664] = 0\n  1682: u64 [a2 + 1656] = 0\n  1686: u64 [a2 + 1648] = 0\n  1690: u64 [a2 + 1640] = 0\n  1694: a0 = s1 + 0x1000\n  1698: i32 a0 = a0 + 0xffffffffffffffa0\n  1701: ecalli 10 // 'value_transferred'\n  1703: fallthrough\n      : @40 (gas: 11)\n  1704: a3 = s1 + 0x7ff\n  1708: a3 = a3 + 0x139\n  1712: a4 = a3 + 0x600\n  1716: a0 = u64 [a4 + 0x78]\n  1719: a1 = u64 [a4 + 0x80]\n  1723: a2 = u64 [a4 + 0x70]\n  1726: a3 = u64 [a4 + 0x68]\n  1729: a1 = a1 | a2\n  1732: a0 = a0 | a3\n  1735: a0 = a0 | a1\n  1738: jump @42 if a0 == 0\n      : @41 (gas: 1)\n  1741: jump @175\n      : @42 (gas: 3)\n  1744: a0 = u64 [s1 + 0x1b0]\n  1748: a0 = i32 [a0]\n  1750: jump @44 if a0 >u 35\n      : @43 (gas: 1)\n  1754: jump @175\n      : @44 (gas: 5)\n  1757: a0 = s1 + 0x1000\n  1761: i32 a0 = a0 + 0xffffffffffffffc0\n  1764: a1 = 0x4\n  1767: ecalli 1 // 'call_data_load'\n  1769: fallthrough\n      : @45 (gas: 10)\n  1770: a0 = s1 + 0x7ff\n  1774: a0 = a0 + 0x139\n  1778: t0 = u64 [a0 + 0x6a0]\n  1782: t1 = u64 [a0 + 0x698]\n  1786: a1 = u64 [a0 + 0x690]\n  1790: a3 = t1 | t0\n  1793: a2 = a1 <u 0x1\n  1796: u64 [s1 + 0x170] = a3\n  1800: a2 = 0 if a3 != 0\n  1802: jump @47 if a2 != 0\n      : @46 (gas: 1)\n  1805: jump @175\n      : @47 (gas: 26)\n  1808: t2 = u64 [a0 + 0x688]\n  1812: a0 = u64 [s1 + 0x1b0]\n  1816: a3 = u32 [a0]\n  1818: a4 = a3 <u t2\n  1821: a5 = a1 >u 0\n  1823: a5 = a4 if a1 == 0\n  1826: a2 = -t1\n  1828: a0 = a2 - a5\n  1831: a2 = a2 <u a5\n  1834: a5 = t1 >u 0\n  1836: a5 = a5 + t0\n  1839: a5 = -a5\n  1841: a5 = a5 - a2\n  1844: a2 = -a1\n  1846: a2 = a2 - a4\n  1849: a3 = a3 - t2\n  1852: a3 = a3 <u 0x64\n  1855: a3 = a3 ^ 0x1\n  1858: a4 = a2 >u 0\n  1860: a4 = a3 if a2 == 0\n  1863: a2 = a5 >s 0\n  1865: a3 = a0 >u 0\n  1867: a3 = a2 if a5 != 0\n  1870: a0 = a0 | a5\n  1873: a4 = a3 if a0 != 0\n  1876: jump @49 if a4 != 0\n      : @48 (gas: 1)\n  1879: jump @175\n      : @49 (gas: 18)\n  1882: a0 = t2 + 0x4\n  1885: u64 [s1 + 0x1b8] = a0\n  1889: u64 [s1 + 0x178] = t2\n  1893: a0 = a0 <u t2\n  1896: a2 = a1 + a0\n  1899: u64 [s1 + 0x1b0] = a2\n  1903: u64 [s1 + 0x168] = a1\n  1907: a2 = a2 <u a1\n  1910: a2 = a0 if a0 == 0\n  1913: a2 = a2 + t1\n  1916: u64 [s1 + 0x1a0] = a2\n  1920: a0 = a2 <u t1\n  1923: a0 = a0 + t0\n  1926: u64 [s1 + 0x198] = a0\n  1930: a0 = s1 + 0x7ff\n  1934: a0 = a0 + 0x1e1\n  1938: a1 = u64 [s1 + 0x1a8]\n  1942: ra = 26, jump @6\n      : @50 [@dyn 13] (gas: 17)\n  1947: a0 = s1 + 0x7ff\n  1951: a0 = a0 + 0x139\n  1955: a1 = u64 [a0 + 0xb0]\n  1959: u64 [s1 + 0x190] = a1\n  1963: a1 = u64 [a0 + 0xa8]\n  1967: u64 [s1 + 0x188] = a1\n  1971: a0 = u32 [a0 + 0xb8]\n  1975: u64 [s1 + 0x180] = a0\n  1979: a0 = 0x30060\n  1984: u64 [s1 + 0x1a8] = a0\n  1988: i32 a0 = a0 + 0\n  1990: u64 [s1 + 0x160] = a0\n  1994: ra = 0x1c\n  1997: ecalli 3 // 'caller'\n  1999: a2 = u64 [s1 + 0x1a8]\n  2003: t0 = 0x1e\n  2006: jump @240\n      : @51 [@dyn 14] (gas: 2)\n  2009: a2 = u64 [s1 + 0x1a8]\n  2013: t0 = 30, jump @240\n      : @52 [@dyn 15] (gas: 18)\n  2018: a2 = u64 [s1 + 0x180]\n  2022: a1 = a1 ^ a2\n  2025: a2 = u64 [s1 + 0x188]\n  2029: a0 = a0 ^ a2\n  2032: a0 = a0 | a1\n  2035: a1 = u64 [s1 + 0x190]\n  2039: a1 = a1 ^ a3\n  2042: a0 = a0 | a1\n  2045: a0 = a0 <u 0x1\n  2048: a1 = s1 + 0x7ff\n  2052: a1 = a1 + 0x139\n  2056: u64 [a1 + 160] = 0\n  2060: u64 [a1 + 152] = 0\n  2064: u64 [a1 + 0x88] = a0\n  2068: a0 = s1 + 0x7ff\n  2072: a0 = a0 + 0x1c1\n  2076: u64 [a1 + 144] = 0\n  2080: ra = 32, jump @182\n      : @53 [@dyn 16] (gas: 23)\n  2085: a0 = s1 + 0x7ff\n  2089: a0 = a0 + 0x139\n  2093: a5 = s1 + 0x100\n  2097: a4 = u64 [a5 + 0x98]\n  2101: u64 [a0 + 0x40] = a4\n  2104: a2 = u64 [a5 + 0xa0]\n  2108: u64 [a0 + 0x38] = a2\n  2111: a1 = u64 [a5 + 0xb0]\n  2115: u64 [a0 + 0x30] = a1\n  2118: a3 = u64 [a5 + 0xb8]\n  2122: u64 [a0 + 0x28] = a3\n  2125: u64 [a0 + 0x60] = a4\n  2128: u64 [a0 + 0x58] = a2\n  2131: u64 [a0 + 0x50] = a1\n  2134: a4 = a0\n  2136: a0 = s1 + 0x7ff\n  2140: a0 = a0 + 0x1a1\n  2144: a1 = s1 + 0x7ff\n  2148: a1 = a1 + 0x181\n  2152: a2 = s1 + 0x7ff\n  2156: a2 = a2 + 0x161\n  2160: u64 [a4 + 0x48] = a3\n  2163: ra = 34, jump @228\n      : @54 [@dyn 17] (gas: 14)\n  2168: a1 = s1 + 0x7ff\n  2172: a1 = a1 + 0x139\n  2176: a0 = u64 [a1 + 0x80]\n  2180: a2 = u64 [a1 + 0x78]\n  2183: a3 = u64 [a1 + 0x70]\n  2186: a1 = u64 [a1 + 0x68]\n  2189: a0 = a0 | a3\n  2192: a3 = a1 | a2\n  2195: a3 = a3 | a0\n  2198: a3 = a3 >> 0x20\n  2201: a0 = a0 | a2\n  2204: a0 = a0 << 0x20\n  2207: a0 = a0 | a3\n  2210: jump @56 if a0 == 0\n      : @55 (gas: 1)\n  2213: jump @174\n      : @56 (gas: 41)\n  2216: i32 a1 = a1 + 0\n  2218: a0 = s1 + 0x1000\n  2222: i32 a0 = a0 + 0xffffffffffffffe0\n  2225: ecalli 1 // 'call_data_load'\n  2227: a4 = s1 + 0x7ff\n  2231: a4 = a4 + 0x139\n  2235: a1 = a4 + 0x600\n  2239: a0 = u64 [a1 + 0xc0]\n  2243: a5 = s1 + 0x100\n  2247: u64 [a5 + 0x90] = a0\n  2251: a0 = u64 [a1 + 0xb8]\n  2255: u64 [a5 + 0x58] = a0\n  2258: a0 = u64 [a1 + 0xb0]\n  2262: u64 [a5 + 0x80] = a0\n  2266: a0 = u64 [a1 + 0xa8]\n  2270: u64 [a5 + 0x88] = a0\n  2274: a2 = u64 [a5 + 0x98]\n  2278: a0 = s1 + 0x1000\n  2282: u64 [a0 + 0xfffffffffffff918] = a2\n  2286: a1 = u64 [a5 + 0xa0]\n  2290: a0 = s1 + 0x1000\n  2294: u64 [a0 + 0xfffffffffffff910] = a1\n  2298: a0 = u64 [a5 + 0xb0]\n  2302: a3 = s1 + 0x1000\n  2306: u64 [a3 + 0xfffffffffffff908] = a0\n  2310: a3 = u64 [a5 + 0xb8]\n  2314: a5 = s1 + 0x1000\n  2318: u64 [a5 + 0xfffffffffffff900] = a3\n  2322: u64 [a4] = a2\n  2324: u64 [a4 + 0xfffffffffffffff8] = a1\n  2327: a1 = s1 + 0x1000\n  2331: u64 [a1 + 0xfffffffffffff928] = a0\n  2335: a0 = s1 + 0x7ff\n  2339: a0 = a0 + 0x141\n  2343: a1 = s1 + 0x7ff\n  2347: a1 = a1 + 0x121\n  2351: a2 = s1 + 0x7ff\n  2355: a2 = a2 + 0x101\n  2359: a4 = s1 + 0x1000\n  2363: u64 [a4 + 0xfffffffffffff920] = a3\n  2367: ra = 36, jump @228\n      : @57 [@dyn 18] (gas: 8)\n  2372: a1 = s1 + 0x7ff\n  2376: a1 = a1 + 0x139\n  2380: a0 = u64 [a1 + 0x8]\n  2383: a2 = u64 [a1 + 0x20]\n  2386: a3 = u64 [a1 + 0x10]\n  2389: a4 = u64 [a1 + 0x18]\n  2392: a1 = a0 + 0x20\n  2395: t0 = 38, jump @237\n      : @58 [@dyn 19] (gas: 1)\n  2400: jump @60 if a0 == 0\n      : @59 (gas: 1)\n  2403: jump @174\n      : @60 (gas: 43)\n  2406: i32 a1 = a1 + 0\n  2408: a0 = s1 + 0x1000\n  2412: i32 a0 = a0 + 0\n  2414: ecalli 1 // 'call_data_load'\n  2416: a1 = s1 + 0x7ff\n  2420: a1 = a1 + 0x139\n  2424: a2 = a1 + 0x600\n  2428: a0 = u64 [a2 + 0xe0]\n  2432: a4 = s1 + 0x100\n  2436: u64 [a4 + 0x50] = a0\n  2439: a0 = u64 [a2 + 0xd8]\n  2443: u64 [a4 + 0x48] = a0\n  2446: a0 = u64 [a2 + 0xd0]\n  2450: u64 [a4 + 0x40] = a0\n  2453: a0 = u64 [a2 + 0xc8]\n  2457: u64 [a4 + 0x38] = a0\n  2460: a2 = u64 [a4 + 0x98]\n  2464: a0 = s1 + 0x1000\n  2468: u64 [a0 + 0xfffffffffffff8b8] = a2\n  2472: a1 = u64 [a4 + 0xa0]\n  2476: a0 = s1 + 0x1000\n  2480: u64 [a0 + 0xfffffffffffff8b0] = a1\n  2484: a0 = u64 [a4 + 0xb0]\n  2488: a3 = s1 + 0x1000\n  2492: u64 [a3 + 0xfffffffffffff8a8] = a0\n  2496: a3 = u64 [a4 + 0xb8]\n  2500: a4 = s1 + 0x1000\n  2504: u64 [a4 + 0xfffffffffffff8a0] = a3\n  2508: a4 = s1 + 0x1000\n  2512: u64 [a4 + 0xfffffffffffff8d8] = a2\n  2516: a2 = s1 + 0x1000\n  2520: u64 [a2 + 0xfffffffffffff8d0] = a1\n  2524: a1 = s1 + 0x1000\n  2528: u64 [a1 + 0xfffffffffffff8c8] = a0\n  2532: a0 = s1 + 0x7ff\n  2536: a0 = a0 + 0xe1\n  2540: a1 = s1 + 0x7ff\n  2544: a1 = a1 + 0xc1\n  2548: a2 = s1 + 0x7ff\n  2552: a2 = a2 + 0xa1\n  2556: a4 = s1 + 0x1000\n  2560: u64 [a4 + 0xfffffffffffff8c0] = a3\n  2564: ra = 40, jump @228\n      : @61 [@dyn 20] (gas: 10)\n  2569: a0 = s1 + 0x1000\n  2573: a0 = u64 [a0 + 0xfffffffffffff8e0]\n  2577: a1 = s1 + 0x1000\n  2581: a2 = u64 [a1 + 0xfffffffffffff8f8]\n  2585: a1 = s1 + 0x1000\n  2589: a3 = u64 [a1 + 0xfffffffffffff8e8]\n  2593: a1 = s1 + 0x1000\n  2597: a4 = u64 [a1 + 0xfffffffffffff8f0]\n  2601: a1 = a0 + 0x40\n  2604: t0 = 42, jump @237\n      : @62 [@dyn 21] (gas: 1)\n  2609: jump @64 if a0 == 0\n      : @63 (gas: 1)\n  2612: jump @174\n      : @64 (gas: 43)\n  2615: i32 a1 = a1 + 0\n  2617: a0 = s1 + 0x1000\n  2621: i32 a0 = a0 + 0x20\n  2624: ecalli 1 // 'call_data_load'\n  2626: a1 = s1 + 0x7ff\n  2630: a1 = a1 + 0x139\n  2634: a0 = u64 [a1 + 0x700]\n  2638: a4 = s1 + 0x100\n  2642: u64 [a4 + 0x30] = a0\n  2645: a2 = a1 + 0x600\n  2649: a0 = u64 [a2 + 0xf8]\n  2653: u64 [a4 + 0x28] = a0\n  2656: a0 = u64 [a2 + 0xf0]\n  2660: u64 [a4 + 0x20] = a0\n  2663: a0 = u64 [a2 + 0xe8]\n  2667: u64 [a4 + 0x18] = a0\n  2670: a2 = u64 [a4 + 0x98]\n  2674: a0 = s1 + 0x1000\n  2678: u64 [a0 + 0xfffffffffffff858] = a2\n  2682: a1 = u64 [a4 + 0xa0]\n  2686: a0 = s1 + 0x1000\n  2690: u64 [a0 + 0xfffffffffffff850] = a1\n  2694: a0 = u64 [a4 + 0xb0]\n  2698: a3 = s1 + 0x1000\n  2702: u64 [a3 + 0xfffffffffffff848] = a0\n  2706: a3 = u64 [a4 + 0xb8]\n  2710: a4 = s1 + 0x1000\n  2714: u64 [a4 + 0xfffffffffffff840] = a3\n  2718: a4 = s1 + 0x1000\n  2722: u64 [a4 + 0xfffffffffffff878] = a2\n  2726: a2 = s1 + 0x1000\n  2730: u64 [a2 + 0xfffffffffffff870] = a1\n  2734: a1 = s1 + 0x1000\n  2738: u64 [a1 + 0xfffffffffffff868] = a0\n  2742: a0 = s1 + 0x7ff\n  2746: a0 = a0 + 0x81\n  2750: a1 = s1 + 0x7ff\n  2754: a1 = a1 + 0x61\n  2757: a2 = s1 + 0x7ff\n  2761: a2 = a2 + 0x41\n  2764: a4 = s1 + 0x1000\n  2768: u64 [a4 + 0xfffffffffffff860] = a3\n  2772: ra = 44, jump @228\n      : @65 [@dyn 22] (gas: 10)\n  2777: a0 = s1 + 0x1000\n  2781: a0 = u64 [a0 + 0xfffffffffffff880]\n  2785: a1 = s1 + 0x1000\n  2789: a2 = u64 [a1 + 0xfffffffffffff898]\n  2793: a1 = s1 + 0x1000\n  2797: a3 = u64 [a1 + 0xfffffffffffff888]\n  2801: a1 = s1 + 0x1000\n  2805: a4 = u64 [a1 + 0xfffffffffffff890]\n  2809: a1 = a0 + 0x60\n  2812: t0 = 46, jump @237\n      : @66 [@dyn 23] (gas: 1)\n  2817: jump @68 if a0 == 0\n      : @67 (gas: 1)\n  2820: jump @174\n      : @68 (gas: 38)\n  2823: i32 a1 = a1 + 0\n  2825: a0 = s1 + 0x1000\n  2829: i32 a0 = a0 + 0x40\n  2832: ecalli 1 // 'call_data_load'\n  2834: a1 = s1 + 0x7ff\n  2838: a1 = a1 + 0x139\n  2842: a2 = a1 + 0x700\n  2846: a0 = u64 [a2 + 0x20]\n  2849: u64 [s1 + 0x38] = a0\n  2852: a0 = u64 [a2 + 0x18]\n  2855: u64 [s1 + 0x20] = a0\n  2858: a0 = u64 [a2 + 0x10]\n  2861: u64 [s1 + 0x28] = a0\n  2864: a0 = u64 [a2 + 0x8]\n  2867: u64 [s1 + 0x30] = a0\n  2870: a3 = u64 [s1 + 0x198]\n  2874: u64 [s1 + 0x7f8] = a3\n  2878: a2 = u64 [s1 + 0x1a0]\n  2882: u64 [s1 + 0x7f0] = a2\n  2886: a1 = u64 [s1 + 0x1b0]\n  2890: u64 [s1 + 0x7e8] = a1\n  2894: a0 = u64 [s1 + 0x1b8]\n  2898: u64 [s1 + 0x7e0] = a0\n  2902: a4 = a0\n  2904: a0 = s1 + 0x1000\n  2908: u64 [a0 + 0xfffffffffffff818] = a3\n  2912: a0 = s1 + 0x1000\n  2916: u64 [a0 + 0xfffffffffffff810] = a2\n  2920: a0 = s1 + 0x1000\n  2924: u64 [a0 + 0xfffffffffffff808] = a1\n  2928: a0 = s1 + 0x7ff\n  2932: a0 = a0 + 0x21\n  2935: a1 = s1 + 0x7ff\n  2939: a1 = a1 + 0x1\n  2942: a2 = s1 + 0x7e0\n  2946: a3 = s1 + 0x1000\n  2950: u64 [a3 + 0xfffffffffffff800] = a4\n  2954: ra = 48, jump @228\n      : @69 [@dyn 24] (gas: 28)\n  2959: a0 = s1 + 0x1000\n  2963: a0 = u64 [a0 + 0xfffffffffffff820]\n  2967: a1 = s1 + 0x1000\n  2971: t0 = u64 [a1 + 0xfffffffffffff838]\n  2975: a1 = s1 + 0x1000\n  2979: a2 = u64 [a1 + 0xfffffffffffff828]\n  2983: a1 = s1 + 0x1000\n  2987: a3 = u64 [a1 + 0xfffffffffffff830]\n  2991: a4 = a0 + 0x80\n  2995: a5 = a4 <u a0\n  2998: t1 = a2 + a5\n  3001: a1 = t1 <u a2\n  3004: a1 = a5 if a5 == 0\n  3007: a1 = a1 + a3\n  3010: a5 = a1 <u a3\n  3013: a5 = a5 + t0\n  3016: u64 [s1 + 0x760] = a4\n  3020: u64 [s1 + 0x798] = t0\n  3024: u64 [s1 + 0x790] = a3\n  3028: u64 [s1 + 0x788] = a2\n  3032: u64 [s1 + 0x780] = a0\n  3036: u64 [s1 + 0x768] = t1\n  3040: u64 [s1 + 0x770] = a1\n  3044: a0 = s1 + 0x7a0\n  3048: a1 = s1 + 0x780\n  3052: a2 = s1 + 0x760\n  3056: u64 [s1 + 0x778] = a5\n  3060: ra = 50, jump @196\n      : @70 [@dyn 25] (gas: 32)\n  3065: a0 = u64 [s1 + 0x7b8]\n  3069: u64 [s1 + 0xf8] = a0\n  3073: a0 = u64 [s1 + 0x7b0]\n  3077: u64 [s1 + 0x100] = a0\n  3081: a0 = u64 [s1 + 0x7a8]\n  3085: u64 [s1 + 0x108] = a0\n  3089: a0 = u64 [s1 + 0x7a0]\n  3093: u64 [s1 + 0x110] = a0\n  3097: a0 = u64 [s1 + 0x7d8]\n  3101: u64 [s1 + 0xd8] = a0\n  3105: a0 = u64 [s1 + 0x7d0]\n  3109: u64 [s1 + 0xe0] = a0\n  3113: a0 = u64 [s1 + 0x7c8]\n  3117: u64 [s1 + 0xe8] = a0\n  3121: a0 = u64 [s1 + 0x7c0]\n  3125: u64 [s1 + 0xf0] = a0\n  3129: a2 = u64 [s1 + 0x198]\n  3133: u64 [s1 + 0x718] = a2\n  3137: a1 = u64 [s1 + 0x1a0]\n  3141: u64 [s1 + 0x710] = a1\n  3145: a0 = u64 [s1 + 0x1b0]\n  3149: u64 [s1 + 0x708] = a0\n  3153: a3 = u64 [s1 + 0x1b8]\n  3157: u64 [s1 + 0x700] = a3\n  3161: u64 [s1 + 0x738] = a2\n  3165: u64 [s1 + 0x730] = a1\n  3169: u64 [s1 + 0x728] = a0\n  3173: a0 = s1 + 0x740\n  3177: a1 = s1 + 0x720\n  3181: a2 = s1 + 0x700\n  3185: u64 [s1 + 0x720] = a3\n  3189: ra = 52, jump @228\n      : @71 [@dyn 26] (gas: 7)\n  3194: a4 = s1 + 0x700\n  3198: a0 = u64 [a4 + 0x40]\n  3201: a1 = u64 [a4 + 0x58]\n  3204: a2 = u64 [a4 + 0x48]\n  3207: a3 = u64 [a4 + 0x50]\n  3210: a4 = a0 + 0xa0\n  3214: t0 = 54, jump @243\n      : @72 [@dyn 27] (gas: 8)\n  3219: a3 = a1 + a0\n  3222: u64 [s1 + 0x6c0] = a4\n  3226: u64 [s1 + 0x6c8] = a5\n  3230: u64 [s1 + 0x6d0] = a2\n  3234: a0 = s1 + 0x6e0\n  3238: a1 = s1 + 0x6c0\n  3242: u64 [s1 + 0x6d8] = a3\n  3246: ra = 56, jump @210\n      : @73 [@dyn 28] (gas: 22)\n  3251: a0 = u64 [s1 + 0x6f0]\n  3255: u64 [s1 + 0xc0] = a0\n  3259: a0 = u64 [s1 + 0x6e8]\n  3263: u64 [s1 + 0xd0] = a0\n  3267: a0 = u64 [s1 + 0x6e0]\n  3271: u64 [s1 + 0xc8] = a0\n  3275: a2 = u64 [s1 + 0x198]\n  3279: u64 [s1 + 0x678] = a2\n  3283: a1 = u64 [s1 + 0x1a0]\n  3287: u64 [s1 + 0x670] = a1\n  3291: a0 = u64 [s1 + 0x1b0]\n  3295: u64 [s1 + 0x668] = a0\n  3299: a3 = u64 [s1 + 0x1b8]\n  3303: u64 [s1 + 0x660] = a3\n  3307: u64 [s1 + 0x698] = a2\n  3311: u64 [s1 + 0x690] = a1\n  3315: u64 [s1 + 0x688] = a0\n  3319: a0 = s1 + 0x6a0\n  3323: a1 = s1 + 0x680\n  3327: a2 = s1 + 0x660\n  3331: u64 [s1 + 0x680] = a3\n  3335: ra = 58, jump @228\n      : @74 [@dyn 29] (gas: 24)\n  3340: a0 = u64 [s1 + 0x6a0]\n  3344: t0 = u64 [s1 + 0x6b8]\n  3348: a2 = u64 [s1 + 0x6a8]\n  3352: a3 = u64 [s1 + 0x6b0]\n  3356: a4 = a0 + 0xc0\n  3360: a5 = a4 <u a0\n  3363: t1 = a2 + a5\n  3366: a1 = t1 <u a2\n  3369: a1 = a5 if a5 == 0\n  3372: a1 = a1 + a3\n  3375: a5 = a1 <u a3\n  3378: a5 = a5 + t0\n  3381: u64 [s1 + 0x5e0] = a4\n  3385: u64 [s1 + 0x618] = t0\n  3389: u64 [s1 + 0x610] = a3\n  3393: u64 [s1 + 0x608] = a2\n  3397: u64 [s1 + 0x600] = a0\n  3401: u64 [s1 + 0x5e8] = t1\n  3405: u64 [s1 + 0x5f0] = a1\n  3409: a0 = s1 + 0x620\n  3413: a1 = s1 + 0x600\n  3417: a2 = s1 + 0x5e0\n  3421: u64 [s1 + 0x5f8] = a5\n  3425: ra = 60, jump @196\n      : @75 [@dyn 30] (gas: 34)\n  3430: a1 = s1 + 0x600\n  3434: a0 = u64 [a1 + 0x38]\n  3437: u64 [s1 + 0xa0] = a0\n  3441: a0 = u64 [a1 + 0x30]\n  3444: u64 [s1 + 0xa8] = a0\n  3448: a0 = u64 [a1 + 0x28]\n  3451: u64 [s1 + 0xb0] = a0\n  3455: a0 = u64 [a1 + 0x20]\n  3458: u64 [s1 + 0xb8] = a0\n  3462: a0 = u64 [a1 + 0x58]\n  3465: u64 [s1 + 0x80] = a0\n  3469: a0 = u64 [a1 + 0x50]\n  3472: u64 [s1 + 0x88] = a0\n  3476: a0 = u64 [a1 + 0x48]\n  3479: u64 [s1 + 0x90] = a0\n  3483: a0 = u64 [a1 + 0x40]\n  3486: u64 [s1 + 0x98] = a0\n  3490: a4 = s1 + 0x100\n  3494: a2 = u64 [a4 + 0x98]\n  3498: u64 [s1 + 0x598] = a2\n  3502: a1 = u64 [a4 + 0xa0]\n  3506: u64 [s1 + 0x590] = a1\n  3510: a0 = u64 [a4 + 0xb0]\n  3514: u64 [s1 + 0x588] = a0\n  3518: a3 = u64 [a4 + 0xb8]\n  3522: u64 [s1 + 0x580] = a3\n  3526: u64 [s1 + 0x5b8] = a2\n  3530: u64 [s1 + 0x5b0] = a1\n  3534: u64 [s1 + 0x5a8] = a0\n  3538: a0 = s1 + 0x5c0\n  3542: a1 = s1 + 0x5a0\n  3546: a2 = s1 + 0x580\n  3550: u64 [s1 + 0x5a0] = a3\n  3554: ra = 62, jump @228\n      : @76 [@dyn 31] (gas: 24)\n  3559: a0 = u64 [s1 + 0x5c0]\n  3563: t0 = u64 [s1 + 0x5d8]\n  3567: a2 = u64 [s1 + 0x5c8]\n  3571: a3 = u64 [s1 + 0x5d0]\n  3575: a4 = a0 + 0xe0\n  3579: a5 = a4 <u a0\n  3582: t1 = a2 + a5\n  3585: a1 = t1 <u a2\n  3588: a1 = a5 if a5 == 0\n  3591: a1 = a1 + a3\n  3594: a5 = a1 <u a3\n  3597: a5 = a5 + t0\n  3600: u64 [s1 + 0x500] = a4\n  3604: u64 [s1 + 0x538] = t0\n  3608: u64 [s1 + 0x530] = a3\n  3612: u64 [s1 + 0x528] = a2\n  3616: u64 [s1 + 0x520] = a0\n  3620: u64 [s1 + 0x508] = t1\n  3624: u64 [s1 + 0x510] = a1\n  3628: a0 = s1 + 0x540\n  3632: a1 = s1 + 0x520\n  3636: a2 = s1 + 0x500\n  3640: u64 [s1 + 0x518] = a5\n  3644: ra = 64, jump @196\n      : @77 [@dyn 32] (gas: 20)\n  3649: a1 = s1 + 0x500\n  3653: a0 = u64 [a1 + 0x58]\n  3656: u64 [s1 + 0x60] = a0\n  3659: a0 = u64 [a1 + 0x50]\n  3662: u64 [s1 + 0x68] = a0\n  3665: a0 = u64 [a1 + 0x48]\n  3668: u64 [s1 + 0x70] = a0\n  3671: a0 = u64 [a1 + 0x40]\n  3674: u64 [s1 + 0x78] = a0\n  3677: a0 = u64 [a1 + 0x78]\n  3680: u64 [s1 + 0x40] = a0\n  3683: a0 = u64 [a1 + 0x70]\n  3686: u64 [s1 + 0x48] = a0\n  3689: a0 = u64 [a1 + 0x68]\n  3692: u64 [s1 + 0x50] = a0\n  3695: a0 = u64 [a1 + 0x60]\n  3698: u64 [s1 + 0x58] = a0\n  3701: a0 = s1 + 0x4e0\n  3705: a1 = 0x40\n  3708: ra = 66, jump @2\n      : @78 [@dyn 33] (gas: 13)\n  3713: a1 = s1 + 0x400\n  3717: a4 = u64 [a1 + 0xf8]\n  3721: a5 = u64 [a1 + 0xf0]\n  3725: a3 = u64 [a1 + 0xe8]\n  3729: a0 = u64 [a1 + 0xe0]\n  3733: a2 = a3 | a4\n  3736: a1 = a0 | a5\n  3739: a1 = a1 | a2\n  3742: a1 = a1 >> 0x20\n  3745: a2 = a2 | a5\n  3748: a2 = a2 << 0x20\n  3751: a1 = a1 | a2\n  3754: jump @80 if a1 == 0\n      : @79 (gas: 1)\n  3757: jump @174\n      : @80 (gas: 14)\n  3760: a1 = u64 [s1 + 0x138]\n  3764: u64 [s1 + 0x4c0] = a1\n  3768: a1 = u64 [s1 + 0x140]\n  3772: u64 [s1 + 0x4c8] = a1\n  3776: a1 = u64 [s1 + 0x148]\n  3780: u64 [s1 + 0x4d0] = a1\n  3784: a1 = s1 + 0x4c0\n  3788: a2 = u64 [s1 + 0x150]\n  3792: u64 [s1 + 0x4d8] = a2\n  3796: u64 [s1 + 0x1b8] = a0\n  3800: u64 [s1 + 0x1b0] = a3\n  3804: u64 [s1 + 0x1a0] = a4\n  3808: u64 [s1 + 0x198] = a5\n  3812: ra = 68, jump @4\n      : @81 [@dyn 34] (gas: 12)\n  3817: a5 = s1 + 0x100\n  3821: a1 = u64 [a5 + 0xb8]\n  3825: a0 = u64 [a5 + 0xa0]\n  3829: a2 = u64 [a5 + 0x98]\n  3833: a3 = a2 | a0\n  3836: a4 = 0x100000000\n  3846: a0 = 0xffffffe0\n  3856: a0 = a1 <u a0\n  3859: a2 = u64 [a5 + 0xb0]\n  3863: a0 = 0 if a2 != 0\n  3865: a0 = 0 if a3 != 0\n  3867: jump @83 if a0 != 0\n      : @82 (gas: 1)\n  3870: jump @174\n      : @83 (gas: 14)\n  3873: i32 a0 = a1 + 0x20\n  3876: a1 = u64 [s1 + 0x118]\n  3880: a5 = s1 + 0x400\n  3884: u64 [a5 + 0xa0] = a1\n  3888: a1 = u64 [s1 + 0x120]\n  3892: u64 [a5 + 0xa8] = a1\n  3896: a1 = u64 [s1 + 0x128]\n  3900: u64 [a5 + 0xb0] = a1\n  3904: a1 = s1 + 0x4a0\n  3908: a2 = u64 [s1 + 0x130]\n  3912: u64 [a5 + 0xb8] = a2\n  3916: u64 [s1 + 0x150] = a3\n  3920: u64 [s1 + 0x148] = a4\n  3924: ra = 70, jump @4\n      : @84 [@dyn 35] (gas: 10)\n  3929: a3 = s1 + 0x100\n  3933: a1 = u64 [a3 + 0xb8]\n  3937: a0 = u64 [a3 + 0x48]\n  3940: a0 = a0 + 0xffffffffffffffc0\n  3943: a0 = a1 <u a0\n  3946: a2 = u64 [a3 + 0xb0]\n  3950: a0 = 0 if a2 != 0\n  3952: a2 = u64 [a3 + 0x50]\n  3955: a0 = 0 if a2 != 0\n  3957: jump @86 if a0 != 0\n      : @85 (gas: 1)\n  3960: jump @174\n      : @86 (gas: 7)\n  3963: i32 a0 = a1 + 0x40\n  3966: u64 [s1 + 1176] = 0\n  3970: u64 [s1 + 1168] = 0\n  3974: u64 [s1 + 1152] = 0x120\n  3980: a1 = s1 + 0x480\n  3984: u64 [s1 + 1160] = 0\n  3988: ra = 72, jump @4\n      : @87 [@dyn 36] (gas: 3)\n  3993: a0 = u64 [s1 + 0x1b8]\n  3997: a0 = a0 + 0x120\n  4001: t0 = 74, jump @242\n      : @88 [@dyn 37] (gas: 31)\n  4006: a1 = u64 [s1 + 0x198]\n  4010: a3 = a3 + a1\n  4013: a4 = a3 <u a1\n  4016: a1 = u64 [s1 + 0x1a0]\n  4020: a4 = a4 + a1\n  4023: a5 = s1 + 0x400\n  4027: u64 [a5 + 0x8] = a2\n  4030: u64 [a5] = a0\n  4032: a0 = u64 [s1 + 0xd8]\n  4036: u64 [a5 + 0x38] = a0\n  4039: a0 = u64 [s1 + 0xe0]\n  4043: u64 [a5 + 0x30] = a0\n  4046: a0 = u64 [s1 + 0xe8]\n  4050: u64 [a5 + 0x28] = a0\n  4053: a0 = u64 [s1 + 0xf0]\n  4057: u64 [a5 + 0x20] = a0\n  4060: a0 = u64 [s1 + 0xf8]\n  4064: u64 [a5 + 0x58] = a0\n  4067: a0 = u64 [s1 + 0x100]\n  4071: u64 [a5 + 0x50] = a0\n  4074: a0 = u64 [s1 + 0x108]\n  4078: u64 [a5 + 0x48] = a0\n  4081: a0 = u64 [s1 + 0x110]\n  4085: u64 [a5 + 0x40] = a0\n  4088: u64 [a5 + 0x10] = a3\n  4091: a0 = s1 + 0x460\n  4095: a1 = s1 + 0x440\n  4099: a2 = s1 + 0x420\n  4103: a3 = s1 + 0x400\n  4107: u64 [a5 + 0x18] = a4\n  4110: ra = 76, jump @216\n      : @89 [@dyn 38] (gas: 10)\n  4115: a4 = s1 + 0x100\n  4119: a1 = u64 [a4 + 0xb8]\n  4123: a3 = 0x100000000\n  4133: a0 = 0xffffffa0\n  4143: a0 = a1 <u a0\n  4146: a2 = u64 [a4 + 0xb0]\n  4150: a0 = 0 if a2 != 0\n  4152: a2 = u64 [a4 + 0x50]\n  4155: a0 = 0 if a2 != 0\n  4157: jump @91 if a0 != 0\n      : @90 (gas: 1)\n  4160: jump @174\n      : @91 (gas: 23)\n  4163: a2 = s1 + 0x400\n  4167: a0 = u64 [a2 + 0x78]\n  4170: u64 [s1 + 0x130] = a0\n  4174: a0 = u64 [a2 + 0x70]\n  4177: u64 [s1 + 0x138] = a0\n  4181: a0 = u64 [a2 + 0x68]\n  4184: u64 [s1 + 0x140] = a0\n  4188: a0 = u64 [a2 + 0x60]\n  4191: u64 [s1 + 0x148] = a0\n  4195: a0 = u64 [s1 + 0xc0]\n  4199: a0 = a0 << 0x20\n  4202: a2 = a0 >> 0x20\n  4205: i32 a0 = a1 + 0x60\n  4208: u64 [s1 + 1016] = 0\n  4212: a1 = u64 [s1 + 0xc8]\n  4216: a4 = s1 + 0x300\n  4220: u64 [a4 + 0xe0] = a1\n  4224: a1 = u64 [s1 + 0xd0]\n  4228: u64 [a4 + 0xe8] = a1\n  4232: a1 = s1 + 0x3e0\n  4236: u64 [a4 + 0xf0] = a2\n  4240: u64 [s1 + 0x128] = a3\n  4244: ra = 78, jump @4\n      : @92 [@dyn 39] (gas: 10)\n  4249: a3 = s1 + 0x100\n  4253: a1 = u64 [a3 + 0xb0]\n  4257: a5 = u64 [a3 + 0xb8]\n  4261: a0 = u64 [a3 + 0x28]\n  4264: a0 = a0 + 0xffffffffffffff80\n  4267: a0 = a5 <u a0\n  4270: a0 = 0 if a1 != 0\n  4272: a2 = u64 [a3 + 0x50]\n  4275: a0 = 0 if a2 != 0\n  4277: jump @94 if a0 != 0\n      : @93 (gas: 1)\n  4280: jump @174\n      : @94 (gas: 29)\n  4283: a0 = u64 [s1 + 0x148]\n  4287: t0 = a0 <u a5\n  4290: t2 = a0\n  4292: a0 = u64 [s1 + 0x140]\n  4296: a3 = a0 ^ a1\n  4299: a2 = a0 <u a1\n  4302: ra = a0\n  4304: a2 = t0 if a3 == 0\n  4307: a3 = u64 [s1 + 0x198]\n  4311: a4 = u64 [s1 + 0x138]\n  4315: a0 = a4 - a3\n  4318: t1 = a4 <u a3\n  4321: a4 = u64 [s1 + 0x1a0]\n  4325: a3 = u64 [s1 + 0x130]\n  4329: a4 = a3 - a4\n  4332: a4 = a4 - t1\n  4335: a3 = a0 <u a2\n  4338: t1 = a4 - a3\n  4341: a4 = a0 - a2\n  4344: a2 = ra - a1\n  4347: a2 = a2 - t0\n  4350: a3 = t2 - a5\n  4353: i32 a0 = a5 + 0x80\n  4357: u64 [s1 + 0x3c0] = a3\n  4361: u64 [s1 + 0x3c8] = a2\n  4365: u64 [s1 + 0x3d0] = a4\n  4369: a1 = s1 + 0x3c0\n  4373: u64 [s1 + 0x3d8] = t1\n  4377: ra = 80, jump @4\n      : @95 [@dyn 40] (gas: 30)\n  4382: a0 = u64 [s1 + 0x130]\n  4386: a5 = s1 + 0x300\n  4390: u64 [a5 + 0x58] = a0\n  4393: a0 = u64 [s1 + 0x138]\n  4397: u64 [a5 + 0x50] = a0\n  4400: a0 = u64 [s1 + 0x140]\n  4404: u64 [a5 + 0x48] = a0\n  4407: a0 = u64 [s1 + 0x148]\n  4411: u64 [a5 + 0x40] = a0\n  4414: a0 = u64 [s1 + 0x80]\n  4418: u64 [a5 + 0x78] = a0\n  4421: a0 = u64 [s1 + 0x88]\n  4425: u64 [a5 + 0x70] = a0\n  4428: a0 = u64 [s1 + 0x90]\n  4432: u64 [a5 + 0x68] = a0\n  4435: a0 = u64 [s1 + 0x98]\n  4439: u64 [a5 + 0x60] = a0\n  4442: a0 = u64 [s1 + 0xa0]\n  4446: u64 [a5 + 0x98] = a0\n  4450: a0 = u64 [s1 + 0xa8]\n  4454: u64 [a5 + 0x90] = a0\n  4458: a0 = u64 [s1 + 0xb0]\n  4462: u64 [a5 + 0x88] = a0\n  4466: a0 = s1 + 0x3a0\n  4470: a1 = s1 + 0x380\n  4474: a2 = s1 + 0x360\n  4478: a3 = s1 + 0x340\n  4482: a4 = u64 [s1 + 0xb8]\n  4486: u64 [a5 + 0x80] = a4\n  4490: ra = 82, jump @216\n      : @96 [@dyn 41] (gas: 9)\n  4495: t0 = u64 [s1 + 0x1b0]\n  4499: a5 = u64 [s1 + 0x1b8]\n  4503: a2 = 0x100000000\n  4513: a0 = 0xffffff60\n  4523: a0 = a5 <u a0\n  4526: a0 = 0 if t0 != 0\n  4528: a1 = u64 [s1 + 0x150]\n  4532: a0 = 0 if a1 != 0\n  4534: jump @98 if a0 != 0\n      : @97 (gas: 1)\n  4537: jump @174\n      : @98 (gas: 35)\n  4540: a1 = u64 [s1 + 0x3a0]\n  4544: a3 = u64 [s1 + 0x3a8]\n  4548: ra = u64 [s1 + 0x3b8]\n  4552: u64 [s1 + 0x138] = ra\n  4556: a4 = u64 [s1 + 0x3b0]\n  4560: u64 [s1 + 0x140] = a4\n  4564: t2 = a1 <u a5\n  4567: t1 = a1\n  4569: u64 [s1 + 0x128] = a1\n  4573: a1 = a3 ^ t0\n  4576: u64 [s1 + 0x148] = a2\n  4580: a2 = a3 <u t0\n  4583: a0 = a3\n  4585: u64 [s1 + 0x130] = a3\n  4589: a2 = t2 if a1 == 0\n  4592: a3 = u64 [s1 + 0x198]\n  4596: a1 = a4 - a3\n  4599: a3 = a4 <u a3\n  4602: a4 = u64 [s1 + 0x1a0]\n  4606: a4 = ra - a4\n  4609: a4 = a4 - a3\n  4612: a3 = a1 <u a2\n  4615: a4 = a4 - a3\n  4618: a1 = a1 - a2\n  4621: a2 = a0 - t0\n  4624: a2 = a2 - t2\n  4627: a3 = t1 - a5\n  4630: i32 a0 = a5 + 0xa0\n  4634: a5 = s1 + 0x300\n  4638: u64 [a5 + 0x20] = a3\n  4641: u64 [a5 + 0x28] = a2\n  4644: u64 [a5 + 0x30] = a1\n  4647: a1 = s1 + 0x320\n  4651: u64 [a5 + 0x38] = a4\n  4654: ra = 84, jump @4\n      : @99 [@dyn 42] (gas: 30)\n  4659: a0 = u64 [s1 + 0x138]\n  4663: a5 = s1 + 0x200\n  4667: u64 [a5 + 0xb8] = a0\n  4671: a0 = u64 [s1 + 0x140]\n  4675: u64 [a5 + 0xb0] = a0\n  4679: a0 = u64 [s1 + 0x130]\n  4683: u64 [a5 + 0xa8] = a0\n  4687: a0 = u64 [s1 + 0x128]\n  4691: u64 [a5 + 0xa0] = a0\n  4695: a0 = u64 [s1 + 0x40]\n  4698: u64 [a5 + 0xd8] = a0\n  4702: a0 = u64 [s1 + 0x48]\n  4705: u64 [a5 + 0xd0] = a0\n  4709: a0 = u64 [s1 + 0x50]\n  4712: u64 [a5 + 0xc8] = a0\n  4716: a0 = u64 [s1 + 0x58]\n  4719: u64 [a5 + 0xc0] = a0\n  4723: a0 = u64 [s1 + 0x60]\n  4726: u64 [a5 + 0xf8] = a0\n  4730: a0 = u64 [s1 + 0x68]\n  4733: u64 [a5 + 0xf0] = a0\n  4737: a0 = u64 [s1 + 0x70]\n  4740: u64 [a5 + 0xe8] = a0\n  4744: a0 = s1 + 0x300\n  4748: a1 = s1 + 0x2e0\n  4752: a2 = s1 + 0x2c0\n  4756: a3 = s1 + 0x2a0\n  4760: a4 = u64 [s1 + 0x78]\n  4763: u64 [a5 + 0xe0] = a4\n  4767: ra = 86, jump @216\n      : @100 [@dyn 43] (gas: 10)\n  4772: a3 = s1 + 0x100\n  4776: a0 = u64 [a3 + 0x48]\n  4779: a0 = a0 + 0xffffffffffffffdc\n  4782: a2 = u64 [a3 + 0x78]\n  4785: a0 = a2 <u a0\n  4788: a1 = u64 [a3 + 0x68]\n  4791: a0 = 0 if a1 != 0\n  4793: a1 = u64 [a3 + 0x70]\n  4796: a0 = 0 if a1 != 0\n  4798: jump @174 if a0 == 0\n      : @101 (gas: 14)\n  4802: a1 = s1 + 0x300\n  4806: a0 = u64 [a1 + 0x18]\n  4809: u64 [s1 + 0x130] = a0\n  4813: a0 = u64 [a1 + 0x10]\n  4816: u64 [s1 + 0x128] = a0\n  4820: a0 = u64 [a1 + 0x8]\n  4823: u64 [s1 + 0x138] = a0\n  4827: a0 = u64 [a1]\n  4829: u64 [s1 + 0x140] = a0\n  4833: i32 a1 = a2 + 0x24\n  4836: a0 = s1 + 0x1000\n  4840: i32 a0 = a0 + 0x60\n  4843: ecalli 1 // 'call_data_load'\n  4845: fallthrough\n      : @102 (gas: 11)\n  4846: a0 = 0x100000000\n  4856: a2 = s1 + 0x100\n  4860: u64 [a2 + 0x48] = a0\n  4863: a0 = 0xffffff40\n  4873: a5 = u64 [a2 + 0xb8]\n  4877: a0 = a5 <u a0\n  4880: a1 = u64 [a2 + 0xb0]\n  4884: a0 = 0 if a1 != 0\n  4886: a1 = u64 [a2 + 0x50]\n  4889: a0 = 0 if a1 != 0\n  4891: jump @174 if a0 == 0\n      : @103 (gas: 14)\n  4895: a0 = s1 + 0x7ff\n  4899: a0 = a0 + 0x139\n  4903: a2 = u64 [a0 + 0x728]\n  4907: a1 = u64 [a0 + 0x730]\n  4911: a3 = u64 [a0 + 0x738]\n  4915: a4 = u64 [a0 + 0x740]\n  4919: i32 a0 = a5 + 0xc0\n  4923: a5 = s1 + 0x200\n  4927: u64 [a5 + 0x98] = a4\n  4931: u64 [a5 + 0x90] = a3\n  4935: u64 [a5 + 0x88] = a1\n  4939: a1 = s1 + 0x280\n  4943: u64 [a5 + 0x80] = a2\n  4947: ra = 88, jump @4\n      : @104 [@dyn 44] (gas: 10)\n  4952: a2 = s1 + 0x100\n  4956: a0 = u64 [a2 + 0x48]\n  4959: a0 = a0 + 0xffffffffffffffbc\n  4962: a1 = u64 [a2 + 0x78]\n  4965: a0 = a1 <u a0\n  4968: a1 = u64 [a2 + 0x68]\n  4971: a0 = 0 if a1 != 0\n  4973: a1 = u64 [a2 + 0x70]\n  4976: a0 = 0 if a1 != 0\n  4978: jump @174 if a0 == 0\n      : @105 (gas: 6)\n  4982: a0 = u64 [s1 + 0x178]\n  4986: i32 a1 = a0 + 0x44\n  4989: a0 = s1 + 0x1000\n  4993: i32 a0 = a0 + 0x80\n  4997: ecalli 1 // 'call_data_load'\n  4999: fallthrough\n      : @106 (gas: 11)\n  5000: a0 = 0x100000000\n  5010: a2 = s1 + 0x100\n  5014: u64 [a2 + 0x78] = a0\n  5017: a0 = 0xffffff20\n  5027: a1 = u64 [a2 + 0xb8]\n  5031: a0 = a1 <u a0\n  5034: a1 = u64 [a2 + 0xb0]\n  5038: a0 = 0 if a1 != 0\n  5040: a1 = u64 [a2 + 0x50]\n  5043: a0 = 0 if a1 != 0\n  5045: jump @174 if a0 == 0\n      : @107 (gas: 16)\n  5049: a0 = s1 + 0x7ff\n  5053: a0 = a0 + 0x139\n  5057: a5 = a0 + 0x700\n  5061: a2 = u64 [a5 + 0x48]\n  5064: a1 = u64 [a5 + 0x50]\n  5067: a3 = u64 [a5 + 0x58]\n  5070: a4 = u64 [a5 + 0x60]\n  5073: a0 = u64 [s1 + 0x1b8]\n  5077: i32 a0 = a0 + 0xe0\n  5081: a5 = s1 + 0x200\n  5085: u64 [a5 + 0x78] = a4\n  5088: u64 [a5 + 0x70] = a3\n  5091: u64 [a5 + 0x68] = a1\n  5094: a1 = s1 + 0x260\n  5098: u64 [a5 + 0x60] = a2\n  5101: ra = 90, jump @4\n      : @108 [@dyn 45] (gas: 4)\n  5106: a0 = s1 + 0x1000\n  5110: i32 a0 = a0 + 0xa0\n  5114: ecalli 6 // 'now'\n  5116: fallthrough\n      : @109 (gas: 10)\n  5117: a2 = s1 + 0x100\n  5121: a0 = u64 [a2 + 0x78]\n  5124: a0 = a0 + 0xffffffffffffff00\n  5128: a1 = u64 [a2 + 0xb8]\n  5132: a0 = a1 <u a0\n  5135: a1 = u64 [a2 + 0xb0]\n  5139: a0 = 0 if a1 != 0\n  5141: a1 = u64 [a2 + 0x50]\n  5144: a0 = 0 if a1 != 0\n  5146: jump @174 if a0 == 0\n      : @110 (gas: 16)\n  5150: a0 = s1 + 0x7ff\n  5154: a0 = a0 + 0x139\n  5158: a5 = a0 + 0x700\n  5162: a2 = u64 [a5 + 0x68]\n  5165: a1 = u64 [a5 + 0x70]\n  5168: a3 = u64 [a5 + 0x78]\n  5171: a4 = u64 [a5 + 0x80]\n  5175: a0 = u64 [s1 + 0x1b8]\n  5179: i32 a0 = a0 + 0x100\n  5183: a5 = s1 + 0x200\n  5187: u64 [a5 + 0x58] = a4\n  5190: u64 [a5 + 0x50] = a3\n  5193: u64 [a5 + 0x48] = a1\n  5196: a1 = s1 + 0x240\n  5200: u64 [a5 + 0x40] = a2\n  5203: ra = 92, jump @4\n      : @111 [@dyn 46] (gas: 3)\n  5208: a0 = u64 [s1 + 0x160]\n  5212: ecalli 3 // 'caller'\n  5214: fallthrough\n      : @112 (gas: 30)\n  5215: t0 = u64 [s1 + 0x140]\n  5219: ra = u64 [s1 + 0x1b8]\n  5223: t1 = t0 <u ra\n  5226: a5 = u64 [s1 + 0x1b0]\n  5230: a1 = u64 [s1 + 0x138]\n  5234: a3 = a1 ^ a5\n  5237: a2 = a1 <u a5\n  5240: a2 = t1 if a3 == 0\n  5243: a3 = u64 [s1 + 0x198]\n  5247: a4 = u64 [s1 + 0x128]\n  5251: a0 = a4 - a3\n  5254: t2 = a4 <u a3\n  5257: a4 = u64 [s1 + 0x1a0]\n  5261: a3 = u64 [s1 + 0x130]\n  5265: a4 = a3 - a4\n  5268: a4 = a4 - t2\n  5271: a3 = a0 <u a2\n  5274: a4 = a4 - a3\n  5277: a2 = a0 - a2\n  5280: a1 = a1 - a5\n  5283: a0 = a1 - t1\n  5286: a1 = t0 - ra\n  5289: a0 = a0 | a4\n  5292: a3 = a1 | a2\n  5295: a3 = a3 | a0\n  5298: a0 = a0 | a2\n  5301: a3 = a3 >> 0x20\n  5304: a0 = a0 << 0x20\n  5307: a0 = a0 | a3\n  5310: jump @174 if a0 != 0\n      : @113 (gas: 50)\n  5314: a3 = u64 [s1 + 0x1a8]\n  5318: a0 = u64 [a3 + 0x8]\n  5321: a2 = i32 [a3 + 0x10]\n  5324: a3 = u64 [a3]\n  5326: a4 = reverse a0\n  5328: a0 = a4 << 0x20\n  5331: a2 = reverse a2\n  5333: a2 = a2 >> 0x20\n  5336: t0 = a2 | a0\n  5339: a4 = a4 >> 0x20\n  5342: a3 = reverse a3\n  5344: a2 = a3 << 0x20\n  5347: t1 = a2 | a4\n  5350: a3 = a3 >> 0x20\n  5353: u64 [s1 + 472] = 0\n  5357: a0 = u64 [s1 + 0x20]\n  5360: u64 [s1 + 0x1f0] = a0\n  5364: a0 = u64 [s1 + 0x28]\n  5367: u64 [s1 + 0x1e8] = a0\n  5371: a0 = u64 [s1 + 0x30]\n  5374: u64 [s1 + 0x1e0] = a0\n  5378: a0 = u64 [s1 + 0x158]\n  5382: u64 [s1 + 0x210] = a0\n  5386: a0 = u64 [s1 + 0x180]\n  5390: u64 [s1 + 0x208] = a0\n  5394: a0 = u64 [s1 + 0x188]\n  5398: u64 [s1 + 0x200] = a0\n  5402: a4 = u64 [0x20020]\n  5407: a5 = u64 [0x20028]\n  5412: a0 = u64 [0x20030]\n  5417: a2 = u64 [0x20038]\n  5422: u64 [s1 + 0x238] = a4\n  5426: a4 = s1 + 0x200\n  5430: u64 [a4 + 0x30] = a5\n  5433: u64 [a4 + 0x28] = a0\n  5436: u64 [a4 + 0x20] = a2\n  5439: u64 [s1 + 0x1d0] = a3\n  5443: a0 = u64 [s1 + 0x38]\n  5446: u64 [s1 + 0x1f8] = a0\n  5450: a0 = u64 [s1 + 0x190]\n  5454: u64 [a4 + 0x18] = a0\n  5457: u64 [s1 + 0x1c8] = t1\n  5461: a2 = s1 + 0x220\n  5465: a3 = s1 + 0x200\n  5469: a4 = s1 + 0x1e0\n  5473: a5 = s1 + 0x1c0\n  5477: u64 [s1 + 0x1c0] = t0\n  5481: a0 = u64 [s1 + 0x1b8]\n  5485: ra = 0xa2\n  5489: jump @7\n      : @114 (gas: 9)\n  5492: a0 = s1 + 0x1138\n  5496: u64 [a0 + 128] = 0\n  5500: u64 [a0 + 120] = 0\n  5503: u64 [a0 + 112] = 0\n  5506: u64 [a0 + 104] = 0\n  5509: a0 = s1 + 0x1000\n  5513: i32 a0 = a0 + 0x1a0\n  5517: ecalli 10 // 'value_transferred'\n  5519: fallthrough\n      : @115 (gas: 9)\n  5520: a3 = s1 + 0x1138\n  5524: a0 = u64 [a3 + 0x78]\n  5527: a1 = u64 [a3 + 0x80]\n  5531: a2 = u64 [a3 + 0x70]\n  5534: a3 = u64 [a3 + 0x68]\n  5537: a1 = a1 | a2\n  5540: a0 = a0 | a3\n  5543: a0 = a0 | a1\n  5546: jump @175 if a0 != 0\n      : @116 (gas: 3)\n  5550: a0 = u64 [s1 + 0x1b0]\n  5554: a0 = i32 [a0]\n  5556: jump @175 if a0 <=u 3\n      : @117 (gas: 4)\n  5561: a0 = s1 + 0x7ff\n  5565: a0 = a0 + 0x741\n  5569: a1 = u64 [s1 + 0x1a8]\n  5573: ra = 94, jump @6\n      : @118 [@dyn 47] (gas: 14)\n  5578: a1 = s1 + 0x7ff\n  5582: a1 = a1 + 0x139\n  5586: a2 = a1 + 0x600\n  5590: a0 = u64 [a2 + 0x18]\n  5593: a1 = s1 + 0x100\n  5597: u64 [a1 + 0xa8] = a0\n  5601: a0 = u64 [a2 + 0x10]\n  5604: u64 [a1 + 0xb8] = a0\n  5608: a0 = u64 [a2 + 0x8]\n  5611: u64 [a1 + 0xb0] = a0\n  5615: a0 = s1 + 0x7ff\n  5619: a0 = a0 + 0x721\n  5623: a1 = 0x40\n  5626: ra = 96, jump @2\n      : @119 [@dyn 48] (gas: 15)\n  5631: a3 = s1 + 0x7ff\n  5635: a3 = a3 + 0x139\n  5639: a4 = u64 [a3 + 0x600]\n  5643: a5 = a3 + 0x500\n  5647: a1 = u64 [a5 + 0xf8]\n  5651: a2 = u64 [a5 + 0xf0]\n  5655: a0 = u64 [a5 + 0xe8]\n  5659: a4 = a4 | a2\n  5662: a2 = a0 | a1\n  5665: a2 = a2 | a4\n  5668: a2 = a2 >> 0x20\n  5671: a1 = a1 | a4\n  5674: a1 = a1 << 0x20\n  5677: a1 = a1 | a2\n  5680: jump @174 if a1 != 0\n      : @120 (gas: 14)\n  5684: a1 = u64 [s1 + 0x1a8]\n  5688: a1 = a1 << 0x20\n  5691: a2 = a1 >> 0x20\n  5694: u64 [a3 + 1504] = 0\n  5698: a1 = u64 [s1 + 0x1b0]\n  5702: a4 = a3 + 0x500\n  5706: u64 [a4 + 0xc8] = a1\n  5710: a1 = u64 [s1 + 0x1b8]\n  5714: u64 [a4 + 0xd0] = a1\n  5718: a1 = s1 + 0x7ff\n  5722: a1 = a1 + 0x701\n  5726: u64 [a4 + 0xd8] = a2\n  5730: u64 [s1 + 0x1b8] = a0\n  5734: ra = 98, jump @4\n      : @121 [@dyn 49] (gas: 3)\n  5739: a1 = 0x20\n  5742: a0 = u64 [s1 + 0x1b8]\n  5746: ra = 100, jump @10\n      : @122 [@dyn 50] (gas: 5)\n  5751: i32 a1 = a0 + 0\n  5753: a2 = 0x20\n  5756: a0 = 0\n  5758: ecalli 7 // 'seal_return'\n  5760: fallthrough\n      : @123 (gas: 1)\n  5761: jump @178 if a0 != 385331068\n      : @124 (gas: 8)\n  5769: u64 [a2 + 1952] = 0\n  5773: u64 [a2 + 1944] = 0\n  5777: u64 [a2 + 1936] = 0\n  5781: u64 [a2 + 1928] = 0\n  5785: a0 = s1 + 0x1000\n  5789: i32 a0 = a0 + 0xc0\n  5793: ecalli 10 // 'value_transferred'\n  5795: fallthrough\n      : @125 (gas: 11)\n  5796: a3 = s1 + 0x7ff\n  5800: a3 = a3 + 0x139\n  5804: a4 = a3 + 0x700\n  5808: a0 = u64 [a4 + 0x98]\n  5812: a1 = u64 [a4 + 0xa0]\n  5816: a2 = u64 [a4 + 0x90]\n  5820: a3 = u64 [a4 + 0x88]\n  5824: a1 = a1 | a2\n  5827: a0 = a0 | a3\n  5830: a0 = a0 | a1\n  5833: jump @175 if a0 != 0\n      : @126 (gas: 3)\n  5837: a0 = u64 [s1 + 0x1b0]\n  5841: a0 = i32 [a0]\n  5843: jump @175 if a0 <=u 35\n      : @127 (gas: 5)\n  5848: a0 = s1 + 0x1000\n  5852: i32 a0 = a0 + 0xe0\n  5856: a1 = 0x4\n  5859: ecalli 1 // 'call_data_load'\n  5861: fallthrough\n      : @128 (gas: 10)\n  5862: a2 = s1 + 0x7ff\n  5866: a2 = a2 + 0x139\n  5870: t1 = u64 [a2 + 0x7c0]\n  5874: t2 = u64 [a2 + 0x7b8]\n  5878: a5 = u64 [a2 + 0x7b0]\n  5882: a1 = t2 | t1\n  5885: a0 = a5 <u 0x1\n  5888: u64 [s1 + 0x178] = a1\n  5892: a0 = 0 if a1 != 0\n  5894: jump @176 if a0 == 0\n      : @129 (gas: 26)\n  5898: t0 = u64 [a2 + 0x7a8]\n  5902: a0 = u64 [s1 + 0x1b0]\n  5906: a1 = u32 [a0]\n  5908: a2 = a1 <u t0\n  5911: a3 = a5 >u 0\n  5913: a3 = a2 if a5 == 0\n  5916: a4 = -t2\n  5918: a0 = a4 - a3\n  5921: a3 = a4 <u a3\n  5924: a4 = t2 >u 0\n  5926: a4 = a4 + t1\n  5929: a4 = -a4\n  5931: a4 = a4 - a3\n  5934: a3 = -a5\n  5936: a3 = a3 - a2\n  5939: a1 = a1 - t0\n  5942: a1 = a1 <u 0x104\n  5946: a1 = a1 ^ 0x1\n  5949: a2 = a3 >u 0\n  5951: a2 = a1 if a3 == 0\n  5954: a1 = a4 >s 0\n  5956: a3 = a0 >u 0\n  5958: a3 = a1 if a4 != 0\n  5961: a0 = a0 | a4\n  5964: a2 = a3 if a0 != 0\n  5967: jump @175 if a2 == 0\n      : @130 (gas: 20)\n  5971: a0 = t0 + 0x4\n  5974: u64 [s1 + 0x198] = a0\n  5978: a0 = a0 <u t0\n  5981: a1 = a5 + a0\n  5984: u64 [s1 + 0x190] = a1\n  5988: a1 = a1 <u a5\n  5991: a1 = a0 if a0 == 0\n  5994: a1 = a1 + t2\n  5997: u64 [s1 + 0x188] = a1\n  6001: a0 = a1 <u t2\n  6004: a0 = a0 + t1\n  6007: u64 [s1 + 0x180] = a0\n  6011: a0 = s1 + 0x7ff\n  6015: a0 = a0 + 0x6e1\n  6019: a1 = u64 [s1 + 0x1a8]\n  6023: u64 [s1 + 0x1b8] = t0\n  6027: u64 [s1 + 0x1b0] = a5\n  6031: u64 [s1 + 0x1a8] = t1\n  6035: u64 [s1 + 0x1a0] = t2\n  6039: ra = 102, jump @6\n      : @131 [@dyn 51] (gas: 17)\n  6044: a0 = s1 + 0x7ff\n  6048: a0 = a0 + 0x139\n  6052: a1 = u64 [a0 + 0x5b0]\n  6056: u64 [s1 + 0x168] = a1\n  6060: a1 = u64 [a0 + 0x5a8]\n  6064: u64 [s1 + 0x160] = a1\n  6068: a0 = u32 [a0 + 0x5b8]\n  6072: u64 [s1 + 0x158] = a0\n  6076: a0 = 0x30060\n  6081: u64 [s1 + 0x170] = a0\n  6085: i32 a0 = a0 + 0\n  6087: u64 [s1 + 0x98] = a0\n  6091: ra = 0x68\n  6094: ecalli 3 // 'caller'\n  6096: a2 = u64 [s1 + 0x170]\n  6100: t0 = 0x6a\n  6103: jump @240\n      : @132 [@dyn 52] (gas: 2)\n  6106: a2 = u64 [s1 + 0x170]\n  6110: t0 = 106, jump @240\n      : @133 [@dyn 53] (gas: 18)\n  6115: a2 = u64 [s1 + 0x158]\n  6119: a1 = a1 ^ a2\n  6122: a2 = u64 [s1 + 0x160]\n  6126: a0 = a0 ^ a2\n  6129: a0 = a0 | a1\n  6132: a1 = u64 [s1 + 0x168]\n  6136: a1 = a1 ^ a3\n  6139: a0 = a0 | a1\n  6142: a0 = a0 <u 0x1\n  6145: a1 = s1 + 0x7ff\n  6149: a1 = a1 + 0x139\n  6153: u64 [a1 + 1440] = 0\n  6157: u64 [a1 + 1432] = 0\n  6161: u64 [a1 + 0x588] = a0\n  6165: a0 = s1 + 0x7ff\n  6169: a0 = a0 + 0x6c1\n  6173: u64 [a1 + 1424] = 0\n  6177: ra = 108, jump @182\n      : @134 [@dyn 54] (gas: 3)\n  6182: a0 = u64 [s1 + 0x1b8]\n  6186: a0 = a0 + 0x84\n  6190: t0 = 110, jump @239\n      : @135 [@dyn 55] (gas: 22)\n  6195: a4 = s1 + 0x7ff\n  6199: a4 = a4 + 0x139\n  6203: a5 = a4 + 0x500\n  6207: u64 [a5 + 0x20] = a1\n  6210: u64 [a5 + 0x18] = a3\n  6213: u64 [a5 + 0x10] = a2\n  6216: u64 [a5 + 0x8] = a0\n  6219: a0 = u64 [s1 + 0x180]\n  6223: u64 [a5 + 0x40] = a0\n  6226: a0 = u64 [s1 + 0x188]\n  6230: u64 [a5 + 0x38] = a0\n  6233: a0 = u64 [s1 + 0x190]\n  6237: u64 [a5 + 0x30] = a0\n  6240: a0 = s1 + 0x7ff\n  6244: a0 = a0 + 0x681\n  6248: a1 = s1 + 0x7ff\n  6252: a1 = a1 + 0x661\n  6256: a2 = s1 + 0x7ff\n  6260: a2 = a2 + 0x641\n  6264: a3 = u64 [s1 + 0x198]\n  6268: u64 [a5 + 0x28] = a3\n  6271: ra = 112, jump @196\n      : @136 [@dyn 56] (gas: 43)\n  6276: a5 = s1 + 0x7ff\n  6280: a5 = a5 + 0x139\n  6284: a4 = a5 + 0x500\n  6288: a0 = u64 [a4 + 0x60]\n  6291: u64 [s1 + 0x150] = a0\n  6295: a0 = u64 [a4 + 0x58]\n  6298: u64 [s1 + 0x158] = a0\n  6302: a0 = u64 [a4 + 0x50]\n  6305: u64 [s1 + 0x160] = a0\n  6309: a0 = u64 [a4 + 0x48]\n  6312: u64 [s1 + 0x168] = a0\n  6316: a0 = u64 [a4 + 0x80]\n  6320: u64 [s1 + 0x140] = a0\n  6324: a0 = u64 [a4 + 0x78]\n  6327: u64 [s1 + 0x148] = a0\n  6331: a0 = u64 [s1 + 0x1b8]\n  6335: a2 = a0 + 0xa4\n  6339: a0 = u64 [s1 + 0x1b8]\n  6343: a0 = a2 <u a0\n  6346: a1 = u64 [s1 + 0x1b0]\n  6350: a1 = a1 + a0\n  6353: a3 = u64 [s1 + 0x1b0]\n  6357: a3 = a1 <u a3\n  6360: a3 = a0 if a0 == 0\n  6363: a0 = u64 [a4 + 0x70]\n  6366: u64 [s1 + 0x130] = a0\n  6370: a0 = u64 [a4 + 0x68]\n  6373: u64 [s1 + 0x138] = a0\n  6377: a0 = u64 [s1 + 0x1a0]\n  6381: a3 = a3 + a0\n  6384: a0 = a3 <u a0\n  6387: a4 = u64 [s1 + 0x1a8]\n  6391: a0 = a0 + a4\n  6394: a4 = a5 + 0x400\n  6398: u64 [a4 + 0xe0] = a0\n  6402: u64 [a4 + 0xd8] = a3\n  6406: u64 [a4 + 0xd0] = a1\n  6410: a0 = s1 + 0x7ff\n  6414: a0 = a0 + 0x621\n  6418: a1 = s1 + 0x7ff\n  6422: a1 = a1 + 0x601\n  6426: u64 [a4 + 0xc8] = a2\n  6430: ra = 114, jump @210\n      : @137 [@dyn 57] (gas: 11)\n  6435: a5 = s1 + 0x7ff\n  6439: a5 = a5 + 0x139\n  6443: a0 = u64 [a5 + 0x4f8]\n  6447: u64 [s1 + 0x118] = a0\n  6451: a0 = u64 [a5 + 0x4f0]\n  6455: u64 [s1 + 0x128] = a0\n  6459: a0 = u64 [a5 + 0x4e8]\n  6463: u64 [s1 + 0x120] = a0\n  6467: a0 = u64 [s1 + 0x1b8]\n  6471: a0 = a0 + 0xc4\n  6475: t0 = 116, jump @239\n      : @138 [@dyn 58] (gas: 20)\n  6480: a4 = a5 + 0x400\n  6484: u64 [a4 + 0x60] = a1\n  6487: u64 [a4 + 0x58] = a3\n  6490: u64 [a4 + 0x50] = a2\n  6493: u64 [a4 + 0x48] = a0\n  6496: a0 = u64 [s1 + 0x180]\n  6500: u64 [a4 + 0x80] = a0\n  6504: a0 = u64 [s1 + 0x188]\n  6508: u64 [a4 + 0x78] = a0\n  6511: a0 = u64 [s1 + 0x190]\n  6515: u64 [a4 + 0x70] = a0\n  6518: a0 = s1 + 0x7ff\n  6522: a0 = a0 + 0x5c1\n  6526: a1 = s1 + 0x7ff\n  6530: a1 = a1 + 0x5a1\n  6534: a2 = s1 + 0x7ff\n  6538: a2 = a2 + 0x581\n  6542: a3 = u64 [s1 + 0x198]\n  6546: u64 [a4 + 0x68] = a3\n  6549: ra = 118, jump @196\n      : @139 [@dyn 59] (gas: 13)\n  6554: a4 = s1 + 0x7ff\n  6558: a4 = a4 + 0x139\n  6562: a0 = u64 [a4 + 0x4a0]\n  6566: u64 [s1 + 0xf8] = a0\n  6570: a0 = u64 [a4 + 0x498]\n  6574: u64 [s1 + 0x100] = a0\n  6578: a0 = u64 [a4 + 0x490]\n  6582: u64 [s1 + 0x108] = a0\n  6586: a0 = u64 [a4 + 0x488]\n  6590: u64 [s1 + 0x110] = a0\n  6594: a0 = u64 [s1 + 0x1b8]\n  6598: a0 = a0 + 0xe4\n  6602: t0 = 120, jump @242\n      : @140 [@dyn 60] (gas: 33)\n  6607: a1 = u64 [a4 + 0x4c0]\n  6611: u64 [s1 + 0xd8] = a1\n  6615: a1 = u64 [a4 + 0x4b8]\n  6619: u64 [s1 + 0xe0] = a1\n  6623: a1 = u64 [a4 + 0x4b0]\n  6627: u64 [s1 + 0xe8] = a1\n  6631: a1 = u64 [a4 + 0x4a8]\n  6635: u64 [s1 + 0xf0] = a1\n  6639: a1 = u64 [s1 + 0x1a0]\n  6643: a3 = a3 + a1\n  6646: a1 = a3 <u a1\n  6649: a5 = u64 [s1 + 0x1a8]\n  6653: a1 = a1 + a5\n  6656: a5 = a4 + 0x300\n  6660: u64 [a5 + 0xe0] = a1\n  6664: u64 [a5 + 0xd8] = a3\n  6668: u64 [a5 + 0xd0] = a2\n  6672: u64 [a5 + 0xc8] = a0\n  6676: a0 = u64 [s1 + 0x180]\n  6680: u64 [a4 + 0x400] = a0\n  6684: a0 = u64 [s1 + 0x188]\n  6688: u64 [a5 + 0xf8] = a0\n  6692: a0 = u64 [s1 + 0x190]\n  6696: u64 [a5 + 0xf0] = a0\n  6700: a0 = s1 + 0x7ff\n  6704: a0 = a0 + 0x541\n  6708: a1 = s1 + 0x7ff\n  6712: a1 = a1 + 0x521\n  6716: a2 = s1 + 0x7ff\n  6720: a2 = a2 + 0x501\n  6724: a3 = u64 [s1 + 0x198]\n  6728: u64 [a5 + 0xe8] = a3\n  6732: ra = 122, jump @196\n      : @141 [@dyn 61] (gas: 23)\n  6737: a1 = s1 + 0x7ff\n  6741: a1 = a1 + 0x139\n  6745: a2 = a1 + 0x400\n  6749: a0 = u64 [a2 + 0x20]\n  6752: u64 [s1 + 0xc0] = a0\n  6756: a0 = u64 [a2 + 0x18]\n  6759: u64 [s1 + 0xc8] = a0\n  6763: a0 = u64 [a2 + 0x10]\n  6766: u64 [s1 + 0xd0] = a0\n  6770: a0 = u64 [a2 + 0x8]\n  6773: u64 [s1 + 0x180] = a0\n  6777: a0 = u64 [a2 + 0x40]\n  6780: u64 [s1 + 0xa0] = a0\n  6784: a0 = u64 [a2 + 0x38]\n  6787: u64 [s1 + 0xa8] = a0\n  6791: a0 = u64 [a2 + 0x30]\n  6794: u64 [s1 + 0xb0] = a0\n  6798: a0 = u64 [a2 + 0x28]\n  6801: u64 [s1 + 0xb8] = a0\n  6805: a0 = s1 + 0x7ff\n  6809: a0 = a0 + 0x4e1\n  6813: a1 = 0x40\n  6816: ra = 124, jump @2\n      : @142 [@dyn 62] (gas: 9)\n  6821: a3 = s1 + 0x100\n  6825: a2 = u64 [a3 + 0xb8]\n  6829: a0 = 0xffffffdc\n  6839: a0 = a2 <u a0\n  6842: a1 = u64 [a3 + 0xb0]\n  6846: a0 = 0 if a1 != 0\n  6848: a1 = u64 [a3 + 0x78]\n  6851: a0 = 0 if a1 != 0\n  6853: jump @174 if a0 == 0\n      : @143 (gas: 16)\n  6857: a0 = s1 + 0x7ff\n  6861: a0 = a0 + 0x139\n  6865: a3 = a0 + 0x300\n  6869: a1 = u64 [a3 + 0xc0]\n  6873: u64 [s1 + 0x190] = a1\n  6877: a1 = u64 [a3 + 0xb8]\n  6881: u64 [s1 + 0x188] = a1\n  6885: a1 = u64 [a3 + 0xb0]\n  6889: u64 [s1 + 0x1a0] = a1\n  6893: a0 = u64 [a3 + 0xa8]\n  6897: u64 [s1 + 0x1a8] = a0\n  6901: i32 a1 = a2 + 0x24\n  6904: a0 = s1 + 0x1000\n  6908: i32 a0 = a0 + 0x100\n  6912: ecalli 1 // 'call_data_load'\n  6914: fallthrough\n      : @144 (gas: 13)\n  6915: a4 = s1 + 0x100\n  6919: a2 = u64 [a4 + 0x90]\n  6923: a3 = u64 [a4 + 0x88]\n  6927: a0 = u64 [a4 + 0xa8]\n  6931: a0 = a0 | a3\n  6934: a1 = u64 [a4 + 0xa0]\n  6938: a1 = a1 | a2\n  6941: a0 = a0 | a1\n  6944: a0 = a0 >> 0x20\n  6947: a1 = a1 | a3\n  6950: a1 = a1 << 0x20\n  6953: a0 = a0 | a1\n  6956: jump @174 if a0 != 0\n      : @145 (gas: 16)\n  6960: a4 = s1 + 0x7ff\n  6964: a4 = a4 + 0x139\n  6968: a5 = a4 + 0x700\n  6972: a0 = u64 [a5 + 0xc8]\n  6976: a1 = u64 [a5 + 0xd0]\n  6980: a2 = u64 [a5 + 0xd8]\n  6984: a3 = u64 [a5 + 0xe0]\n  6988: a5 = a4 + 0x300\n  6992: u64 [a5 + 0xa0] = a3\n  6996: u64 [a5 + 0x98] = a2\n  7000: u64 [a5 + 0x90] = a1\n  7004: a1 = s1 + 0x7ff\n  7008: a1 = a1 + 0x4c1\n  7012: u64 [a5 + 0x88] = a0\n  7016: a0 = u64 [s1 + 0x1a8]\n  7020: ra = 126, jump @4\n      : @146 [@dyn 63] (gas: 10)\n  7025: a3 = 0x100000000\n  7035: a0 = 0xffffffbc\n  7045: a4 = s1 + 0x100\n  7049: a2 = u64 [a4 + 0xb8]\n  7053: a0 = a2 <u a0\n  7056: a1 = u64 [a4 + 0xb0]\n  7060: a0 = 0 if a1 != 0\n  7062: a1 = u64 [a4 + 0x78]\n  7065: a0 = 0 if a1 != 0\n  7067: jump @174 if a0 == 0\n      : @147 (gas: 6)\n  7071: i32 a1 = a2 + 0x44\n  7074: a0 = s1 + 0x1000\n  7078: i32 a0 = a0 + 0x120\n  7082: u64 [s1 + 0x90] = a3\n  7086: ecalli 1 // 'call_data_load'\n  7088: fallthrough\n      : @148 (gas: 12)\n  7089: a3 = s1 + 0x100\n  7093: a0 = u64 [a3 + 0x90]\n  7097: a1 = u64 [a3 + 0x88]\n  7101: a2 = a1 | a0\n  7104: a0 = u64 [s1 + 0x90]\n  7108: a0 = a0 + 0xffffffffffffffe0\n  7111: a1 = u64 [a3 + 0xa8]\n  7115: a0 = a1 <u a0\n  7118: a1 = u64 [a3 + 0xa0]\n  7122: a0 = 0 if a1 != 0\n  7124: a0 = 0 if a2 != 0\n  7126: jump @174 if a0 == 0\n      : @149 (gas: 18)\n  7130: a5 = s1 + 0x7ff\n  7134: a5 = a5 + 0x139\n  7138: u64 [s1 + 0x88] = a2\n  7142: t0 = u64 [a5 + 0x7e8]\n  7146: a1 = u64 [a5 + 0x7f0]\n  7150: a3 = u64 [a5 + 0x7f8]\n  7154: a0 = s1 + 0x1138\n  7158: a4 = u64 [a0]\n  7160: a0 = u64 [s1 + 0x1a8]\n  7164: i32 a0 = a0 + 0x20\n  7167: a2 = a5 + 0x300\n  7171: u64 [a2 + 0x80] = a4\n  7175: u64 [a2 + 0x78] = a3\n  7178: u64 [a2 + 0x70] = a1\n  7181: a1 = s1 + 0x7ff\n  7185: a1 = a1 + 0x4a1\n  7189: u64 [a5 + 0x368] = t0\n  7193: ra = 128, jump @4\n      : @150 [@dyn 64] (gas: 3)\n  7199: a2 = 0x100000000\n  7209: a0 = 0xffffffc0\n  7219: t0 = 130, jump @238\n      : @151 [@dyn 65] (gas: 1)\n  7225: jump @174 if a0 == 0\n      : @152 (gas: 12)\n  7229: a0 = u64 [s1 + 0x1a8]\n  7233: i32 a0 = a0 + 0x40\n  7236: a3 = s1 + 0x7ff\n  7240: a3 = a3 + 0x139\n  7244: u64 [a3 + 864] = 0\n  7248: u64 [a3 + 856] = 0\n  7252: u64 [a3 + 840] = 0xe0\n  7258: a1 = s1 + 0x7ff\n  7262: a1 = a1 + 0x481\n  7266: u64 [a3 + 848] = 0\n  7270: u64 [s1 + 0x90] = a2\n  7274: ra = 132, jump @4\n      : @153 [@dyn 66] (gas: 29)\n  7280: a1 = u64 [s1 + 0x1a8]\n  7284: a0 = a1 + 0xe0\n  7288: a1 = a0 <u a1\n  7291: a2 = u64 [s1 + 0x1a0]\n  7295: a2 = a2 + a1\n  7298: a3 = u64 [s1 + 0x1a0]\n  7302: a3 = a2 <u a3\n  7305: a3 = a1 if a1 == 0\n  7308: a1 = u64 [s1 + 0x188]\n  7312: a3 = a3 + a1\n  7315: a4 = a3 <u a1\n  7318: a1 = u64 [s1 + 0x190]\n  7322: a4 = a4 + a1\n  7325: a1 = s1 + 0x7ff\n  7329: a1 = a1 + 0x139\n  7333: a5 = a1 + 0x200\n  7337: u64 [a5 + 0xd0] = a2\n  7341: u64 [a5 + 0xc8] = a0\n  7345: a0 = u64 [s1 + 0x140]\n  7349: a2 = a1 + 0x300\n  7353: u64 [a2] = a0\n  7355: a0 = u64 [s1 + 0x148]\n  7359: u64 [a5 + 0xf8] = a0\n  7363: a0 = u64 [s1 + 0x130]\n  7367: u64 [a5 + 0xf0] = a0\n  7371: a0 = u64 [s1 + 0x138]\n  7375: u64 [a5 + 0xe8] = a0\n  7379: a0 = u64 [s1 + 0x150]\n  7383: t0 = 134, jump @244\n      : @154 [@dyn 67] (gas: 12)\n  7389: u64 [a5 + 0xd8] = a3\n  7393: a5 = a1\n  7395: a0 = s1 + 0x7ff\n  7399: a0 = a0 + 0x461\n  7403: a1 = s1 + 0x7ff\n  7407: a1 = a1 + 0x441\n  7411: a2 = s1 + 0x7ff\n  7415: a2 = a2 + 0x421\n  7419: a3 = s1 + 0x7ff\n  7423: a3 = a3 + 0x401\n  7427: u64 [a5 + 0x2e0] = a4\n  7431: ra = 136, jump @216\n      : @155 [@dyn 68] (gas: 3)\n  7437: a0 = u64 [s1 + 0x90]\n  7441: a0 = a0 + 0xffffffffffffffa0\n  7444: t0 = 138, jump @238\n      : @156 [@dyn 69] (gas: 1)\n  7450: jump @174 if a0 == 0\n      : @157 (gas: 26)\n  7454: a3 = s1 + 0x7ff\n  7458: a3 = a3 + 0x139\n  7462: a1 = a3 + 0x300\n  7466: a0 = u64 [a1 + 0x40]\n  7469: u64 [s1 + 0x150] = a0\n  7473: a0 = u64 [a1 + 0x38]\n  7476: u64 [s1 + 0x158] = a0\n  7480: a0 = u64 [a1 + 0x30]\n  7483: u64 [s1 + 0x160] = a0\n  7487: a0 = u64 [a1 + 0x28]\n  7490: u64 [s1 + 0x168] = a0\n  7494: a0 = u64 [s1 + 0x118]\n  7498: a0 = a0 << 0x20\n  7501: a2 = a0 >> 0x20\n  7504: a0 = u64 [s1 + 0x1a8]\n  7508: i32 a0 = a0 + 0x60\n  7511: u64 [a3 + 704] = 0\n  7515: a1 = u64 [s1 + 0x120]\n  7519: a4 = a3 + 0x200\n  7523: u64 [a4 + 0xa8] = a1\n  7527: a1 = u64 [s1 + 0x128]\n  7531: u64 [a4 + 0xb0] = a1\n  7535: a1 = s1 + 0x7ff\n  7539: a1 = a1 + 0x3e1\n  7543: u64 [a4 + 0xb8] = a2\n  7547: ra = 140, jump @4\n      : @158 [@dyn 70] (gas: 3)\n  7553: a2 = 0x100000000\n  7563: a0 = 0xffffff80\n  7573: t0 = 142, jump @238\n      : @159 [@dyn 71] (gas: 1)\n  7579: jump @174 if a0 == 0\n      : @160 (gas: 38)\n  7583: a5 = u64 [s1 + 0x1a8]\n  7587: a1 = u64 [s1 + 0x168]\n  7591: t1 = a1 <u a5\n  7594: t0 = a1\n  7596: a1 = u64 [s1 + 0x1a0]\n  7600: a3 = u64 [s1 + 0x160]\n  7604: a1 = a1 ^ a3\n  7607: u64 [s1 + 0x148] = a2\n  7611: a2 = u64 [s1 + 0x1a0]\n  7615: a2 = a3 <u a2\n  7618: a0 = a3\n  7620: a2 = t1 if a1 == 0\n  7623: a3 = u64 [s1 + 0x188]\n  7627: a4 = u64 [s1 + 0x158]\n  7631: a1 = a4 - a3\n  7634: t2 = a4 <u a3\n  7637: a4 = u64 [s1 + 0x190]\n  7641: a3 = u64 [s1 + 0x150]\n  7645: a4 = a3 - a4\n  7648: a4 = a4 - t2\n  7651: a3 = a1 <u a2\n  7654: a4 = a4 - a3\n  7657: a1 = a1 - a2\n  7660: a2 = u64 [s1 + 0x1a0]\n  7664: a2 = a0 - a2\n  7667: a2 = a2 - t1\n  7670: a3 = t0 - a5\n  7673: i32 a0 = a5 + 0x80\n  7677: a5 = s1 + 0x7ff\n  7681: a5 = a5 + 0x139\n  7685: u64 [a5 + 0x288] = a3\n  7689: a3 = a5 + 0x200\n  7693: u64 [a3 + 0x90] = a2\n  7697: u64 [a3 + 0x98] = a1\n  7701: a1 = s1 + 0x7ff\n  7705: a1 = a1 + 0x3c1\n  7709: u64 [a3 + 0xa0] = a4\n  7713: ra = 144, jump @4\n      : @161 [@dyn 72] (gas: 5)\n  7719: a1 = s1 + 0x7ff\n  7723: a1 = a1 + 0x139\n  7727: a0 = u64 [s1 + 0x150]\n  7731: a2 = a1 + 0x200\n  7735: t0 = 146, jump @244\n      : @162 [@dyn 73] (gas: 26)\n  7741: a0 = u64 [s1 + 0xd8]\n  7745: u64 [a2 + 0x40] = a0\n  7748: a0 = u64 [s1 + 0xe0]\n  7752: u64 [a2 + 0x38] = a0\n  7755: a0 = u64 [s1 + 0xe8]\n  7759: u64 [a2 + 0x30] = a0\n  7762: a0 = u64 [s1 + 0xf0]\n  7766: u64 [a2 + 0x28] = a0\n  7769: a0 = u64 [s1 + 0xf8]\n  7773: u64 [a2 + 0x60] = a0\n  7776: a0 = u64 [s1 + 0x100]\n  7780: u64 [a2 + 0x58] = a0\n  7783: a0 = u64 [s1 + 0x108]\n  7787: u64 [a2 + 0x50] = a0\n  7790: a5 = a1\n  7792: a0 = s1 + 0x7ff\n  7796: a0 = a0 + 0x3a1\n  7800: a1 = s1 + 0x7ff\n  7804: a1 = a1 + 0x381\n  7808: a2 = s1 + 0x7ff\n  7812: a2 = a2 + 0x361\n  7816: a3 = s1 + 0x7ff\n  7820: a3 = a3 + 0x341\n  7824: a4 = u64 [s1 + 0x110]\n  7828: u64 [a5 + 0x248] = a4\n  7832: ra = 148, jump @216\n      : @163 [@dyn 74] (gas: 10)\n  7838: a2 = u64 [s1 + 0x88]\n  7842: a3 = s1 + 0x100\n  7846: a0 = u64 [a3 + 0x48]\n  7849: a0 = a0 + 0xffffffffffffff60\n  7853: a1 = u64 [a3 + 0xa8]\n  7857: a0 = a1 <u a0\n  7860: a1 = u64 [a3 + 0xa0]\n  7864: a0 = 0 if a1 != 0\n  7866: a0 = 0 if a2 != 0\n  7868: jump @174 if a0 == 0\n      : @164 (gas: 43)\n  7872: a0 = s1 + 0x7ff\n  7876: a0 = a0 + 0x139\n  7880: a2 = a0 + 0x200\n  7884: a1 = u64 [a2 + 0x68]\n  7887: a3 = u64 [a2 + 0x70]\n  7890: t1 = u64 [a0 + 0x280]\n  7894: u64 [s1 + 0x160] = t1\n  7898: a4 = u64 [a2 + 0x78]\n  7901: u64 [s1 + 0x168] = a4\n  7905: t2 = a0\n  7907: a5 = u64 [s1 + 0x1a8]\n  7911: ra = a1 <u a5\n  7914: t0 = a1\n  7916: u64 [s1 + 0x150] = a1\n  7920: a1 = u64 [s1 + 0x1a0]\n  7924: a1 = a1 ^ a3\n  7927: a2 = u64 [s1 + 0x1a0]\n  7931: a2 = a3 <u a2\n  7934: a0 = a3\n  7936: u64 [s1 + 0x158] = a3\n  7940: a2 = ra if a1 == 0\n  7943: a3 = u64 [s1 + 0x188]\n  7947: a1 = a4 - a3\n  7950: a3 = a4 <u a3\n  7953: a4 = u64 [s1 + 0x190]\n  7957: a4 = t1 - a4\n  7960: a4 = a4 - a3\n  7963: a3 = a1 <u a2\n  7966: a4 = a4 - a3\n  7969: a1 = a1 - a2\n  7972: a2 = u64 [s1 + 0x1a0]\n  7976: a2 = a0 - a2\n  7979: a2 = a2 - ra\n  7982: a3 = t0 - a5\n  7985: i32 a0 = a5 + 0xa0\n  7989: a5 = t2 + 0x100\n  7993: u64 [a5 + 0xe8] = a3\n  7997: u64 [a5 + 0xf0] = a2\n  8001: u64 [a5 + 0xf8] = a1\n  8005: a1 = s1 + 0x7ff\n  8009: a1 = a1 + 0x321\n  8013: u64 [t2 + 0x200] = a4\n  8017: ra = 150, jump @4\n      : @165 [@dyn 75] (gas: 37)\n  8023: a1 = s1 + 0x7ff\n  8027: a1 = a1 + 0x139\n  8031: a0 = u64 [s1 + 0x160]\n  8035: a2 = a1 + 0x100\n  8039: u64 [a2 + 0x80] = a0\n  8043: a0 = u64 [s1 + 0x168]\n  8047: u64 [a2 + 0x78] = a0\n  8050: a0 = u64 [s1 + 0x158]\n  8054: u64 [a2 + 0x70] = a0\n  8057: a0 = u64 [s1 + 0x150]\n  8061: u64 [a2 + 0x68] = a0\n  8064: a0 = u64 [s1 + 0xa0]\n  8068: u64 [a2 + 0xa0] = a0\n  8072: a0 = u64 [s1 + 0xa8]\n  8076: u64 [a2 + 0x98] = a0\n  8080: a0 = u64 [s1 + 0xb0]\n  8084: u64 [a2 + 0x90] = a0\n  8088: a0 = u64 [s1 + 0xb8]\n  8092: u64 [a2 + 0x88] = a0\n  8096: a0 = u64 [s1 + 0xc0]\n  8100: u64 [a2 + 0xc0] = a0\n  8104: a0 = u64 [s1 + 0xc8]\n  8108: u64 [a2 + 0xb8] = a0\n  8112: a0 = u64 [s1 + 0xd0]\n  8116: u64 [a2 + 0xb0] = a0\n  8120: a5 = a1\n  8122: a0 = s1 + 0x7ff\n  8126: a0 = a0 + 0x301\n  8130: a1 = s1 + 0x7ff\n  8134: a1 = a1 + 0x2e1\n  8138: a2 = s1 + 0x7ff\n  8142: a2 = a2 + 0x2c1\n  8146: a3 = s1 + 0x7ff\n  8150: a3 = a3 + 0x2a1\n  8154: a4 = u64 [s1 + 0x180]\n  8158: u64 [a5 + 0x1a8] = a4\n  8162: ra = 152, jump @216\n      : @166 [@dyn 76] (gas: 16)\n  8168: a1 = s1 + 0x7ff\n  8172: a1 = a1 + 0x139\n  8176: a2 = a1 + 0x100\n  8180: a0 = u64 [a2 + 0xe0]\n  8184: u64 [s1 + 0x160] = a0\n  8188: a0 = u64 [a2 + 0xd8]\n  8192: u64 [s1 + 0x158] = a0\n  8196: a0 = u64 [a2 + 0xd0]\n  8200: u64 [s1 + 0x168] = a0\n  8204: a0 = u64 [a2 + 0xc8]\n  8208: u64 [s1 + 0x180] = a0\n  8212: a0 = s1 + 0x1000\n  8216: i32 a0 = a0 + 0x140\n  8220: ra = 0x9a\n  8224: ecalli 6 // 'now'\n  8226: fallthrough\n      : @167 [@dyn 77] (gas: 3)\n  8227: a2 = 0x100000000\n  8237: a0 = 0xffffff40\n  8247: t0 = 156, jump @238\n      : @168 [@dyn 78] (gas: 1)\n  8253: jump @174 if a0 == 0\n      : @169 (gas: 18)\n  8257: a0 = s1 + 0x1138\n  8261: u64 [s1 + 0x150] = a2\n  8265: a2 = u64 [a0 + 0x8]\n  8268: a1 = u64 [a0 + 0x10]\n  8271: a3 = u64 [a0 + 0x18]\n  8274: a4 = u64 [a0 + 0x20]\n  8277: a0 = u64 [s1 + 0x1a8]\n  8281: i32 a0 = a0 + 0xc0\n  8285: a5 = s1 + 0x7ff\n  8289: a5 = a5 + 0x139\n  8293: u64 [a5 + 0x160] = a4\n  8297: a4 = a5 + 0x100\n  8301: u64 [a4 + 0x58] = a3\n  8304: u64 [a4 + 0x50] = a1\n  8307: a1 = s1 + 0x7ff\n  8311: a1 = a1 + 0x281\n  8315: u64 [a4 + 0x48] = a2\n  8318: ra = 158, jump @4\n      : @170 [@dyn 79] (gas: 3)\n  8324: a0 = u64 [s1 + 0x98]\n  8328: ecalli 3 // 'caller'\n  8330: fallthrough\n      : @171 (gas: 10)\n  8331: a3 = s1 + 0x100\n  8335: a0 = u64 [a3 + 0x50]\n  8338: a0 = a0 + 0xffffffffffffff9c\n  8341: a1 = u64 [a3 + 0xb8]\n  8345: a0 = a1 <u a0\n  8348: a2 = u64 [a3 + 0xb0]\n  8352: a0 = 0 if a2 != 0\n  8354: a2 = u64 [a3 + 0x78]\n  8357: a0 = 0 if a2 != 0\n  8359: jump @174 if a0 == 0\n      : @172 (gas: 25)\n  8363: a0 = u64 [s1 + 0x170]\n  8367: a2 = u32 [a0 + 0x10]\n  8370: u64 [s1 + 0x150] = a2\n  8374: a2 = u64 [a0 + 0x8]\n  8377: u64 [s1 + 0x140] = a2\n  8381: a0 = u64 [a0]\n  8383: u64 [s1 + 0x178] = a0\n  8387: i32 a1 = a1 + 0x64\n  8390: a0 = s1 + 0x1000\n  8394: i32 a0 = a0 + 0x160\n  8398: ecalli 1 // 'call_data_load'\n  8400: a0 = s1 + 0x1138\n  8404: a1 = u64 [a0 + 0x40]\n  8407: u64 [s1 + 0x1b8] = a1\n  8411: a1 = u64 [a0 + 0x38]\n  8414: u64 [s1 + 0x1b0] = a1\n  8418: a1 = u64 [a0 + 0x30]\n  8421: u64 [s1 + 0x148] = a1\n  8425: a0 = u64 [a0 + 0x28]\n  8428: u64 [s1 + 0x170] = a0\n  8432: a1 = i32 [s1 + 0x198]\n  8436: a0 = s1 + 0x1000\n  8440: i32 a0 = a0 + 0x180\n  8444: ecalli 1 // 'call_data_load'\n  8446: fallthrough\n      : @173 (gas: 30)\n  8447: t0 = u64 [s1 + 0x1a8]\n  8451: t1 = u64 [s1 + 0x180]\n  8455: t2 = t1 <u t0\n  8458: a5 = u64 [s1 + 0x1a0]\n  8462: a1 = u64 [s1 + 0x168]\n  8466: a3 = a1 ^ a5\n  8469: a2 = a1 <u a5\n  8472: a2 = t2 if a3 == 0\n  8475: a3 = u64 [s1 + 0x188]\n  8479: a4 = u64 [s1 + 0x158]\n  8483: a0 = a4 - a3\n  8486: ra = a4 <u a3\n  8489: a4 = u64 [s1 + 0x190]\n  8493: a3 = u64 [s1 + 0x160]\n  8497: a4 = a3 - a4\n  8500: a4 = a4 - ra\n  8503: a3 = a0 <u a2\n  8506: a4 = a4 - a3\n  8509: a2 = a0 - a2\n  8512: a1 = a1 - a5\n  8515: a0 = a1 - t2\n  8518: a1 = t1 - t0\n  8521: a0 = a0 | a4\n  8524: a3 = a1 | a2\n  8527: a3 = a3 | a0\n  8530: a0 = a0 | a2\n  8533: a3 = a3 >> 0x20\n  8536: a0 = a0 << 0x20\n  8539: a0 = a0 | a3\n  8542: jump @179 if a0 == 0\n      : @174 (gas: 1)\n  8545: trap\n      : @175 (gas: 4)\n  8546: a0 = 0\n  8548: a1 = 0\n  8550: ra = 0xa0\n  8554: jump @10\n      : @176 (gas: 2)\n  8557: a1 = 0\n  8559: ra = 160, jump @10\n      : @177 [@dyn 80] (gas: 5)\n  8565: i32 a1 = a0 + 0\n  8567: a0 = 0x1\n  8570: a2 = 0\n  8572: ecalli 7 // 'seal_return'\n  8574: jump @179\n      : @178 (gas: 6)\n  8576: a1 = 0x20060\n  8581: i32 a1 = a1 + 0\n  8583: a0 = 0x1\n  8586: a2 = 0\n  8588: ecalli 7 // 'seal_return'\n  8590: fallthrough\n      : @179 (gas: 58)\n  8591: a2 = s1 + 0x1138\n  8595: t2 = u64 [a2 + 0x48]\n  8598: ra = u64 [a2 + 0x50]\n  8601: a0 = u64 [a2 + 0x58]\n  8604: a2 = u64 [a2 + 0x60]\n  8607: a3 = u64 [s1 + 0x140]\n  8611: a3 = reverse a3\n  8613: a4 = a3 << 0x20\n  8616: a5 = u64 [s1 + 0x150]\n  8620: a5 = reverse a5\n  8622: a5 = a5 >> 0x20\n  8625: a4 = a4 | a5\n  8628: u64 [s1 + 0x1a0] = a4\n  8632: a4 = u64 [s1 + 0x178]\n  8636: a4 = reverse a4\n  8638: a5 = a4 << 0x20\n  8641: a3 = a3 >> 0x20\n  8644: t1 = a5 | a3\n  8647: a3 = a4 >> 0x20\n  8650: t0 = s1 + 0x7ff\n  8654: t0 = t0 + 0x139\n  8658: a4 = u64 [s1 + 0x148]\n  8662: u64 [t0 + 0xf0] = a4\n  8666: a4 = u64 [s1 + 0x170]\n  8670: u64 [t0 + 0xe8] = a4\n  8674: u64 [t0 + 0x120] = a2\n  8678: u64 [t0 + 0x118] = a0\n  8682: u64 [t0 + 0x110] = ra\n  8686: u64 [t0 + 0x108] = t2\n  8690: a0 = u64 [0x20000]\n  8695: a2 = u64 [0x20008]\n  8700: a4 = u64 [0x20010]\n  8705: a5 = u64 [0x20018]\n  8710: u64 [t0 + 0x140] = a0\n  8714: u64 [t0 + 0x138] = a2\n  8718: a2 = t0 + 0x100\n  8722: u64 [a2 + 0x30] = a4\n  8725: u64 [a2 + 0x28] = a5\n  8728: a4 = t0\n  8730: u64 [a4 + 0xd8] = a3\n  8734: a0 = u64 [s1 + 0x1b0]\n  8738: u64 [a4 + 0xf8] = a0\n  8742: a0 = u64 [s1 + 0x1b8]\n  8746: u64 [a2] = a0\n  8748: u64 [t0 + 0xd0] = t1\n  8752: a0 = u64 [s1 + 0x1a0]\n  8756: u64 [a4 + 0xc8] = a0\n  8760: a2 = s1 + 0x7ff\n  8764: a2 = a2 + 0x261\n  8768: a3 = s1 + 0x7ff\n  8772: a3 = a3 + 0x241\n  8776: a4 = s1 + 0x7ff\n  8780: a4 = a4 + 0x221\n  8784: a5 = s1 + 0x7ff\n  8788: a5 = a5 + 0x201\n  8792: u64 [t0 + 224] = 0\n  8796: a0 = u64 [s1 + 0x1a8]\n  8800: ra = 162, jump @7\n      : @180 [@dyn 81] (gas: 3)\n  8806: a0 = 0\n  8808: a1 = 0\n  8810: ra = 164, jump @10\n      : @181 [@dyn 82] (gas: 5)\n  8816: i32 a1 = a0 + 0\n  8818: a0 = 0\n  8820: a2 = 0\n  8822: ecalli 7 // 'seal_return'\n  8824: jump @179\n      : @182 (gas: 14)\n  8827: sp = sp + 0xffffffffffffff20\n  8831: u64 [sp + 0xd8] = ra\n  8835: u64 [sp + 0xd0] = s0\n  8839: u64 [sp + 0xc8] = s1\n  8843: s0 = sp + 0xe0\n  8847: sp = sp & 0xfffffffffffffff0\n  8850: a1 = u64 [a0 + 0x10]\n  8853: a2 = u64 [a0 + 0x18]\n  8856: a3 = u64 [a0 + 0x8]\n  8859: a0 = u64 [a0]\n  8861: a2 = a2 | a3\n  8864: a0 = a0 | a1\n  8867: a0 = a0 | a2\n  8870: jump @184 if a0 == 0\n      : @183 (gas: 6)\n  8873: sp = s0 + 0xffffffffffffff20\n  8877: ra = u64 [sp + 0xd8]\n  8881: s0 = u64 [sp + 0xd0]\n  8885: s1 = u64 [sp + 0xc8]\n  8889: sp = sp + 0xe0\n  8893: ret\n      : @184 (gas: 3)\n  8895: a0 = sp + 0xa0\n  8899: a1 = 0x40\n  8902: ra = 166, jump @2\n      : @185 [@dyn 83] (gas: 15)\n  8908: a2 = u64 [sp + 0xb8]\n  8912: s1 = u64 [sp + 0xb0]\n  8916: a0 = u64 [sp + 0xa8]\n  8920: a1 = u64 [sp + 0xa0]\n  8924: u64 [sp + 0x10] = a0\n  8927: u64 [sp + 0x8] = a2\n  8930: a0 = a0 | a2\n  8933: u64 [sp + 0x18] = a1\n  8936: a1 = a1 | s1\n  8939: a1 = a1 | a0\n  8942: a1 = a1 >> 0x20\n  8945: a0 = a0 | s1\n  8948: a0 = a0 << 0x20\n  8951: a0 = a0 | a1\n  8954: jump @192 if a0 != 0\n      : @186 (gas: 8)\n  8958: u64 [sp + 144] = 0\n  8962: u64 [sp + 136] = 0\n  8966: u64 [sp + 128] = 0\n  8970: a0 = 0x8c379a000000000\n  8980: a1 = sp + 0x80\n  8984: u64 [sp + 0x98] = a0\n  8988: a0 = u64 [sp + 0x18]\n  8991: ra = 168, jump @4\n      : @187 [@dyn 84] (gas: 11)\n  8997: a2 = u64 [sp + 0x8]\n  9000: a2 = a2 | s1\n  9003: s1 = 0x100000000\n  9013: a0 = 0xfffffffc\n  9023: a1 = u64 [sp + 0x18]\n  9026: a0 = a1 <u a0\n  9029: a1 = u64 [sp + 0x10]\n  9032: a0 = 0 if a1 != 0\n  9034: u64 [sp + 0x8] = a2\n  9037: a0 = 0 if a2 != 0\n  9039: jump @192 if a0 == 0\n      : @188 (gas: 8)\n  9042: a0 = u64 [sp + 0x18]\n  9045: i32 a0 = a0 + 0x4\n  9048: u64 [sp + 120] = 0\n  9051: u64 [sp + 112] = 0\n  9054: u64 [sp + 96] = 0x20\n  9058: a1 = sp + 0x60\n  9061: u64 [sp + 104] = 0\n  9064: ra = 170, jump @4\n      : @189 [@dyn 85] (gas: 8)\n  9070: a0 = s1 + 0xffffffffffffffdc\n  9073: a1 = u64 [sp + 0x18]\n  9076: a0 = a1 <u a0\n  9079: a1 = u64 [sp + 0x10]\n  9082: a0 = 0 if a1 != 0\n  9084: a1 = u64 [sp + 0x8]\n  9087: a0 = 0 if a1 != 0\n  9089: jump @192 if a0 == 0\n      : @190 (gas: 8)\n  9092: s1 = u64 [sp + 0x18]\n  9095: i32 a0 = s1 + 0x24\n  9098: u64 [sp + 88] = 0\n  9101: u64 [sp + 80] = 0\n  9104: u64 [sp + 64] = 0xe\n  9108: a1 = sp + 0x40\n  9111: u64 [sp + 72] = 0\n  9114: ra = 172, jump @4\n      : @191 [@dyn 86] (gas: 7)\n  9120: a0 = 0xffffffbc\n  9130: a0 = s1 <u a0\n  9133: a1 = u64 [sp + 0x10]\n  9136: a0 = 0 if a1 != 0\n  9138: a1 = u64 [sp + 0x8]\n  9141: a0 = 0 if a1 != 0\n  9143: jump @193 if a0 != 0\n      : @192 (gas: 1)\n  9146: trap\n      : @193 (gas: 10)\n  9147: s1 = u64 [sp + 0x18]\n  9150: i32 a0 = s1 + 0x44\n  9153: a1 = u64 [0x20040]\n  9158: a2 = u64 [0x20048]\n  9163: u64 [sp + 0x38] = a1\n  9166: u64 [sp + 40] = 0\n  9169: u64 [sp + 0x30] = a2\n  9172: a1 = sp + 0x20\n  9175: u64 [sp + 32] = 0\n  9178: ra = 174, jump @4\n      : @194 [@dyn 87] (gas: 3)\n  9184: a1 = 0x64\n  9187: a0 = s1\n  9189: ra = 176, jump @10\n      : @195 [@dyn 88] (gas: 6)\n  9195: i32 a1 = a0 + 0\n  9197: a0 = 0x1\n  9200: a2 = 0x64\n  9203: ra = 0xb2\n  9207: ecalli 7 // 'seal_return'\n  9209: fallthrough\n      : @196 [@dyn 89] (gas: 6)\n  9210: sp = sp + 0xffffffffffffff60\n  9214: u64 [sp + 0x98] = ra\n  9218: u64 [sp + 0x90] = s0\n  9222: u64 [sp + 0x88] = s1\n  9226: s0 = sp + 0xa0\n  9230: t0 = 180, jump @241\n      : @197 [@dyn 90] (gas: 2)\n  9236: u64 [sp + 0x20] = a0\n  9239: jump @205 if a3 != 0\n      : @198 (gas: 11)\n  9243: a0 = u64 [a1 + 0x18]\n  9246: u64 [sp + 0x38] = a0\n  9249: a0 = u64 [a1 + 0x10]\n  9252: u64 [sp + 0x30] = a0\n  9255: s1 = u64 [a1 + 0x8]\n  9258: a0 = u64 [a1]\n  9260: u64 [sp + 0x28] = a0\n  9263: i32 a1 = a2 + 0\n  9265: i32 a0 = sp + 0x40\n  9268: ecalli 1 // 'call_data_load'\n  9270: fallthrough\n      : @199 (gas: 51)\n  9271: a0 = 0x20050\n  9276: u64 [sp + 0x8] = a0\n  9279: a2 = u32 [0x20050]\n  9284: a0 = u64 [sp + 0x58]\n  9287: u64 [sp + 0x10] = a0\n  9290: t1 = u64 [sp + 0x50]\n  9293: a1 = u64 [sp + 0x28]\n  9296: a3 = a2 <u a1\n  9299: a4 = s1 >u 0\n  9301: a4 = a3 if s1 == 0\n  9304: t0 = u64 [sp + 0x30]\n  9307: t2 = -t0\n  9309: u64 [sp + 0x18] = s1\n  9312: a5 = s1 + a3\n  9315: a0 = -a5\n  9317: a2 = a2 - a1\n  9320: a3 = a2 + 0xffffffffffffffe1\n  9323: a2 = a3 <u a2\n  9326: a5 = a5 ^ 0xffffffffffffffff\n  9329: a5 = a5 + a2\n  9332: a1 = a5 ^ a0\n  9335: a0 = a5 <u a0\n  9338: a0 = a2 if a1 == 0\n  9341: a1 = t2 <u a4\n  9344: a2 = t0\n  9346: t0 = u64 [sp + 0x10]\n  9349: a2 = a2 >u 0\n  9351: s1 = u64 [sp + 0x38]\n  9354: a2 = a2 + s1\n  9357: a1 = a1 + a2\n  9360: a2 = u64 [sp + 0x48]\n  9363: s1 = t2 - a4\n  9366: a4 = s1 <u 0x1\n  9369: a1 = a1 + a4\n  9372: a4 = u64 [sp + 0x40]\n  9375: s1 = s1 + 0xffffffffffffffff\n  9378: a0 = a0 + s1\n  9381: s1 = a0 <u s1\n  9384: s1 = s1 - a1\n  9387: a1 = a2 ^ a5\n  9390: a5 = a2 <u a5\n  9393: a3 = a4 <u a3\n  9396: a3 = a5 if a1 != 0\n  9399: a1 = t1 <u a0\n  9402: a5 = t0 ^ s1\n  9405: s1 = t0 <s s1\n  9408: s1 = a1 if a5 == 0\n  9411: a0 = t1 ^ a0\n  9414: a0 = a0 | a5\n  9417: a3 = s1 if a0 != 0\n  9420: jump @206 if a3 == 0\n      : @200 (gas: 28)\n  9424: a0 = u64 [sp + 0x28]\n  9427: a5 = a4 + a0\n  9430: a0 = a5 <u a4\n  9433: s1 = u64 [sp + 0x18]\n  9436: s1 = s1 + a2\n  9439: s1 = s1 + a0\n  9442: a1 = s1 ^ a2\n  9445: a2 = s1 <u a2\n  9448: a2 = a0 if a1 == 0\n  9451: a0 = u64 [sp + 0x30]\n  9454: a0 = a0 + t1\n  9457: a3 = a0 + a2\n  9460: a1 = a3 <u a0\n  9463: a0 = a0 <u t1\n  9466: a2 = u64 [sp + 0x38]\n  9469: t0 = t0 + a2\n  9472: a0 = a0 + t0\n  9475: a1 = a1 + a0\n  9478: a0 = a5 | a3\n  9481: u64 [sp + 0x30] = a1\n  9484: a1 = a1 | s1\n  9487: a0 = a0 | a1\n  9490: a0 = a0 >> 0x20\n  9493: u64 [sp + 0x38] = a3\n  9496: a1 = a1 | a3\n  9499: a1 = a1 << 0x20\n  9502: a0 = a0 | a1\n  9505: jump @205 if a0 != 0\n      : @201 (gas: 5)\n  9509: u64 [sp + 0x28] = a5\n  9512: i32 a1 = a5 + 0\n  9514: i32 a0 = sp + 0x60\n  9517: ecalli 1 // 'call_data_load'\n  9519: fallthrough\n      : @202 (gas: 7)\n  9520: ra = u64 [sp + 0x78]\n  9523: a2 = u64 [sp + 0x70]\n  9526: a5 = u64 [sp + 0x68]\n  9529: a0 = a2 | ra\n  9532: a3 = a5 <u 0x1\n  9535: a3 = 0 if a0 != 0\n  9537: jump @207 if a3 == 0\n      : @203 (gas: 51)\n  9541: t1 = u64 [sp + 0x60]\n  9544: a0 = u64 [sp + 0x28]\n  9547: a1 = a0 + 0x20\n  9550: u64 [sp + 0x18] = a1\n  9553: a0 = a1 <u a0\n  9556: a1 = s1 + a0\n  9559: u64 [sp + 0x10] = a1\n  9562: a3 = a1 <u s1\n  9565: a3 = a0 if a0 == 0\n  9568: a0 = u64 [sp + 0x8]\n  9571: s1 = u32 [a0]\n  9573: a0 = u64 [sp + 0x38]\n  9576: a3 = a3 + a0\n  9579: a0 = a3 <u a0\n  9582: a1 = u64 [sp + 0x30]\n  9585: a0 = a0 + a1\n  9588: u64 [sp + 0x8] = a0\n  9591: a4 = s1 <u t1\n  9594: a1 = a5 >u 0\n  9596: a1 = a4 if a5 == 0\n  9599: t0 = -a2\n  9601: a0 = t0 <u a1\n  9604: u64 [sp + 0x28] = a0\n  9607: u64 [sp + 0x30] = a2\n  9610: t2 = a2 >u 0\n  9612: u64 [sp + 0x38] = ra\n  9615: t2 = t2 + ra\n  9618: ra = u64 [sp + 0x8]\n  9621: a0 = -t2\n  9623: a2 = u64 [sp + 0x28]\n  9626: a0 = a0 - a2\n  9629: a2 = u64 [sp + 0x10]\n  9632: a1 = t0 - a1\n  9635: u64 [sp + 0x28] = t1\n  9638: t2 = s1 - t1\n  9641: t1 = a5\n  9643: s1 = -a5\n  9645: s1 = s1 - a4\n  9648: a4 = a2 ^ s1\n  9651: s1 = s1 <u a2\n  9654: t0 = u64 [sp + 0x18]\n  9657: a5 = t2 <u t0\n  9660: a5 = s1 if a4 != 0\n  9663: a4 = a1 <u a3\n  9666: s1 = ra ^ a0\n  9669: a0 = a0 <s ra\n  9672: a0 = a4 if s1 == 0\n  9675: a1 = a1 ^ a3\n  9678: a1 = a1 | s1\n  9681: a5 = a0 if a1 != 0\n  9684: jump @208 if a5 != 0\n      : @204 (gas: 18)\n  9687: a0 = u64 [sp + 0x20]\n  9690: a1 = u64 [sp + 0x28]\n  9693: u64 [a0 + 0x20] = a1\n  9696: u64 [a0] = t0\n  9698: u64 [a0 + 0x28] = t1\n  9701: u64 [a0 + 0x8] = a2\n  9704: a1 = u64 [sp + 0x30]\n  9707: u64 [a0 + 0x30] = a1\n  9710: u64 [a0 + 0x10] = a3\n  9713: a1 = u64 [sp + 0x38]\n  9716: u64 [a0 + 0x38] = a1\n  9719: u64 [a0 + 0x18] = ra\n  9722: sp = s0 + 0xffffffffffffff60\n  9726: ra = u64 [sp + 0x98]\n  9730: s0 = u64 [sp + 0x90]\n  9734: s1 = u64 [sp + 0x88]\n  9738: sp = sp + 0xa0\n  9742: ret\n      : @205 (gas: 1)\n  9744: trap\n      : @206 (gas: 2)\n  9745: a1 = 0x20060\n  9750: jump @209\n      : @207 (gas: 2)\n  9752: a1 = 0x20060\n  9757: jump @209\n      : @208 (gas: 2)\n  9759: a1 = 0x20060\n  9764: fallthrough\n      : @209 (gas: 6)\n  9765: i32 a1 = a1 + 0\n  9767: a0 = 0x1\n  9770: a2 = 0\n  9772: ra = 0xb6\n  9776: ecalli 7 // 'seal_return'\n  9778: fallthrough\n      : @210 [@dyn 91] (gas: 18)\n  9779: sp = sp + 0xffffffffffffffc0\n  9782: u64 [sp + 0x38] = ra\n  9785: u64 [sp + 0x30] = s0\n  9788: u64 [sp + 0x28] = s1\n  9791: s0 = sp + 0x40\n  9794: sp = sp & 0xffffffffffffffe0\n  9797: a2 = u64 [a1 + 0x10]\n  9800: a3 = u64 [a1 + 0x18]\n  9803: a4 = u64 [a1 + 0x8]\n  9806: a1 = u64 [a1]\n  9808: a3 = a3 | a4\n  9811: a4 = a1 | a2\n  9814: a4 = a4 | a3\n  9817: a4 = a4 >> 0x20\n  9820: a2 = a2 | a3\n  9823: a2 = a2 << 0x20\n  9826: a2 = a2 | a4\n  9829: jump @214 if a2 != 0\n      : @211 (gas: 5)\n  9832: s1 = a0\n  9834: i32 a1 = a1 + 0\n  9836: i32 a0 = sp + 0\n  9838: ecalli 1 // 'call_data_load'\n  9840: fallthrough\n      : @212 (gas: 10)\n  9841: a0 = u64 [sp + 0x10]\n  9844: a1 = u64 [sp + 0x18]\n  9847: a2 = 0x100000000\n  9857: a2 = a2 ^ a0\n  9860: a2 = a2 | a1\n  9863: a3 = a0 >> 0x20\n  9866: a3 = a3 <u 0x1\n  9869: a3 = 0 if a1 != 0\n  9871: a3 = 0 if a2 == 0\n  9873: jump @215 if a3 == 0\n      : @213 (gas: 12)\n  9876: a2 = u64 [sp]\n  9878: a3 = u64 [sp + 0x8]\n  9881: u64 [s1] = a2\n  9883: u64 [s1 + 0x8] = a3\n  9886: u64 [s1 + 0x10] = a0\n  9889: u64 [s1 + 0x18] = a1\n  9892: sp = s0 + 0xffffffffffffffc0\n  9895: ra = u64 [sp + 0x38]\n  9898: s0 = u64 [sp + 0x30]\n  9901: s1 = u64 [sp + 0x28]\n  9904: sp = sp + 0x40\n  9907: ret\n      : @214 (gas: 1)\n  9909: trap\n      : @215 (gas: 7)\n  9910: a1 = 0x20060\n  9915: i32 a1 = a1 + 0\n  9917: a0 = 0x1\n  9920: a2 = 0\n  9922: ra = 0xb8\n  9926: ecalli 7 // 'seal_return'\n  9928: fallthrough\n      : @216 [@dyn 92] (gas: 22)\n  9929: sp = sp + 0xffffffffffffff40\n  9933: u64 [sp + 0xb8] = ra\n  9937: u64 [sp + 0xb0] = s0\n  9941: u64 [sp + 0xa8] = s1\n  9945: s0 = sp + 0xc0\n  9949: sp = sp & 0xfffffffffffffff0\n  9952: a5 = u64 [a3 + 0x10]\n  9955: a4 = u64 [a3 + 0x18]\n  9958: s1 = u64 [a3 + 0x8]\n  9961: t0 = u64 [a3]\n  9963: u64 [sp + 0x50] = a4\n  9966: u64 [sp + 0x40] = s1\n  9969: a3 = s1 | a4\n  9972: a4 = t0 | a5\n  9975: a4 = a4 | a3\n  9978: a4 = a4 >> 0x20\n  9981: u64 [sp + 0x58] = a5\n  9984: a3 = a3 | a5\n  9987: a3 = a3 << 0x20\n  9990: a3 = a3 | a4\n  9993: u64 [sp] = a0\n  9995: jump @227 if a3 != 0\n      : @217 (gas: 23)\n  9999: a0 = u64 [a2 + 0x18]\n 10002: a3 = u64 [a2 + 0x10]\n 10005: a4 = u64 [a2 + 0x8]\n 10008: a2 = u64 [a2]\n 10010: a5 = u64 [a1 + 0x18]\n 10013: u64 [sp + 0x18] = a5\n 10016: s1 = u64 [a1 + 0x10]\n 10019: a5 = u64 [a1 + 0x8]\n 10022: u64 [sp + 0x10] = a5\n 10025: a1 = u64 [a1]\n 10027: u64 [sp + 0x8] = a1\n 10030: u64 [sp + 0x20] = a2\n 10033: u64 [sp + 0x80] = a2\n 10037: u64 [sp + 0x28] = a4\n 10040: u64 [sp + 0x88] = a4\n 10044: u64 [sp + 0x30] = a3\n 10047: u64 [sp + 0x90] = a3\n 10051: a1 = sp + 0x80\n 10055: u64 [sp + 0x38] = a0\n 10058: u64 [sp + 0x98] = a0\n 10062: u64 [sp + 0x48] = t0\n 10065: a0 = t0\n 10067: ra = 186, jump @4\n      : @218 [@dyn 93] (gas: 11)\n 10073: t1 = u64 [sp + 0x8]\n 10076: a0 = t1 | s1\n 10079: a1 = u64 [sp + 0x18]\n 10082: a2 = u64 [sp + 0x10]\n 10085: a1 = a1 | a2\n 10088: a0 = a0 | a1\n 10091: a0 = a0 >> 0x20\n 10094: a1 = a1 | s1\n 10097: a1 = a1 << 0x20\n 10100: a0 = a0 | a1\n 10103: jump @227 if a0 != 0\n      : @219 (gas: 15)\n 10107: a2 = u64 [sp + 0x30]\n 10110: a4 = u64 [sp + 0x20]\n 10113: a0 = a4 | a2\n 10116: a1 = u64 [sp + 0x38]\n 10119: a3 = u64 [sp + 0x28]\n 10122: a1 = a1 | a3\n 10125: a0 = a0 | a1\n 10128: a0 = a0 >> 0x20\n 10131: a1 = a1 | a2\n 10134: a1 = a1 << 0x20\n 10137: a0 = a0 | a1\n 10140: a3 = u64 [sp + 0x58]\n 10143: a2 = u64 [sp + 0x50]\n 10146: s1 = u64 [sp + 0x40]\n 10149: jump @227 if a0 != 0\n      : @220 (gas: 9)\n 10153: a1 = a4\n 10155: a0 = a3 | a2\n 10158: a4 = 0xffffffe0\n 10168: a3 = u64 [sp + 0x48]\n 10171: u64 [sp + 0x18] = a4\n 10174: a4 = a3 <u a4\n 10177: a4 = 0 if s1 != 0\n 10179: a4 = 0 if a0 != 0\n 10181: jump @227 if a4 == 0\n      : @221 (gas: 5)\n 10185: i32 t1 = t1 + 0\n 10187: u64 [sp + 0x10] = t1\n 10190: i32 a0 = a3 + 0x20\n 10193: s1 = a1\n 10195: ra = 188, jump @10\n      : @222 [@dyn 94] (gas: 5)\n 10201: i32 a0 = a0 + 0\n 10203: i32 a1 = s1 + 0\n 10205: a2 = u64 [sp + 0x10]\n 10208: ecalli 0 // 'call_data_copy'\n 10209: fallthrough\n      : @223 (gas: 27)\n 10210: a1 = u64 [sp + 0x48]\n 10213: a0 = a1 + s1\n 10216: a1 = a0 <u a1\n 10219: a2 = u64 [sp + 0x28]\n 10222: s1 = u64 [sp + 0x40]\n 10225: a2 = a2 + s1\n 10228: a2 = a2 + a1\n 10231: a3 = a2 ^ s1\n 10234: a4 = a2 <u s1\n 10237: a4 = a1 if a3 == 0\n 10240: a3 = u64 [sp + 0x58]\n 10243: a1 = u64 [sp + 0x30]\n 10246: a1 = a1 + a3\n 10249: t0 = a1 <u a3\n 10252: a5 = u64 [sp + 0x38]\n 10255: a3 = u64 [sp + 0x50]\n 10258: a5 = a5 + a3\n 10261: a3 = a5 + t0\n 10264: a4 = a4 + a1\n 10267: a1 = a4 <u a1\n 10270: a1 = a1 + a3\n 10273: a1 = a1 | a4\n 10276: a3 = u64 [sp + 0x18]\n 10279: a3 = a0 <u a3\n 10282: a3 = 0 if a2 != 0\n 10284: a3 = 0 if a1 != 0\n 10286: jump @227 if a3 == 0\n      : @224 (gas: 7)\n 10289: i32 a0 = a0 + 0x20\n 10292: u64 [sp + 120] = 0\n 10295: u64 [sp + 112] = 0\n 10298: u64 [sp + 104] = 0\n 10301: a1 = sp + 0x60\n 10304: u64 [sp + 96] = 0\n 10307: ra = 190, jump @4\n      : @225 [@dyn 95] (gas: 17)\n 10313: a0 = u64 [sp + 0x20]\n 10316: a0 = a0 + 0x1f\n 10319: a1 = 0x1ffffffe0\n 10329: a0 = a0 & a1\n 10332: a1 = u64 [sp + 0x48]\n 10335: a0 = a0 + a1\n 10338: a1 = a0 <u a1\n 10341: a2 = s1 + a1\n 10344: a3 = a2 <u s1\n 10347: a3 = a1 if a1 == 0\n 10350: a1 = u64 [sp + 0x58]\n 10353: a3 = a3 + a1\n 10356: a1 = a3 <u a1\n 10359: a4 = u64 [sp + 0x50]\n 10362: a1 = a1 + a4\n 10365: a4 = a0 + 0x20\n 10368: t0 = 192, jump @243\n      : @226 [@dyn 96] (gas: 12)\n 10374: a0 = a0 + a1\n 10377: a1 = u64 [sp]\n 10379: u64 [a1] = a4\n 10381: u64 [a1 + 0x8] = a5\n 10384: u64 [a1 + 0x10] = a2\n 10387: u64 [a1 + 0x18] = a0\n 10390: sp = s0 + 0xffffffffffffff40\n 10394: ra = u64 [sp + 0xb8]\n 10398: s0 = u64 [sp + 0xb0]\n 10402: s1 = u64 [sp + 0xa8]\n 10406: sp = sp + 0xc0\n 10410: ret\n      : @227 (gas: 1)\n 10412: trap\n      : @228 (gas: 6)\n 10413: sp = sp + 0xffffffffffffff80\n 10416: u64 [sp + 0x78] = ra\n 10419: u64 [sp + 0x70] = s0\n 10422: u64 [sp + 0x68] = s1\n 10425: s0 = sp + 0x80\n 10429: t0 = 194, jump @241\n      : @229 [@dyn 97] (gas: 2)\n 10435: u64 [sp + 0x30] = a0\n 10438: jump @233 if a3 != 0\n      : @230 (gas: 11)\n 10442: a0 = u64 [a1 + 0x18]\n 10445: u64 [sp + 0x20] = a0\n 10448: a0 = u64 [a1 + 0x10]\n 10451: u64 [sp + 0x18] = a0\n 10454: s1 = u64 [a1 + 0x8]\n 10457: a0 = u64 [a1]\n 10459: u64 [sp + 0x38] = a0\n 10462: i32 a1 = a2 + 0\n 10464: i32 a0 = sp + 0x40\n 10467: ecalli 1 // 'call_data_load'\n 10469: fallthrough\n      : @231 (gas: 46)\n 10470: ra = u64 [sp + 0x18]\n 10473: t2 = u64 [sp + 0x20]\n 10476: a2 = u32 [0x20050]\n 10481: t0 = u64 [sp + 0x58]\n 10484: t1 = u64 [sp + 0x50]\n 10487: a1 = u64 [sp + 0x38]\n 10490: a3 = a2 <u a1\n 10493: a4 = s1 >u 0\n 10495: a4 = a3 if s1 == 0\n 10498: a0 = -ra\n 10500: u64 [sp + 0x28] = s1\n 10503: a5 = s1 + a3\n 10506: s1 = -a5\n 10508: a2 = a2 - a1\n 10511: a3 = a2 + 0xffffffffffffff01\n 10515: a2 = a3 <u a2\n 10518: a5 = a5 ^ 0xffffffffffffffff\n 10521: a5 = a5 + a2\n 10524: a1 = a5 ^ s1\n 10527: s1 = a5 <u s1\n 10530: s1 = a2 if a1 == 0\n 10533: a1 = a0 <u a4\n 10536: a2 = ra >u 0\n 10538: a2 = a2 + t2\n 10541: a1 = a1 + a2\n 10544: a2 = u64 [sp + 0x48]\n 10547: a0 = a0 - a4\n 10550: a4 = a0 <u 0x1\n 10553: a1 = a1 + a4\n 10556: a4 = u64 [sp + 0x40]\n 10559: a0 = a0 + 0xffffffffffffffff\n 10562: s1 = s1 + a0\n 10565: a0 = s1 <u a0\n 10568: a0 = a0 - a1\n 10571: a1 = a2 ^ a5\n 10574: a5 = a2 <u a5\n 10577: a3 = a4 <u a3\n 10580: a3 = a5 if a1 != 0\n 10583: a1 = t1 <u s1\n 10586: a5 = t0 ^ a0\n 10589: a0 = t0 <s a0\n 10592: a0 = a1 if a5 == 0\n 10595: a1 = t1 ^ s1\n 10598: a1 = a1 | a5\n 10601: a3 = a0 if a1 != 0\n 10604: jump @234 if a3 == 0\n      : @232 (gas: 27)\n 10607: a0 = u64 [sp + 0x38]\n 10610: a0 = a0 + a4\n 10613: a1 = a0 <u a4\n 10616: a3 = u64 [sp + 0x28]\n 10619: a3 = a3 + a2\n 10622: a3 = a3 + a1\n 10625: a4 = a3 ^ a2\n 10628: a2 = a3 <u a2\n 10631: a2 = a1 if a4 == 0\n 10634: a1 = t1 + ra\n 10637: a2 = a2 + a1\n 10640: a4 = a2 <u a1\n 10643: a1 = a1 <u t1\n 10646: t0 = t0 + t2\n 10649: a1 = a1 + t0\n 10652: a1 = a1 + a4\n 10655: a4 = u64 [sp + 0x30]\n 10658: u64 [a4] = a0\n 10660: u64 [a4 + 0x8] = a3\n 10663: u64 [a4 + 0x10] = a2\n 10666: u64 [a4 + 0x18] = a1\n 10669: sp = s0 + 0xffffffffffffff80\n 10672: ra = u64 [sp + 0x78]\n 10675: s0 = u64 [sp + 0x70]\n 10678: s1 = u64 [sp + 0x68]\n 10681: sp = sp + 0x80\n 10685: ret\n      : @233 (gas: 1)\n 10687: trap\n      : @234 (gas: 8)\n 10688: a1 = 0x20060\n 10693: i32 a1 = a1 + 0\n 10695: a0 = 0x1\n 10698: a2 = 0\n 10700: ecalli 7 // 'seal_return'\n 10702: a0 = 0\n 10704: ra = 0xc4\n 10708: jump @16\n      : @235 [export #0: 'call'] (gas: 2)\n 10711: a0 = 0\n 10713: ra = 196, jump @16\n      : @236 [@dyn 98] [export #1: 'deploy'] (gas: 2)\n 10719: a0 = 0x1\n 10722: ra = 198, jump @16\n      : @237 [@dyn 99] (gas: 15)\n 10728: a0 = a1 <u a0\n 10731: a5 = a3 + a0\n 10734: a3 = a5 <u a3\n 10737: a3 = a0 if a0 == 0\n 10740: a3 = a3 + a4\n 10743: a0 = a3 <u a4\n 10746: a0 = a0 + a2\n 10749: a2 = a1 | a3\n 10752: a0 = a0 | a5\n 10755: a2 = a2 | a0\n 10758: a2 = a2 >> 0x20\n 10761: a0 = a0 | a3\n 10764: a0 = a0 << 0x20\n 10767: a0 = a0 | a2\n 10770: jump [t0]\n      : @238 (gas: 7)\n 10772: a1 = u64 [s1 + 0x1a8]\n 10776: a0 = a1 <u a0\n 10779: a1 = u64 [s1 + 0x1a0]\n 10783: a0 = 0 if a1 != 0\n 10785: a1 = u64 [s1 + 0x88]\n 10789: a0 = 0 if a1 != 0\n 10791: jump [t0]\n      : @239 (gas: 13)\n 10793: a1 = u64 [s1 + 0x1b8]\n 10797: a1 = a0 <u a1\n 10800: a2 = u64 [s1 + 0x1b0]\n 10804: a2 = a2 + a1\n 10807: a3 = u64 [s1 + 0x1b0]\n 10811: a3 = a2 <u a3\n 10814: a3 = a1 if a1 == 0\n 10817: a1 = u64 [s1 + 0x1a0]\n 10821: a3 = a3 + a1\n 10824: a1 = a3 <u a1\n 10827: a4 = u64 [s1 + 0x1a8]\n 10831: a1 = a1 + a4\n 10834: jump [t0]\n      : @240 (gas: 14)\n 10836: a0 = u64 [a2 + 0x8]\n 10839: a1 = u64 [a2]\n 10841: a2 = i32 [a2 + 0x10]\n 10844: a0 = reverse a0\n 10846: a3 = a0 >> 0x20\n 10849: a1 = reverse a1\n 10851: a4 = a1 << 0x20\n 10854: a3 = a3 | a4\n 10857: a0 = a0 << 0x20\n 10860: a2 = reverse a2\n 10862: a2 = a2 >> 0x20\n 10865: a0 = a0 | a2\n 10868: a1 = a1 >> 0x20\n 10871: jump [t0]\n      : @241 (gas: 13)\n 10873: sp = sp & 0xffffffffffffffe0\n 10876: a3 = u64 [a2 + 0x10]\n 10879: a4 = u64 [a2 + 0x18]\n 10882: a5 = u64 [a2 + 0x8]\n 10885: a2 = u64 [a2]\n 10887: a4 = a4 | a5\n 10890: a5 = a2 | a3\n 10893: a5 = a5 | a4\n 10896: a5 = a5 >> 0x20\n 10899: a3 = a3 | a4\n 10902: a3 = a3 << 0x20\n 10905: a3 = a3 | a5\n 10908: jump [t0]\n      : @242 (gas: 8)\n 10910: a1 = u64 [s1 + 0x1b8]\n 10914: a1 = a0 <u a1\n 10917: a2 = u64 [s1 + 0x1b0]\n 10921: a2 = a2 + a1\n 10924: a3 = u64 [s1 + 0x1b0]\n 10928: a3 = a2 <u a3\n 10931: a3 = a1 if a1 == 0\n 10934: jump [t0]\n      : @243 (gas: 7)\n 10936: a0 = a4 <u a0\n 10939: a5 = a2 + a0\n 10942: a2 = a5 <u a2\n 10945: a2 = a0 if a0 == 0\n 10948: a2 = a2 + a3\n 10951: a0 = a2 <u a3\n 10954: jump [t0]\n      : @244 (gas: 8)\n 10956: u64 [a2 + 0x20] = a0\n 10959: a0 = u64 [s1 + 0x158]\n 10963: u64 [a2 + 0x18] = a0\n 10966: a0 = u64 [s1 + 0x160]\n 10970: u64 [a2 + 0x10] = a0\n 10973: a0 = u64 [s1 + 0x168]\n 10977: u64 [a2 + 0x8] = a0\n 10980: jump [t0]\n","bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"50564d00004032000000000000010700c18000c000800350f1edc9057bbb672e6b05dcc5896c0469021da04a50cb9c8902935e40aa0850ac88d5f3a951ef429fbbf830504447dfbc408da32cd5d1bb28c9fe9829055036ae6874756120746f4e000064657a69726f0480b10b000000000e0000001c0000002a000000300000003d000000480000004b00000056000000680000007300000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f726167656e6f777365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102a9d70463616c6ca9df066465706c6f7906b10d6302aae62b0073013d0345034404490479040c05b205df05eb0536069b07d907e2072508780844096009090a310ad90a010b8f0bf90b7a0c930cb30c0c0d660de70d410e810ee90e590f990fa60f131099101e118f113312a4125813f2135814ca15ff156b1677169c17da17e317261833188418231950199a19cf19511aa51a711b1f1c391c701cdd1c0d1d1a1d811d9b1d271e3d1e9e1e571fe81f23203d208420752166227022cc2225236e23a023e023eb23fa2314243326c9265927d92749288628c328df29e82939085800025108cf05330780000383770a0828c2059511f07b10087b15648964753308206497501002cf037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100487026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a05821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511e0fe7b1018017b1510017b160801951520018411e082c67b166082c6087b166882c6107b167082cc187b1c7882bc7b1c3882bc087b1c4082bc107b1c4882bb187b1b5033020682ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19107b185833000828bb007b1858501008b5006f687b18980082186f887b1890008218086f887b1888008218106f887b1880008218186f887b18b8008218206f887b18b0008218286f887b18a8008218306f887b18a0008218386f887b18d8008218406f887b18d0008218486f887b18c8008218506f887b18c0008218606f887b18f8008218686f887b18f0008218706f887b18e8008218786f887b18e0008379811a58831780003308040a049551e0fe8210180182151001821608019511200132008b7910520931c8780883881f8488e05638000001253309540002390a540002ae8a093d085400020133086000028377c887073200009511f07b10087b158475010a02013d0750000251050750100a0950100ca701951100ff7b10f8007b15f0007b16e800951500018411e04911584911504911408000330740c8710849114850100edbfc4911784911704911684911608317600a0a01821770821878821968821a60d49808d4a707d487075107173308600002838833070133093300160a07283701330660000383670a033a0768000339087000033a096000036f77977a206f88988820d4a8087b18189877206f98978620d467077b171098862049219800492190004921880049218000951720951880005010103afd801734977720821838d467074921b8004921b0004921a8004921a0007b18d8008218107b18c8008218187b18c0007b17d0009517a0009518c0003300129511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a099551a08210588215509511603200390854000256187f0c2003540002800001330760000283778000330833090a282ffa3307800033085010141bfe8378330733093300160a0701951110fe7b10e8017b15e0017b16d8019515f001951100f8951110f88411e064169569ff079599390149294006492938064929280680003307409568ff0795886107492930065010181efb33075000027b67b00139075000025517040728381b9517e08477e064714917184917104917087b67a80149079567001083778033080a01019569ff07959939018197640652475bcba58d0a28f30e51478c8fd4110a28f60f49298006492978064929700649296806956700108377a00a0a01956aff0795aa390195ab000682b77882b8800082b97082ba68d49808d4a707d4870751070628951a8267b00181775617230728881a956700108377c03308040a01019567ff07957739018272a0068273980682789006d4230a8889017b6a700194a952090628551a827488068267b001807ad84a0b8e8cda8b0c9a39c9c907d8c9098e3cc82c0c9accc99c0c9a89c9b909c94a0a88aa6485aa018e9bda9a0b8fc98e7adbc90ad4c707db7a0b520b06280b1a9547047b67b8017b647801d84707c878097b69b0017b686801d88909da7709c839097b69a001d83907c827077b6798019567ff079577e1018268a80150101aabfa9567ff07957739018278b0007b6890018278a8007b6888018077b8007b67800133076000037b67a80183777b67600133001c0a038269a80133021e287e228269a80150121e772282698001d3980882698801d39707d4870782689001d3a808d487078877019568ff07958839014928a000492898007b8788009567ff079577c101492890005010205b1a9567ff0795773901956c000182cb98007b7b4082c9a0007b793882c8b0007b783082cab8007b7a287b7b607b79587b7850647b9567ff079577a1019568ff07958881019569ff07959961017bba485010223a209568ff079588390182878000828978828a70828868d4a707d4980ad47a0a98aa20d49707977720d4a70751070628bc188388956700108377e00a01956bff0795bb390195b800068287c000956c00017bc790008287b8007bc7588287b0007bc780008287a8007bc7880082c99800956700107b7918f982c8a000956700107b7810f982c7b000956a00107ba708f982cab800956c00107bca00f97bb97bb8f8956800107b8728f99567ff07957741019568ff07958821019569ff0795990101956b00107bba20f95010246e1f9568ff0795883901828708828920828a10828b189578205012268d2051070628fe1783889567001083770a019568ff0795883901958900068297e000956b00017bb7508297d8007bb7488297d0007bb7408297c8007bb73882b99800956700107b79b8f882b8a000956700107b78b0f882b7b000956a00107ba7a8f882bab800956b00107bbaa0f8956b00107bb9d8f8956900107b98d0f8956800107b87c8f89567ff079577e1009568ff079588c1009569ff079599a100956b00107bbac0f8501028a91e956700108277e0f8956800108289f8f895680010828ae8f895680010828bf0f895784050122abc1f510706282d178388956700108377200a019568ff079588390182870007956b00017bb730958900068297f8007bb7288297f0007bb7208297e8007bb71882b99800956700107b7958f882b8a000956700107b7850f882b7b000956a00107ba748f882bab800956b00107bba40f8956b00107bb978f8956900107b9870f8956800107b8768f89567ff07957781009568ff079588619569ff07959941956b00107bba60f850102cd91d95670010827780f895680010828998f895680010828a88f895680010828b90f895786050122eec1e510706285d168388956700108377400a019568ff0795883901958900078297207b67388297187b67208297107b67288297087b6730826a98017b6af8078269a0017b69f0078268b0017b68e8078267b8017b67e007647b956700107b7a18f8956700107b7910f8956700107b7808f89567ff079577219568ff079588019569e007956a00107bab00f8501030231d95670010827720f895680010828238f895680010828928f895680010828a30f8957b8000d87b0cc8c903d89308dacc08c8a808d8a80cc82c0c7b6b60077b6298077b6a90077b6988077b6780077b6368077b6870079567a00795688007956960077b6c780750103206188267b8077b67f8008267b0077b6700018267a8077b6708018267a0077b6710018267d8077b67d8008267d0077b67e0008267c8077b67e8008267c0077b67f000826998017b6918078268a0017b6810078267b0017b670807826ab8017b6a00077b6938077b6830077b6728079567400795682007956900077b6a2007501034381c956b000782b74082b85882b94882ba50957ba0005012362a1ec8780a7b6bc0067b6cc8067b69d0069567e0069568c0067b6ad80650103885198267f0067b67c0008267e8067b67d0008267e0067b67c800826998017b6978068268a0017b6870068267b0017b676806826ab8017b6a60067b6998067b6890067b6788069567a00695688006956960067b6a800650103aa61b8267a0068262b8068269a806826ab006957bc000d87b0cc8c903d89308dacc08c8a808d8a80cc82c0c7b6be0057b6218067b6a10067b6908067b6700067b63e8057b68f00595672006956800069569e0057b6cf80550103c9916956800068287387b67a0008287307b67a8008287287b67b0008287207b67b8008287587b6780008287507b6788008287487b6790008287407b679800956b000182b998007b69980582b8a0007b68900582b7b0007b67880582bab8007b6a80057b69b8057b68b0057b67a8059567c0059568a005956980057b6aa00550103ecb1a8267c0058262d8058269c805826ad005957be000d87b0cc8c903d89308dacc08c8a808d8a80cc82c0c7b6b00057b6238057b6a30057b6928057b6720057b6308057b6810059567400595682005956900057b6c1805501040be15956800058287587b67608287507b67688287487b67708287407b67788287787b67408287707b67488287687b67508287607b67589567e00433084050104299f195680004828bf800828cf000828ae8008287e000d4ba09d4c708d49808988820d4c909979920d4980851080628b412826838017b68c004826840017b68c804826848017b68d0049568c004826950017b69d8047b67b8017b6ab0017b6ba0017b6c98015010446bf2956c000182c8b80082c7a00082c99800d4790a140b00000000010000001407e0ffffff00000000d8780782c9b000949794a752070628431283872082681801956c00047bc8a000826820017bc8a800826828017bc8b0009568a004826930017bc9b8007b6a50017b6b4801501046fbf1956a000182a8b80082a7489577c0d8780782a9b000949782a950949752070628e91183874049269804492690044926800420019568800449268804501048bbf18267b8019577200150124afd1a82689801c88a0ad88a0b8268a001c88b0b956c00047bc9087bc78267d8007bc7388267e0007bc7308267e8007bc7288267f0007bc7208267f8007bc758826700017bc750826708017bc748826710017bc7407bca10956760049568400495692004956a00047bcb1850104cbb16956b000182b8b800140a00000000010000001407a0ffffff00000000d8780782b9b000949782b9509497520706282111956900048297787b6730018297707b6738018297687b6740018297607b6748018267c0009777209879208387604926f8038268c800956b00037bb8e0008268d0007bb8e8009568e0037bb9f0007b6a280150104ebbf0956a000182a8b00082acb80082a728957780d87c07948782a950949752070628a91082674801d8c702647482674001d3870ad887096470daa209826a9801826b3801c9ab07d8ab03826ba001826a3001c9ba0bc93b0bd8970ac9ab03c9970bc98009c92909c9c40a83c780007b6ac0037b69c8037b6bd0039568c0037b63d80350105036f082673001956c00037bc758826738017bc750826740017bc748826748017bc740826780007bc778826788007bc770826790007bc768826798007bc7608267a0007bc798008267a8007bc790008267b0007bc788009567a0039568800395696003956a4003826bb8007bcb80005010523f158262b001826cb80114090000000001000000140760ffffff00000000d87c07942782685001948752070628a80f8268a003826aa8038260b8037b603801826bb0037b6b4001d8c80464837b682801d32a087b694801d82a0964a77b6a3001da8409826a9801c9ab08d8ab0a826ba001c9b00bc9ab0bd8980ac9ab0bc99808c92709c94909c9c30a83c7a000956c00037bca207bc9287bc830956820037bcb3850105421ef82673801956c00027bc7b800826740017bc7b000826730017bc7a800826728017bc7a0008267407bc7d8008267487bc7d0008267507bc7c8008267587bc7c0008267607bc7f8008267687bc7f0008267707bc7e800956700039568e0029569c002956aa002826b787bcbe0005010562a14956a000182a7489577dc82a978d8790782a868948782a87094875107a30e956800038287187b6730018287107b6728018287087b67380182877b674001839824956700108377600a010114070000000001000000956900017b9748140740ffffff00000000829cb800d87c078298b000948782985094875107460e9567ff07957739018279280782783007827a3807827b400783c7c000956c00027bcb98007bca90007bc88800956880027bc98000501058fced956900018297489577bc829878d87807829868948782987094875107ef0d8267780183784495670010837780000a010114070000000001000000956900017b9778140720ffffff000000008298b800d878078298b000948782985094875107ac0d9567ff0795773901957c000782c94882c85082ca5882cb608267b8018377e000956c00027bcb787bca707bc868956860027bc96050105a62ed956700108377a0000a060195690001829778957700ff8298b800d878078298b000948782985094875107470d9567ff0795773901957c000782c96882c87082ca7882cb80008267b80183770001956c00027bcb587bca507bc848956840027bc94050105cfcec826760010a0301826240018260b801d80203826cb00182683801d3c80ad8c809daa309826a9801826b2801c9ab07d8ab04826ba001826a3001c9ba0bc94b0bd8970ac9ab0bc99709c9c808c93807c90208d4b707d4980ad47a0ad4970798aa20977720d4a7075207a30c826aa80182a70881a91082aa6f7b97b7206f99989920d4790298bb206faa97a920d4b90398aa204926d8018267207b67f0018267287b67e8018267307b67e001826758017b671002826780017b670802826788017b6700023a0b2000023a0c2800023a073000023a093800027b6b3802956b00027bbc307bb7287bb9207b6ad0018267387b67f801826790017bb7187b63c80195692002956a0002956be001956cc0017b62c0018267b8013300a2002851ed9567381149278000491778491770491768956700108377a0010a0a01956a381182a77882a8800082a97082aa68d49808d4a707d487075207b80b8267b0018177541703ae0b9567ff07957741078268a80150105e7cec9568ff079588390195890006829718956800017b87a8008297107b87b8008297087b87b0009567ff07957721073308405010601bea956aff0795aa390182ab000695ac000582c8f80082c9f00082c7e800d49b0bd48709d4b909989920d4b808978820d498085208310b8268a801978820988920492ae0058268b00195ab00057bb8c8008268b8017bb8d0009568ff07958801077bb9d8007b67b801501062e9ea3308208267b80150106483ed837833092033070a070152477caff716ff0a4929a007492998074929900749298807956700108377c0000a0a01956aff0795aa390195ab000782b7980082b8a00082b9900082ba8800d49808d4a707d487075207990a8267b00181775417238f0a956700108377e0003308040a01019569ff07959939018293c0078294b807829cb007d4340888c7017b68780194875107670a8292a8078267b0018078d828098ecadac90a9a4bc9ab07d8ab0a8e4bc83b0b9abbc9ab0b9acac99a0ac92808888804018588018ea9daa8098fb88e7adbb80ad4b707db7a095109130a9527047b679801d82707c87c087b689001d8c808da7708c848087b688801d84807c837077b6780019567ff079577e1068268a8017b62b8017b6cb0017b63a8017b64a001501066aaea9567ff07957739018278b0057b6868018278a8057b6860018077b8057b67580133076000037b67700183777b6798003300680a038269700133026a287d128269700150126a761282695801d3980882696001d39707d4870782686801d3a808d487078877019568ff07958839014928a005492898057b8788059567ff079577c1064928900550106c5a0a8267b8019577840050126efb11956bff0795bb390195bc00057bc8207bca187bc9107bc708826780017bc740826788017bc738826790017bc7309567ff07957781069568ff07958861069569ff0795994106826a98017bca285010707b0b956cff0795cc390195cb000582b7607b67500182b7587b67580182b7507b67600182b7487b67680182b780007b67400182b7787b6748018267b8019579a4008267b801d879078268b001c87808826ab001d8a80ada770a82b7707b67300182b7687b6738018267a001c87a0ad87a07826ba801c8b70795cb00047bb7e0007bbad8007bb8d0009567ff07957721069568ff07958801067bb9c800501072150d956cff0795cc390182c7f8047b67180182c7f0047b67280182c7e8047b6720018267b8019577c400501274de1095cb00047bb8607bba587bb9507bb748826780017bb78000826788017bb778826790017bb7709567ff079577c1059568ff079588a1059569ff0795998105826a98017bba68501076650a956bff0795bb390182b7a0047b67f80082b798047b67000182b790047b67080182b788047b6710018267b8019577e400501278d41082b8c0047b68d80082b8b8047b68e00082b8b0047b68e80082b8a8047b68f0008268a001c88a0ad88a08826ca801c8c80895bc00037bc8e0007bcad8007bc9d0007bc7c800826780017bb70004826788017bc7f800826790017bc7f0009567ff07957741059568ff07958821059569ff0795990105826a98017bcae80050107aae099568ff0795883901958900048297207b67c0008297187b67c8008297107b67d0008297087b6780018297407b67a0008297387b67a8008297307b67b0008297287b67b8009567ff079577e10433084050107c75e5956a000182a9b8001407dcffffff00000000d8790782a8b000948782a878948751079c069567ff0795773901957a000382a8c0007b68900182a8b8007b68880182a8b0007b68a00182a7a8007b67a80183982495670010837700010a0101956b000182b9900082ba880082b7a800d4a70782b8a000d49808d48707987720d4a808978820d4870752073506956bff0795bb390195bc000782c7c80082c8d00082c9d80082cae00095bc00037bcaa0007bc998007bc890009568ff079588c1047bc788008267a80150107ee3e5140a00000000010000001407bcffffff00000000956b000182b9b800d8790782b8b000948782b87894875107c60583984495670010837720017b6a90000a0101956a000182a7900082a88800d47809826790009577e082a8a800d8780782a8a0009487949751078b05956cff0795cc39017b69880082c2e80782c8f00782caf80795673811827b8267a80183772095c900037b9b80007b9a787b98709568ff079588a1047bc268035020800036e5140900000000010000001407c0ffffff0000000050228200e10d510728058267a801837740956aff0795aa3901492a6003492a5803492a4803e0009568ff0795888104492a50037b69900050208400e5e48268a8019587e000d887088269a001c88909826aa001d8a90ada880a82688801c88a0ad88a0b82689001c88b0b9568ff0795883901958c00027bc9d0007bc7c80082674001958900037b97826748017bc7f800826730017bc7f000826738017bc7e8008267500150228600f50d7bcad800648c9567ff07957761049568ff07958841049569ff0795992104956aff0795aa01047bcbe00250208800c209826790009577a050228a00000d51074704956aff0795aa390195a800038287407b6750018287387b6758018287307b6760018287287b676801826718019777209879208267a801837760492ac0028268200195ab00027bb8a800826828017bb8b0009568ff079588e1037bb9b80050208c00d4e314090000000001000000140780ffffff0000000050228e007f0c5107c603826ca80182686801d8c80364828268a001826a6001d3a8087b6948018269a001d89a0964a7da8309826a8801826b5801c9ab08d8ab04826b9001826a5001c9ba0bc94b0bd8980ac9ab0bc998088269a001c99709c93909c9c20a83c78000956cff0795cc39017bca880295ca00027ba990007ba898009568ff079588c1037baba000502090002ee39568ff0795883901826750019589000250229200950c8267d8007b97408267e0007b97388267e8007b97308267f0007b97288267f8007b9760826700017b9758826708017b9750648c9567ff079577a1039568ff07958881039569ff0795996103956aff0795aa4103826b10017bcb480250209400310882698800956a000182a748957760ff82a8a800d8780782a8a000948794975107a5029567ff079577390195790002829868829a70827380027b636001829b787b6b68016474826ca801d8c80064827b6850018268a001d3a8088269a001d89a0964a77b6a5801da8009826a8801c9ab08d8ab0a826b9001c9b30bc9ab0bd8980ac9ab0bc998088269a001c99709c90909c9c20a83c7a000954c00017bcae8007bc9f0007bc8f8009568ff07958821037b4b000250209600fee19568ff079588390182676001958900017b978000826768017b9778826758017b9770826750017b97688267a0007b97a0008267a8007b9798008267b0007b9790008267b8007b9788008267c0007b97c0008267c8007b97b8008267d0007b97b000648c9567ff07957701039568ff079588e1029569ff079599c102956aff0795aaa102826b80017bcba80150209800e7069568ff0795883901958900018297e0007b6760018297d8007b6758018297d0007b6768018297c8007b678001956700108377400133009a000a060114090000000001000000140740ffffff0000000050229c00dd0951072401956738117b695001827908827810827a18827b208267a8018377c000956cff0795cc39017bcb600195cb00017bba587bb8509568ff07958881027bb94850209e00d1e0826798000a0301956a000182a75095779c82a8b800d8780782a9b000949782a97894975107ba00826770018079107b6950018279087b69400182777b67780183886495670010837760010a01956738118278407b68b8018278387b68b0018278307b6848018277287b6770018168980195670010837780010a01018262a80182638001d82304826ca00182686801d3c80ad8c809daa409826a8801826b5801c9ab07d8ab00826b9001826a6001c9ba0bc90b0bd8970ac9ab0bc99709c9c808c94807c92308d4b707d4980ad47a0ad4970798aa20977720d4a70751073100330733083300a000288be233085020a00086e2837833070133090a0728113308600002838833070133090a070195693811829448829050829758829960826a40016faa97ab20826c50016fcc98cc20d4cb0b7b6ba001826b78016fbb97bc2098aa20d4ac0398ba209562ff0795223901826b48017b2bf000826b70017b2be8007b2920017b2718017b2010017b2408013a070000023a090800023a0b1000023a0c1800027b2740017b293801952900017b9b307b9c28642b7bbad8008267b0017bb7f8008267b8017b977b23d0008267a0017bb7c8009569ff0795996102956aff0795aa4102956bff0795bb2102956cff0795cc01024922e0008267a8015020a20062e0330733085020a4008be18378330733090a072817ff951120ff7b10d8007b15d0007b16c8009515e0008411f0827810827918827a088277d4a909d48707d49707510719955120ff8210d8008215d0008216c8009511e00032009517a0003308405020a6004fdd8219b8008216b0008217a8008218a0007b17107b1908d497077b1818d46808d47808988820d46707977720d487075207c000492190004921880049218000140700000000a079c308951880007b1798008217185020a80030de821908d46909140600000000010000001407fcffffff00000000821818d8780782181094877b1908949751076b821718837704491178491170491160209518604911685020aa00e7dd9567dc821818d87807821810948782180894875107398216188367244911584911504911400e9518404911485020ac00b5dd1407bcffffff00000000d8760782181094878218089487520704008216188367443a084000023a094800027b18384911287b19309518204911205020ae0075dd33086464675020b00010e083783307013309643300b2000a0701951160ff7b1098007b1590007b1688009515a0005022b4006b067b1720520af9018287187b17388287107b173082860882877b172883988317400a010133075000027b170838095000028217587b1710821350821828d8890a8e6bda6a0b8212309a247b1618c8a60c9ac7c98909959ae1d89a0985ccffc89c0cd37c08d87c07da8907d8b40864298212108e99821638c86909c89808821948c9b406886b01c8b808821b409566ffc86707d86706c98606d3c908d8c90cd8ab0adb8c0ad87308d3620cd96206dac806d37307d4c707db760a510a4501821728c87b0cd8bc07821618c89606c87606d39608d89609da8709821730c83707c8970ad87a08d83707821938c89202c82707c87808d4ac077b1830d46808d487079877207b1a38d4a808978820d487075207ef007b1c2883c88317600a0101821078821970821c68d4090788ca01947a510ad7008213608217289578207b1818d87807c876087b1810d8680ada770a8217088076821738c87a0ad87a07821830c887077b1708d8360b8ec8dacb089a92d882077b17287b19308e947b1038c804048210089a47821928c99707821910c982087b1328c9360464c39ac6c9b606d3690bd89606821218d8240cdbb60cd8a80bd37006d90707da6b07d3a808d46808db870c520c4b8217208218287b78207b727b73287b79088218307b78307b7a108218387b78387b7018955160ff8210980082159000821688009511a0003200003308600002280f33086000022808330860000201838833070133093300b6000a07019511c07b10387b15307b16289515408411e0828910828a18828b088288d4ba0ad4980bd4ab0b98bb20d4a909979920d4b9095209506476838883170a010182171082181814090000000001000000d37909d48909987a2088aa01948a939a510a258219821a087b697b6a087b67107b68189551c08210388215308216289511403200003308600002838833070133093300b8000a0701951140ff7b10b8007b15b0007b16a8009515c0008411f082ac1082ab1882a60882a27b1b507b1640d4b60ad4c20bd4ab0b98bb207b1c58d4ca0a97aa20d4ba0a7b17520aa101829718829a10829b088299828c187b1c18828610828c087b1c1082887b18087b19207b1980007b1b287b1b88007b1a307b1a9000951880007b17387b1798007b124864275020ba00fcd9821308d46307821818821910d49808d48707987720d46808978820d4870752073501821930821b20d49b07821838821a28d4a808d48707987720d49808978820d48707821a588219508216405207070164b8d49a07140be0ffffff00000000821a487b1b18d8ba0b946b947b510be70083337b131083a72064865020bc0022dc837783688219100a01821848c86807d88708821928821640c86909c88909d3690ad8690bdaa80b821a58821830c8a808d8a802821c38821a50c8ac0cc82c0ac88b0bd88b08c8a808d4b808821a18d8a70a949a948a510a7e8377204911784911704911689518604911605020be000cd982172095771f1408e0ffffff01000000d28707821848c88707d88708c88609d8690ada880a821858c88a0ad88a08821b50c8b808957b205022c0003802c8870782187b8b7b8c087b89107b8718955140ff8210b8008215b0008216a8009511c0003200009511807b10787b15707b1668951580005022c200bc017b1730520af9008287187b17208287107b171882860882877b173883988317400a01018210188214203809500002821258821350821838d8890a8e6bda6a0b9a077b1628c8a60c9ac6c98909959a01ffd89a0985ccffc89c0cd36c08d86c06da8906d8b7088e09c84909c89808821948c9b707887b01c8b808821b409577ffc87606d87607c98707d3c908d8c90cd8ab0adb8c0ad86308d3720cd97207dac807d36308d4c808db870a510a54821738c8b707d8b708821a28c89a0ac88a0ad39a0bd89a09dab809c80308c88909d8890bd83808c84202c82808c8b808821b307bb77bba087bb9107bb818955180821078821570821668951180003200003308600002838833070133090a0733073300c4002856da33075020c40051da3307015020c60048dad87807c87a0cd8ac0ada770ac8ba0ad8ba07c89707d4a809d4c707d47909989920d4a707977720d4970732028268a801d878078268a001948782688800948732028268b801d887088269b001c88909826ab001d8a90ada880a8268a001c88a0ad88a08826ba801c8b808320282970882988199106f77987a206f88978b20d4ba0a9777206f99989920d4970798882032028411e0829a10829b18829c088299d4cb0bd4a90cd4bc0c98cc20d4ba0a97aa20d4ca0a32028268b801d887088269b001c88909826ab001d8a90ada880a3202d87b07c8790cd89c09da7709c8a909d8a90732027b9720826758017b9718826760017b9710826768017b97083202214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a9228492549559292244544444a92242549929424494a499224a1a8489122458a142952a4489122458a14294aa488882849128490309426a5211122222249481292244d922409a594502184529294241111899024111191484444922425294955559292a424952485080c5113852a8d8888881411112422428810494a12456a440412484444a41191489224512492464444122511a594945292944a922422894812494444888888880851a4482244228924111111112122229148244911111109119124499224458a8888884444444444444444948888888888109124094951111191482412111111111111111111111111112222222212922245442422914844444444444444444444241211222222221292224544922449444444441111119148448488888888489224111111111111222222222222222222222222222222224492444844444488888888888888888888881011114992242222222222422412894422914844444444444444448488884892241111111111112249922449922412222222499224111111111111112222124000894a121111111111112292442949441011224224914891482412894422898848880820804429894422918824111111111122224929891449894822922449222222424422914824128944444444444484880002485112111191229122914492244944924888888888884422914824121111891049925244229128126900910022518a888888888888089124294524a20144028844292222492222492444341291284544248988481209d188442489482292244992244944522949492291484444448410424492484422222222129124a2914892441422224444221289888488888848922411494444444444488452032222221a11111149220a116944442451449452524a49a454924824912492888888881011111111a2489144884412492222222242448888248944221111119110118944221191888844224924228944444444448888888888089124119148444444244444444444448488888888482211111111111111111111222291482412894422222122804429222222222222118d8848244912111111111111111102082022518a44442322914854444444449188242282000208221211114444041189441249242222228a888888208a8888888820124444241289442491888888880802082088881491889488242249124922222222228288882012894422914811111111114144221215119144248a1491489148224912492222222282888888442211111111111111454444444404111111111111110d2080202292242222228948108d2412a58844a248449148241211d188442489482292244992244956a4a054a1d448922851125192444444444484104244244544141111111111114105558988882429492222a24810119124499244440410912009208024a5244924419294922491040124a54c4248920429288946444490489294d2909024292929499224a52449922449922449124992244992244992244922a5499222499224294992949294a424492a49922449922425499244444443a1b0144d92244949922455930092a4524a9224692845232222494a9224498a2425494a229188440a922449924892244992244a00492a4a0a2a2749922449922449925492240992009224499224412a4944443449224824494a691292a49494489224254992244992244992244992244992942449a2a15491820449922449921489a2229148228994524a529292a424495224124949929448241200","opcodes":"","sourceMap":""},"deployedBytecode":{"object":"50564d00004032000000000000010700c18000c000800350f1edc9057bbb672e6b05dcc5896c0469021da04a50cb9c8902935e40aa0850ac88d5f3a951ef429fbbf830504447dfbc408da32cd5d1bb28c9fe9829055036ae6874756120746f4e000064657a69726f0480b10b000000000e0000001c0000002a000000300000003d000000480000004b00000056000000680000007300000063616c6c5f646174615f636f707963616c6c5f646174615f6c6f616463616c6c5f646174615f73697a6563616c6c65726465706f7369745f6576656e746765745f73746f726167656e6f777365616c5f72657475726e7365745f696d6d757461626c655f646174617365745f73746f7261676576616c75655f7472616e73666572726564051102a9d70463616c6ca9df066465706c6f7906b10d6302aae62b0073013d0345034404490479040c05b205df05eb0536069b07d907e2072508780844096009090a310ad90a010b8f0bf90b7a0c930cb30c0c0d660de70d410e810ee90e590f990fa60f131099101e118f113312a4125813f2135814ca15ff156b1677169c17da17e317261833188418231950199a19cf19511aa51a711b1f1c391c701cdd1c0d1d1a1d811d9b1d271e3d1e9e1e571fe81f23203d208420752166227022cc2225236e23a023e023eb23fa2314243326c9265927d92749288628c328df29e82939085800025108cf05330780000383770a0828c2059511f07b10087b15648964753308206497501002cf037c78017c797c7a027c7b03978808d4980897aa1097bb18d4ba0ad4a8087c79057c7a047c7b067c7c07979908d4a90997bb1097cc18d4cb0bd4b909979920d489027c79097c7a087c7b0a7c7c0b979908d4a90997bb1097cc18d4cb0bd4b9097c7a0d7c7b0c7c7c0e7c780f97aa08d4ba0a97cc10978818d4c808d4a808978820d498037c78117c7a107c7b127c7c13978808d4a80897bb1097cc18d4cb0bd4b8087c7a157c7b147c7c167c791797aa08d4ba0a97cc10979918d4c909d4a909979920d4890a7c78197c79187c7b1a7c7c1b978808d4980897bb1097cc18d4cb0bd4b8087c791d7c7b1c7c7c1e7c771f979908d4b90997cc10977718d4c707d49707977720d487076f776fa86f396f2a7b5a187b59107b58087b57821008821595111032009511d87b10207b15187b161082897b19088289087b1982851082861833082050100487026f686f59821a6faa821b086fbb787b18787a10787908787898bc38787c1f98bc30787c1e98bc28787c1d98bc20787c1c98bc18787c1b98bc10787c1a98bb08787b1998ab38787b1798ab30787b1698ab28787b1598ab20787b1498ab18787b1398ab10787b1298aa08787a11989a38787a0f989a30787a0e989a28787a0d989a20787a0c989a18787a0b989a10787a0a98990878790998893878790798893078790698892878790598892078790498891878790398891078790298880878780182102082151882161095112832009511a07b10587b15507b16489515608411e06476828718828910828a0882886f776f996faa6f887b18187b1a107b19087b17491138491130491128491120481140208318831a20831b403309ff33070a05821738821830821928821a206f776f886f996faa7b6a187b69107b68087b679551a082105882155082164895116032009511e0fe7b1018017b1510017b160801951520018411e082c67b166082c6087b166882c6107b167082cc187b1c7882bc7b1c3882bc087b1c4082bc107b1c4882bb187b1b5033020682ab7b1b1882ab087b1b2082ab107b1b2882aa187b1a308296829a087b1a829a107b1a088299187b19107b185833000828bb007b1858501008b5006f687b18980082186f887b1890008218086f887b1888008218106f887b1880008218186f887b18b8008218206f887b18b0008218286f887b18a8008218306f887b18a0008218386f887b18d8008218406f887b18d0008218486f887b18c8008218506f887b18c0008218606f887b18f8008218686f887b18f0008218706f887b18e8008218786f887b18e0008379811a58831780003308040a049551e0fe8210180182151001821608019511200132008b7910520931c8780883881f8488e05638000001253309540002390a540002ae8a093d085400020133086000028377c887073200009511f07b10087b158475010a02013d0750000251050750100a0950100ca701951100ff7b10f8007b15f0007b16e800951500018411e04911584911504911408000330740c8710849114850100edbfc4911784911704911684911608317600a0a01821770821878821968821a60d49808d4a707d487075107173308600002838833070133093300160a07283701330660000383670a033a0768000339087000033a096000036f77977a206f88988820d4a8087b18189877206f98978620d467077b171098862049219800492190004921880049218000951720951880005010103afd801734977720821838d467074921b8004921b0004921a8004921a0007b18d8008218107b18c8008218187b18c0007b17d0009517a0009518c0003300129511a07b10587b15509515608411e08272827a08827b108277188283828908828c108288186f746fbb6faa6f276f826fcc6f996f387b17187b1a107b1b087b147b18387b19307b1c287b12208318831a203309ff330b2033070a099551a08210588215509511603200390854000256187f0c2003540002800001330760000283778000330833090a282ffa3307800033085010141bfe8378330733093300160a0701951110fe7b10e8017b15e0017b16d8019515f001951100f8951110f88411e064169569ff079599390149294006492938064929280680003307409568ff0795886107492930065010181efb33075000027b67b00139075000025517040728381b9517e08477e064714917184917104917087b67a80149079567001083778033080a01019569ff07959939018197640652475bcba58d0a28f30e51478c8fd4110a28f60f49298006492978064929700649296806956700108377a00a0a01956aff0795aa390195ab000682b77882b8800082b97082ba68d49808d4a707d4870751070628951a8267b00181775617230728881a956700108377c03308040a01019567ff07957739018272a0068273980682789006d4230a8889017b6a700194a952090628551a827488068267b001807ad84a0b8e8cda8b0c9a39c9c907d8c9098e3cc82c0c9accc99c0c9a89c9b909c94a0a88aa6485aa018e9bda9a0b8fc98e7adbc90ad4c707db7a0b520b06280b1a9547047b67b8017b647801d84707c878097b69b0017b686801d88909da7709c839097b69a001d83907c827077b6798019567ff079577e1018268a80150101aabfa9567ff07957739018278b0007b6890018278a8007b6888018077b8007b67800133076000037b67a80183777b67600133001c0a038269a80133021e287e228269a80150121e772282698001d3980882698801d39707d4870782689001d3a808d487078877019568ff07958839014928a000492898007b8788009567ff079577c101492890005010205b1a9567ff0795773901956c000182cb98007b7b4082c9a0007b793882c8b0007b783082cab8007b7a287b7b607b79587b7850647b9567ff079577a1019568ff07958881019569ff07959961017bba485010223a209568ff079588390182878000828978828a70828868d4a707d4980ad47a0a98aa20d49707977720d4a70751070628bc188388956700108377e00a01956bff0795bb390195b800068287c000956c00017bc790008287b8007bc7588287b0007bc780008287a8007bc7880082c99800956700107b7918f982c8a000956700107b7810f982c7b000956a00107ba708f982cab800956c00107bca00f97bb97bb8f8956800107b8728f99567ff07957741019568ff07958821019569ff0795990101956b00107bba20f95010246e1f9568ff0795883901828708828920828a10828b189578205012268d2051070628fe1783889567001083770a019568ff0795883901958900068297e000956b00017bb7508297d8007bb7488297d0007bb7408297c8007bb73882b99800956700107b79b8f882b8a000956700107b78b0f882b7b000956a00107ba7a8f882bab800956b00107bbaa0f8956b00107bb9d8f8956900107b98d0f8956800107b87c8f89567ff079577e1009568ff079588c1009569ff079599a100956b00107bbac0f8501028a91e956700108277e0f8956800108289f8f895680010828ae8f895680010828bf0f895784050122abc1f510706282d178388956700108377200a019568ff079588390182870007956b00017bb730958900068297f8007bb7288297f0007bb7208297e8007bb71882b99800956700107b7958f882b8a000956700107b7850f882b7b000956a00107ba748f882bab800956b00107bba40f8956b00107bb978f8956900107b9870f8956800107b8768f89567ff07957781009568ff079588619569ff07959941956b00107bba60f850102cd91d95670010827780f895680010828998f895680010828a88f895680010828b90f895786050122eec1e510706285d168388956700108377400a019568ff0795883901958900078297207b67388297187b67208297107b67288297087b6730826a98017b6af8078269a0017b69f0078268b0017b68e8078267b8017b67e007647b956700107b7a18f8956700107b7910f8956700107b7808f89567ff079577219568ff079588019569e007956a00107bab00f8501030231d95670010827720f895680010828238f895680010828928f895680010828a30f8957b8000d87b0cc8c903d89308dacc08c8a808d8a80cc82c0c7b6b60077b6298077b6a90077b6988077b6780077b6368077b6870079567a00795688007956960077b6c780750103206188267b8077b67f8008267b0077b6700018267a8077b6708018267a0077b6710018267d8077b67d8008267d0077b67e0008267c8077b67e8008267c0077b67f000826998017b6918078268a0017b6810078267b0017b670807826ab8017b6a00077b6938077b6830077b6728079567400795682007956900077b6a2007501034381c956b000782b74082b85882b94882ba50957ba0005012362a1ec8780a7b6bc0067b6cc8067b69d0069567e0069568c0067b6ad80650103885198267f0067b67c0008267e8067b67d0008267e0067b67c800826998017b6978068268a0017b6870068267b0017b676806826ab8017b6a60067b6998067b6890067b6788069567a00695688006956960067b6a800650103aa61b8267a0068262b8068269a806826ab006957bc000d87b0cc8c903d89308dacc08c8a808d8a80cc82c0c7b6be0057b6218067b6a10067b6908067b6700067b63e8057b68f00595672006956800069569e0057b6cf80550103c9916956800068287387b67a0008287307b67a8008287287b67b0008287207b67b8008287587b6780008287507b6788008287487b6790008287407b679800956b000182b998007b69980582b8a0007b68900582b7b0007b67880582bab8007b6a80057b69b8057b68b0057b67a8059567c0059568a005956980057b6aa00550103ecb1a8267c0058262d8058269c805826ad005957be000d87b0cc8c903d89308dacc08c8a808d8a80cc82c0c7b6b00057b6238057b6a30057b6928057b6720057b6308057b6810059567400595682005956900057b6c1805501040be15956800058287587b67608287507b67688287487b67708287407b67788287787b67408287707b67488287687b67508287607b67589567e00433084050104299f195680004828bf800828cf000828ae8008287e000d4ba09d4c708d49808988820d4c909979920d4980851080628b412826838017b68c004826840017b68c804826848017b68d0049568c004826950017b69d8047b67b8017b6ab0017b6ba0017b6c98015010446bf2956c000182c8b80082c7a00082c99800d4790a140b00000000010000001407e0ffffff00000000d8780782c9b000949794a752070628431283872082681801956c00047bc8a000826820017bc8a800826828017bc8b0009568a004826930017bc9b8007b6a50017b6b4801501046fbf1956a000182a8b80082a7489577c0d8780782a9b000949782a950949752070628e91183874049269804492690044926800420019568800449268804501048bbf18267b8019577200150124afd1a82689801c88a0ad88a0b8268a001c88b0b956c00047bc9087bc78267d8007bc7388267e0007bc7308267e8007bc7288267f0007bc7208267f8007bc758826700017bc750826708017bc748826710017bc7407bca10956760049568400495692004956a00047bcb1850104cbb16956b000182b8b800140a00000000010000001407a0ffffff00000000d8780782b9b000949782b9509497520706282111956900048297787b6730018297707b6738018297687b6740018297607b6748018267c0009777209879208387604926f8038268c800956b00037bb8e0008268d0007bb8e8009568e0037bb9f0007b6a280150104ebbf0956a000182a8b00082acb80082a728957780d87c07948782a950949752070628a91082674801d8c702647482674001d3870ad887096470daa209826a9801826b3801c9ab07d8ab03826ba001826a3001c9ba0bc93b0bd8970ac9ab03c9970bc98009c92909c9c40a83c780007b6ac0037b69c8037b6bd0039568c0037b63d80350105036f082673001956c00037bc758826738017bc750826740017bc748826748017bc740826780007bc778826788007bc770826790007bc768826798007bc7608267a0007bc798008267a8007bc790008267b0007bc788009567a0039568800395696003956a4003826bb8007bcb80005010523f158262b001826cb80114090000000001000000140760ffffff00000000d87c07942782685001948752070628a80f8268a003826aa8038260b8037b603801826bb0037b6b4001d8c80464837b682801d32a087b694801d82a0964a77b6a3001da8409826a9801c9ab08d8ab0a826ba001c9b00bc9ab0bd8980ac9ab0bc99808c92709c94909c9c30a83c7a000956c00037bca207bc9287bc830956820037bcb3850105421ef82673801956c00027bc7b800826740017bc7b000826730017bc7a800826728017bc7a0008267407bc7d8008267487bc7d0008267507bc7c8008267587bc7c0008267607bc7f8008267687bc7f0008267707bc7e800956700039568e0029569c002956aa002826b787bcbe0005010562a14956a000182a7489577dc82a978d8790782a868948782a87094875107a30e956800038287187b6730018287107b6728018287087b67380182877b674001839824956700108377600a010114070000000001000000956900017b9748140740ffffff00000000829cb800d87c078298b000948782985094875107460e9567ff07957739018279280782783007827a3807827b400783c7c000956c00027bcb98007bca90007bc88800956880027bc98000501058fced956900018297489577bc829878d87807829868948782987094875107ef0d8267780183784495670010837780000a010114070000000001000000956900017b9778140720ffffff000000008298b800d878078298b000948782985094875107ac0d9567ff0795773901957c000782c94882c85082ca5882cb608267b8018377e000956c00027bcb787bca707bc868956860027bc96050105a62ed956700108377a0000a060195690001829778957700ff8298b800d878078298b000948782985094875107470d9567ff0795773901957c000782c96882c87082ca7882cb80008267b80183770001956c00027bcb587bca507bc848956840027bc94050105cfcec826760010a0301826240018260b801d80203826cb00182683801d3c80ad8c809daa309826a9801826b2801c9ab07d8ab04826ba001826a3001c9ba0bc94b0bd8970ac9ab0bc99709c9c808c93807c90208d4b707d4980ad47a0ad4970798aa20977720d4a7075207a30c826aa80182a70881a91082aa6f7b97b7206f99989920d4790298bb206faa97a920d4b90398aa204926d8018267207b67f0018267287b67e8018267307b67e001826758017b671002826780017b670802826788017b6700023a0b2000023a0c2800023a073000023a093800027b6b3802956b00027bbc307bb7287bb9207b6ad0018267387b67f801826790017bb7187b63c80195692002956a0002956be001956cc0017b62c0018267b8013300a2002851ed9567381149278000491778491770491768956700108377a0010a0a01956a381182a77882a8800082a97082aa68d49808d4a707d487075207b80b8267b0018177541703ae0b9567ff07957741078268a80150105e7cec9568ff079588390195890006829718956800017b87a8008297107b87b8008297087b87b0009567ff07957721073308405010601bea956aff0795aa390182ab000695ac000582c8f80082c9f00082c7e800d49b0bd48709d4b909989920d4b808978820d498085208310b8268a801978820988920492ae0058268b00195ab00057bb8c8008268b8017bb8d0009568ff07958801077bb9d8007b67b801501062e9ea3308208267b80150106483ed837833092033070a070152477caff716ff0a4929a007492998074929900749298807956700108377c0000a0a01956aff0795aa390195ab000782b7980082b8a00082b9900082ba8800d49808d4a707d487075207990a8267b00181775417238f0a956700108377e0003308040a01019569ff07959939018293c0078294b807829cb007d4340888c7017b68780194875107670a8292a8078267b0018078d828098ecadac90a9a4bc9ab07d8ab0a8e4bc83b0b9abbc9ab0b9acac99a0ac92808888804018588018ea9daa8098fb88e7adbb80ad4b707db7a095109130a9527047b679801d82707c87c087b689001d8c808da7708c848087b688801d84807c837077b6780019567ff079577e1068268a8017b62b8017b6cb0017b63a8017b64a001501066aaea9567ff07957739018278b0057b6868018278a8057b6860018077b8057b67580133076000037b67700183777b6798003300680a038269700133026a287d128269700150126a761282695801d3980882696001d39707d4870782686801d3a808d487078877019568ff07958839014928a005492898057b8788059567ff079577c1064928900550106c5a0a8267b8019577840050126efb11956bff0795bb390195bc00057bc8207bca187bc9107bc708826780017bc740826788017bc738826790017bc7309567ff07957781069568ff07958861069569ff0795994106826a98017bca285010707b0b956cff0795cc390195cb000582b7607b67500182b7587b67580182b7507b67600182b7487b67680182b780007b67400182b7787b6748018267b8019579a4008267b801d879078268b001c87808826ab001d8a80ada770a82b7707b67300182b7687b6738018267a001c87a0ad87a07826ba801c8b70795cb00047bb7e0007bbad8007bb8d0009567ff07957721069568ff07958801067bb9c800501072150d956cff0795cc390182c7f8047b67180182c7f0047b67280182c7e8047b6720018267b8019577c400501274de1095cb00047bb8607bba587bb9507bb748826780017bb78000826788017bb778826790017bb7709567ff079577c1059568ff079588a1059569ff0795998105826a98017bba68501076650a956bff0795bb390182b7a0047b67f80082b798047b67000182b790047b67080182b788047b6710018267b8019577e400501278d41082b8c0047b68d80082b8b8047b68e00082b8b0047b68e80082b8a8047b68f0008268a001c88a0ad88a08826ca801c8c80895bc00037bc8e0007bcad8007bc9d0007bc7c800826780017bb70004826788017bc7f800826790017bc7f0009567ff07957741059568ff07958821059569ff0795990105826a98017bcae80050107aae099568ff0795883901958900048297207b67c0008297187b67c8008297107b67d0008297087b6780018297407b67a0008297387b67a8008297307b67b0008297287b67b8009567ff079577e10433084050107c75e5956a000182a9b8001407dcffffff00000000d8790782a8b000948782a878948751079c069567ff0795773901957a000382a8c0007b68900182a8b8007b68880182a8b0007b68a00182a7a8007b67a80183982495670010837700010a0101956b000182b9900082ba880082b7a800d4a70782b8a000d49808d48707987720d4a808978820d4870752073506956bff0795bb390195bc000782c7c80082c8d00082c9d80082cae00095bc00037bcaa0007bc998007bc890009568ff079588c1047bc788008267a80150107ee3e5140a00000000010000001407bcffffff00000000956b000182b9b800d8790782b8b000948782b87894875107c60583984495670010837720017b6a90000a0101956a000182a7900082a88800d47809826790009577e082a8a800d8780782a8a0009487949751078b05956cff0795cc39017b69880082c2e80782c8f00782caf80795673811827b8267a80183772095c900037b9b80007b9a787b98709568ff079588a1047bc268035020800036e5140900000000010000001407c0ffffff0000000050228200e10d510728058267a801837740956aff0795aa3901492a6003492a5803492a4803e0009568ff0795888104492a50037b69900050208400e5e48268a8019587e000d887088269a001c88909826aa001d8a90ada880a82688801c88a0ad88a0b82689001c88b0b9568ff0795883901958c00027bc9d0007bc7c80082674001958900037b97826748017bc7f800826730017bc7f000826738017bc7e8008267500150228600f50d7bcad800648c9567ff07957761049568ff07958841049569ff0795992104956aff0795aa01047bcbe00250208800c209826790009577a050228a00000d51074704956aff0795aa390195a800038287407b6750018287387b6758018287307b6760018287287b676801826718019777209879208267a801837760492ac0028268200195ab00027bb8a800826828017bb8b0009568ff079588e1037bb9b80050208c00d4e314090000000001000000140780ffffff0000000050228e007f0c5107c603826ca80182686801d8c80364828268a001826a6001d3a8087b6948018269a001d89a0964a7da8309826a8801826b5801c9ab08d8ab04826b9001826a5001c9ba0bc94b0bd8980ac9ab0bc998088269a001c99709c93909c9c20a83c78000956cff0795cc39017bca880295ca00027ba990007ba898009568ff079588c1037baba000502090002ee39568ff0795883901826750019589000250229200950c8267d8007b97408267e0007b97388267e8007b97308267f0007b97288267f8007b9760826700017b9758826708017b9750648c9567ff079577a1039568ff07958881039569ff0795996103956aff0795aa4103826b10017bcb480250209400310882698800956a000182a748957760ff82a8a800d8780782a8a000948794975107a5029567ff079577390195790002829868829a70827380027b636001829b787b6b68016474826ca801d8c80064827b6850018268a001d3a8088269a001d89a0964a77b6a5801da8009826a8801c9ab08d8ab0a826b9001c9b30bc9ab0bd8980ac9ab0bc998088269a001c99709c90909c9c20a83c7a000954c00017bcae8007bc9f0007bc8f8009568ff07958821037b4b000250209600fee19568ff079588390182676001958900017b978000826768017b9778826758017b9770826750017b97688267a0007b97a0008267a8007b9798008267b0007b9790008267b8007b9788008267c0007b97c0008267c8007b97b8008267d0007b97b000648c9567ff07957701039568ff079588e1029569ff079599c102956aff0795aaa102826b80017bcba80150209800e7069568ff0795883901958900018297e0007b6760018297d8007b6758018297d0007b6768018297c8007b678001956700108377400133009a000a060114090000000001000000140740ffffff0000000050229c00dd0951072401956738117b695001827908827810827a18827b208267a8018377c000956cff0795cc39017bcb600195cb00017bba587bb8509568ff07958881027bb94850209e00d1e0826798000a0301956a000182a75095779c82a8b800d8780782a9b000949782a97894975107ba00826770018079107b6950018279087b69400182777b67780183886495670010837760010a01956738118278407b68b8018278387b68b0018278307b6848018277287b6770018168980195670010837780010a01018262a80182638001d82304826ca00182686801d3c80ad8c809daa409826a8801826b5801c9ab07d8ab00826b9001826a6001c9ba0bc90b0bd8970ac9ab0bc99709c9c808c94807c92308d4b707d4980ad47a0ad4970798aa20977720d4a70751073100330733083300a000288be233085020a00086e2837833070133090a0728113308600002838833070133090a070195693811829448829050829758829960826a40016faa97ab20826c50016fcc98cc20d4cb0b7b6ba001826b78016fbb97bc2098aa20d4ac0398ba209562ff0795223901826b48017b2bf000826b70017b2be8007b2920017b2718017b2010017b2408013a070000023a090800023a0b1000023a0c1800027b2740017b293801952900017b9b307b9c28642b7bbad8008267b0017bb7f8008267b8017b977b23d0008267a0017bb7c8009569ff0795996102956aff0795aa4102956bff0795bb2102956cff0795cc01024922e0008267a8015020a20062e0330733085020a4008be18378330733090a072817ff951120ff7b10d8007b15d0007b16c8009515e0008411f0827810827918827a088277d4a909d48707d49707510719955120ff8210d8008215d0008216c8009511e00032009517a0003308405020a6004fdd8219b8008216b0008217a8008218a0007b17107b1908d497077b1818d46808d47808988820d46707977720d487075207c000492190004921880049218000140700000000a079c308951880007b1798008217185020a80030de821908d46909140600000000010000001407fcffffff00000000821818d8780782181094877b1908949751076b821718837704491178491170491160209518604911685020aa00e7dd9567dc821818d87807821810948782180894875107398216188367244911584911504911400e9518404911485020ac00b5dd1407bcffffff00000000d8760782181094878218089487520704008216188367443a084000023a094800027b18384911287b19309518204911205020ae0075dd33086464675020b00010e083783307013309643300b2000a0701951160ff7b1098007b1590007b1688009515a0005022b4006b067b1720520af9018287187b17388287107b173082860882877b172883988317400a010133075000027b170838095000028217587b1710821350821828d8890a8e6bda6a0b8212309a247b1618c8a60c9ac7c98909959ae1d89a0985ccffc89c0cd37c08d87c07da8907d8b40864298212108e99821638c86909c89808821948c9b406886b01c8b808821b409566ffc86707d86706c98606d3c908d8c90cd8ab0adb8c0ad87308d3620cd96206dac806d37307d4c707db760a510a4501821728c87b0cd8bc07821618c89606c87606d39608d89609da8709821730c83707c8970ad87a08d83707821938c89202c82707c87808d4ac077b1830d46808d487079877207b1a38d4a808978820d487075207ef007b1c2883c88317600a0101821078821970821c68d4090788ca01947a510ad7008213608217289578207b1818d87807c876087b1810d8680ada770a8217088076821738c87a0ad87a07821830c887077b1708d8360b8ec8dacb089a92d882077b17287b19308e947b1038c804048210089a47821928c99707821910c982087b1328c9360464c39ac6c9b606d3690bd89606821218d8240cdbb60cd8a80bd37006d90707da6b07d3a808d46808db870c520c4b8217208218287b78207b727b73287b79088218307b78307b7a108218387b78387b7018955160ff8210980082159000821688009511a0003200003308600002280f33086000022808330860000201838833070133093300b6000a07019511c07b10387b15307b16289515408411e0828910828a18828b088288d4ba0ad4980bd4ab0b98bb20d4a909979920d4b9095209506476838883170a010182171082181814090000000001000000d37909d48909987a2088aa01948a939a510a258219821a087b697b6a087b67107b68189551c08210388215308216289511403200003308600002838833070133093300b8000a0701951140ff7b10b8007b15b0007b16a8009515c0008411f082ac1082ab1882a60882a27b1b507b1640d4b60ad4c20bd4ab0b98bb207b1c58d4ca0a97aa20d4ba0a7b17520aa101829718829a10829b088299828c187b1c18828610828c087b1c1082887b18087b19207b1980007b1b287b1b88007b1a307b1a9000951880007b17387b1798007b124864275020ba00fcd9821308d46307821818821910d49808d48707987720d46808978820d4870752073501821930821b20d49b07821838821a28d4a808d48707987720d49808978820d48707821a588219508216405207070164b8d49a07140be0ffffff00000000821a487b1b18d8ba0b946b947b510be70083337b131083a72064865020bc0022dc837783688219100a01821848c86807d88708821928821640c86909c88909d3690ad8690bdaa80b821a58821830c8a808d8a802821c38821a50c8ac0cc82c0ac88b0bd88b08c8a808d4b808821a18d8a70a949a948a510a7e8377204911784911704911689518604911605020be000cd982172095771f1408e0ffffff01000000d28707821848c88707d88708c88609d8690ada880a821858c88a0ad88a08821b50c8b808957b205022c0003802c8870782187b8b7b8c087b89107b8718955140ff8210b8008215b0008216a8009511c0003200009511807b10787b15707b1668951580005022c200bc017b1730520af9008287187b17208287107b171882860882877b173883988317400a01018210188214203809500002821258821350821838d8890a8e6bda6a0b9a077b1628c8a60c9ac6c98909959a01ffd89a0985ccffc89c0cd36c08d86c06da8906d8b7088e09c84909c89808821948c9b707887b01c8b808821b409577ffc87606d87607c98707d3c908d8c90cd8ab0adb8c0ad86308d3720cd97207dac807d36308d4c808db870a510a54821738c8b707d8b708821a28c89a0ac88a0ad39a0bd89a09dab809c80308c88909d8890bd83808c84202c82808c8b808821b307bb77bba087bb9107bb818955180821078821570821668951180003200003308600002838833070133090a0733073300c4002856da33075020c40051da3307015020c60048dad87807c87a0cd8ac0ada770ac8ba0ad8ba07c89707d4a809d4c707d47909989920d4a707977720d4970732028268a801d878078268a001948782688800948732028268b801d887088269b001c88909826ab001d8a90ada880a8268a001c88a0ad88a08826ba801c8b808320282970882988199106f77987a206f88978b20d4ba0a9777206f99989920d4970798882032028411e0829a10829b18829c088299d4cb0bd4a90cd4bc0c98cc20d4ba0a97aa20d4ca0a32028268b801d887088269b001c88909826ab001d8a90ada880a3202d87b07c8790cd89c09da7709c8a909d8a90732027b9720826758017b9718826760017b9710826768017b97083202214225a952484992244992244992244992244992244992244992244992244992244992244992542529a524292949a84a494a922449922449922449922449922449922449922449929224294955494a9228492549559292244544444a92242549929424494a499224a1a8489122458a142952a4489122458a14294aa488882849128490309426a5211122222249481292244d922409a594502184529294241111899024111191484444922425294955559292a424952485080c5113852a8d8888881411112422428810494a12456a440412484444a41191489224512492464444122511a594945292944a922422894812494444888888880851a4482244228924111111112122229148244911111109119124499224458a8888884444444444444444948888888888109124094951111191482412111111111111111111111111112222222212922245442422914844444444444444444444241211222222221292224544922449444444441111119148448488888888489224111111111111222222222222222222222222222222224492444844444488888888888888888888881011114992242222222222422412894422914844444444444444448488884892241111111111112249922449922412222222499224111111111111112222124000894a121111111111112292442949441011224224914891482412894422898848880820804429894422918824111111111122224929891449894822922449222222424422914824128944444444444484880002485112111191229122914492244944924888888888884422914824121111891049925244229128126900910022518a888888888888089124294524a20144028844292222492222492444341291284544248988481209d188442489482292244992244944522949492291484444448410424492484422222222129124a2914892441422224444221289888488888848922411494444444444488452032222221a11111149220a116944442451449452524a49a454924824912492888888881011111111a2489144884412492222222242448888248944221111119110118944221191888844224924228944444444448888888888089124119148444444244444444444448488888888482211111111111111111111222291482412894422222122804429222222222222118d8848244912111111111111111102082022518a44442322914854444444449188242282000208221211114444041189441249242222228a888888208a8888888820124444241289442491888888880802082088881491889488242249124922222222228288882012894422914811111111114144221215119144248a1491489148224912492222222282888888442211111111111111454444444404111111111111110d2080202292242222228948108d2412a58844a248449148241211d188442489482292244992244956a4a054a1d448922851125192444444444484104244244544141111111111114105558988882429492222a24810119124499244440410912009208024a5244924419294922491040124a54c4248920429288946444490489294d2909024292929499224a52449922449922449124992244992244992244922a5499222499224294992949294a424492a49922449922425499244444443a1b0144d92244949922455930092a4524a9224692845232222494a9224498a2425494a229188440a922449924892244992244a00492a4a0a2a2749922449922449925492240992009224499224412a4944443449224824494a691292a49494489224254992244992244992244992244992942449a2a15491820449922449921489a2229148228994524a529292a424495224124949929448241200"},"methodIdentifiers":{"createShipment((uint256,uint256,uint256,uint256,string,address,string,string))":"16f7af7c","owner()":"8da5cb5b","updateShipment(((uint256,uint256,uint256,uint256,string,address,string,string),bytes32,uint256))":"11d48f8c"}},"irOptimized":"/// @use-src 0:\"contracts/LogisticsTracking.sol\"\nobject \"LogisticsEvents_174\" {\n    code {\n        {\n            /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:140:158  \"owner = msg.sender\" */ 0x00, /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ or(and(sload(/** @src 0:140:158  \"owner = msg.sender\" */ 0x00), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:148:158  \"msg.sender\" */ caller()))\n            /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n            let _2 := datasize(\"LogisticsEvents_174_deployed\")\n            codecopy(_1, dataoffset(\"LogisticsEvents_174_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/LogisticsTracking.sol\"\n    object \"LogisticsEvents_174_deployed\" {\n        code {\n            {\n                /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x11d48f8c {\n                        if callvalue() { revert(_2, _2) }\n                        let _3 := not(3)\n                        if slt(add(calldatasize(), _3), 32) { revert(_2, _2) }\n                        let offset := calldataload(4)\n                        if gt(offset, 0xffffffffffffffff) { revert(_2, _2) }\n                        let _4 := add(4, offset)\n                        if slt(add(sub(calldatasize(), offset), _3), 96) { revert(_2, _2) }\n                        let _5 := sub(shl(160, 1), 1)\n                        /// @src 0:202:248  \"require(msg.sender == owner, \\\"Not authorized\\\")\"\n                        require_helper_stringliteral_fac3(/** @src 0:210:229  \"msg.sender == owner\" */ eq(/** @src 0:210:220  \"msg.sender\" */ caller(), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ and(sload(_2), _5)))\n                        let value := calldataload(/** @src 0:1856:1869  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_4, _4))\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        let value_1 := calldataload(/** @src 0:1894:1914  \"data.shipment.weight\" */ add(/** @src 0:1894:1907  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_4, _4), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ 32))\n                        let value_2 := calldataload(/** @src 0:1928:1947  \"data.shipment.price\" */ add(/** @src 0:1928:1941  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_4, _4), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ _1))\n                        let value_3 := calldataload(/** @src 0:1961:1980  \"data.shipment.batch\" */ add(/** @src 0:1961:1974  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_4, _4), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ 96))\n                        /// @src 0:1994:2007  \"data.shipment\"\n                        let expr_offset := access_calldata_tail_struct_ShipmentData_calldata(_4, _4)\n                        /// @src 0:1994:2014  \"data.shipment.origin\"\n                        let expr_offset_1, expr_length := access_calldata_tail_string_calldata(expr_offset, add(expr_offset, 128))\n                        /// @src 0:2052:2074  \"data.shipment.receiver\"\n                        let expr := read_from_calldatat_address(add(/** @src 0:2052:2065  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_4, _4), /** @src 0:2052:2074  \"data.shipment.receiver\" */ 160))\n                        /// @src 0:2088:2101  \"data.shipment\"\n                        let expr_offset_2 := access_calldata_tail_struct_ShipmentData_calldata(_4, _4)\n                        /// @src 0:2088:2113  \"data.shipment.destination\"\n                        let expr_offset_3, expr_length_1 := access_calldata_tail_string_calldata(expr_offset_2, add(expr_offset_2, 192))\n                        /// @src 0:2127:2140  \"data.shipment\"\n                        let expr_offset_4 := access_calldata_tail_struct_ShipmentData_calldata(_4, _4)\n                        /// @src 0:2127:2152  \"data.shipment.description\"\n                        let expr_offset_5, expr_length_2 := access_calldata_tail_string_calldata(expr_offset_4, add(expr_offset_4, /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ 224))\n                        /// @src 0:1827:2264  \"ShipmentUpdated(...\"\n                        let _6 := /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ mload(_1)\n                        let _7 := 288\n                        mstore(_6, value_1)\n                        mstore(add(_6, 32), value_2)\n                        mstore(add(_6, _1), _7)\n                        let tail := abi_encode_string_calldata(expr_offset_1, expr_length, add(_6, _7))\n                        mstore(add(_6, 96), and(expr, _5))\n                        mstore(add(_6, /** @src 0:1994:2014  \"data.shipment.origin\" */ 128), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ sub(tail, _6))\n                        let tail_1 := abi_encode_string_calldata(expr_offset_3, expr_length_1, tail)\n                        mstore(add(_6, /** @src 0:2052:2074  \"data.shipment.receiver\" */ 160), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ sub(tail_1, _6))\n                        let tail_2 := abi_encode_string_calldata(expr_offset_5, expr_length_2, tail_1)\n                        mstore(add(_6, /** @src 0:2088:2113  \"data.shipment.destination\" */ 192), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:2166:2188  \"data.previousBlockHash\" */ add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset, /** @src 0:2166:2188  \"data.previousBlockHash\" */ 36)))\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        mstore(add(_6, 224), calldataload(/** @src 0:2202:2225  \"data.previousShipmentId\" */ add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset, /** @src 0:2202:2225  \"data.previousShipmentId\" */ 68)))\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        mstore(add(_6, 256), /** @src 0:2239:2254  \"block.timestamp\" */ timestamp())\n                        /// @src 0:1827:2264  \"ShipmentUpdated(...\"\n                        log4(_6, sub(tail_2, _6), 0x9f42ef51a9f3d588bcdf47445030f8bb28bbd1d52ca38d40ae3650052998fec9, value, value_3, /** @src 0:210:220  \"msg.sender\" */ caller())\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        return(_2, _2)\n                    }\n                    case 0x16f7af7c {\n                        if callvalue() { revert(_2, _2) }\n                        let _8 := not(3)\n                        if slt(add(calldatasize(), _8), 32) { revert(_2, _2) }\n                        let offset_1 := calldataload(4)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_2, _2) }\n                        let _9 := add(4, offset_1)\n                        if slt(add(sub(calldatasize(), offset_1), _8), 256) { revert(_2, _2) }\n                        let _10 := sub(shl(160, 1), 1)\n                        /// @src 0:202:248  \"require(msg.sender == owner, \\\"Not authorized\\\")\"\n                        require_helper_stringliteral_fac3(/** @src 0:210:229  \"msg.sender == owner\" */ eq(/** @src 0:210:220  \"msg.sender\" */ caller(), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ and(sload(_2), _10)))\n                        /// @src 0:1561:1572  \"data.origin\"\n                        let expr_offset_6, expr_length_3 := access_calldata_tail_string_calldata(_9, add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1561:1572  \"data.origin\" */ 132))\n                        /// @src 0:1610:1623  \"data.receiver\"\n                        let expr_1 := read_from_calldatat_address(add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1610:1623  \"data.receiver\" */ 164))\n                        /// @src 0:1637:1653  \"data.destination\"\n                        let expr_offset_7, expr_length_4 := access_calldata_tail_string_calldata(_9, add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1637:1653  \"data.destination\" */ 196))\n                        /// @src 0:1667:1683  \"data.description\"\n                        let expr_offset_8, expr_length_5 := access_calldata_tail_string_calldata(_9, add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1667:1683  \"data.description\" */ 228))\n                        /// @src 0:1430:1722  \"ShipmentCreated(...\"\n                        let _11 := /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_11, calldataload(/** @src 0:1488:1499  \"data.weight\" */ add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1488:1499  \"data.weight\" */ 36)))\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        mstore(add(_11, 32), calldataload(/** @src 0:1513:1523  \"data.price\" */ add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1513:1523  \"data.price\" */ 68)))\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        mstore(add(_11, _1), 224)\n                        let tail_3 := abi_encode_string_calldata(expr_offset_6, expr_length_3, add(_11, 224))\n                        mstore(add(_11, /** @src 0:1537:1547  \"data.batch\" */ 96), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ and(expr_1, _10))\n                        mstore(add(_11, /** @src 0:1561:1572  \"data.origin\" */ 128), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ sub(tail_3, _11))\n                        let tail_4 := abi_encode_string_calldata(expr_offset_7, expr_length_4, tail_3)\n                        mstore(add(_11, /** @src 0:1610:1623  \"data.receiver\" */ 160), /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ sub(tail_4, _11))\n                        let tail_5 := abi_encode_string_calldata(expr_offset_8, expr_length_5, tail_4)\n                        mstore(add(_11, /** @src 0:1637:1653  \"data.destination\" */ 192), /** @src 0:1697:1712  \"block.timestamp\" */ timestamp())\n                        /// @src 0:1430:1722  \"ShipmentCreated(...\"\n                        log4(_11, sub(tail_5, _11), 0x2e67bb7b05c9edf169046c89c5dc056b899ccb504aa01d02ac5008aa405e9302, /** @src 0:58:2273  \"contract LogisticsEvents {...\" */ calldataload(_9), calldataload(/** @src 0:1537:1547  \"data.batch\" */ add(/** @src 0:58:2273  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:1537:1547  \"data.batch\" */ 100)), /** @src 0:210:220  \"msg.sender\" */ caller())\n                        /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                        return(_2, _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let value_4 := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos := mload(_1)\n                        mstore(memPos, value_4)\n                        return(memPos, 32)\n                    }\n                }\n                revert(0, 0)\n            }\n            function require_helper_stringliteral_fac3(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 14)\n                    mstore(add(memPtr, 68), \"Not authorized\")\n                    revert(memPtr, 100)\n                }\n            }\n            function access_calldata_tail_string_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function read_from_calldatat_address(ptr) -> returnValue\n            {\n                let value := calldataload(ptr)\n                if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n                returnValue := value\n            }\n            function abi_encode_string_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:2273  \"contract LogisticsEvents {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function access_calldata_tail_struct_ShipmentData_calldata(base_ref, ptr_to_tail) -> addr\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(254)))) { revert(0, 0) }\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n        }\n        data \".metadata\" hex\"a26469706673582212207784b8daa76f56728a3c06f5f50c0ebcd968f2cf93c67b30370a2fae7dd0b2f564736f6c63430008140033\"\n    }\n}\n","hash":"ae9cbe60f113ae4b350adf3864f8888c6da8043e363bceda14cfb522c9c1ace9","factoryDependencies":{}}}}}}