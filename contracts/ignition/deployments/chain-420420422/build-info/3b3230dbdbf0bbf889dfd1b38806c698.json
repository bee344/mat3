{
  "id": "3b3230dbdbf0bbf889dfd1b38806c698",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.20",
  "solcLongVersion": "0.8.20+commit.a1b79de6",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/LogisticsTracking.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract LogisticsEvents {\n    address public owner;\n\n    mapping(address => bool) public authorizedProviders;\n    uint256 public nextShipmentId;\n\n    enum ShipmentStage {\n        Harvest,\n        Drying,\n        Grinding,\n        Blending,\n        Packaging,\n        Retail\n    }\n\n    constructor() {\n        owner = msg.sender;\n        authorizedProviders[msg.sender] = true;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Not authorized: owner only\");\n        _;\n    }\n\n    modifier onlyAuthorized() {\n        require(\n            authorizedProviders[msg.sender],\n            \"Not authorized: provider only\"\n        );\n        _;\n    }\n\n    struct Location {\n        string longitud;\n        string latitud;\n    }\n\n    struct ShipmentData {\n        uint256 weight;\n        uint256 price;\n        uint256 batch;\n        Location origin;\n        Location destination;\n        string description;\n        ShipmentStage stage;\n    }\n\n    struct ShipmentUpdateData {\n        ShipmentData shipment;\n        bytes32 previousBlockHash;\n        uint256 previousShipmentId;\n    }\n\n    event ShipmentCreated(\n        uint256 indexed shipmentId,\n        uint256 indexed batch,\n        uint256 timestamp,\n        ShipmentStage stage\n    );\n\n    event ShipmentDetails(\n        uint256 indexed shipmentId,\n        uint256 weight,\n        uint256 price,\n        string description\n    );\n\n    event ShipmentLocation(\n        uint256 indexed shipmentId,\n        string originLat,\n        string originLong,\n        string destLat,\n        string destLong\n    );\n\n    event ShipmentUpdated(\n        uint256 indexed shipmentId,\n        uint256 indexed batch,\n        uint256 timestamp,\n        ShipmentStage stage,\n        bytes32 previousBlockHash,\n        uint256 previousShipmentId\n    );\n\n    event ShipmentUpdateDetails(\n        uint256 indexed shipmentId,\n        uint256 weight,\n        uint256 price,\n        string description\n    );\n\n    event ShipmentUpdateLocation(\n        uint256 indexed shipmentId,\n        string originLat,\n        string originLong,\n        string destLat,\n        string destLong\n    );\n\n    event ProviderAuthorized(address indexed provider, uint256 timestamp);\n    event ProviderRevoked(address indexed provider, uint256 timestamp);\n\n    function authorizeProvider(address provider) external onlyOwner {\n        require(provider != address(0), \"Invalid provider address\");\n        require(!authorizedProviders[provider], \"Provider already authorized\");\n\n        authorizedProviders[provider] = true;\n        emit ProviderAuthorized(provider, block.timestamp);\n    }\n\n    function revokeProvider(address provider) external onlyOwner {\n        require(provider != owner, \"Cannot revoke owner\");\n        require(authorizedProviders[provider], \"Provider not authorized\");\n\n        authorizedProviders[provider] = false;\n        emit ProviderRevoked(provider, block.timestamp);\n    }\n\n    function createShipment(\n        ShipmentData calldata data\n    ) external onlyAuthorized returns (uint256 id) {\n        require(data.weight > 0, \"Weight must be greater than 0\");\n        require(data.price > 0, \"Price must be greater than 0\");\n        require(\n            bytes(data.origin.latitud).length > 0,\n            \"Origin latitude required\"\n        );\n        require(\n            bytes(data.origin.longitud).length > 0,\n            \"Origin longitude required\"\n        );\n        require(\n            bytes(data.destination.latitud).length > 0,\n            \"Destination latitude required\"\n        );\n        require(\n            bytes(data.destination.longitud).length > 0,\n            \"Destination longitude required\"\n        );\n\n        id = nextShipmentId;\n        ++nextShipmentId;\n\n        emit ShipmentCreated(id, data.batch, block.timestamp, data.stage);\n\n        emit ShipmentDetails(id, data.weight, data.price, data.description);\n\n        emit ShipmentLocation(\n            id,\n            data.origin.latitud,\n            data.origin.longitud,\n            data.destination.latitud,\n            data.destination.longitud\n        );\n\n        return id;\n    }\n\n    function updateShipment(\n        ShipmentUpdateData calldata data\n    ) external onlyAuthorized returns (uint256 id) {\n        require(data.shipment.weight > 0, \"Weight must be greater than 0\");\n        require(data.shipment.price > 0, \"Price must be greater than 0\");\n        require(\n            bytes(data.shipment.origin.latitud).length > 0,\n            \"Origin latitude required\"\n        );\n        require(\n            bytes(data.shipment.origin.longitud).length > 0,\n            \"Origin longitude required\"\n        );\n        require(\n            bytes(data.shipment.destination.latitud).length > 0,\n            \"Destination latitude required\"\n        );\n        require(\n            bytes(data.shipment.destination.longitud).length > 0,\n            \"Destination longitude required\"\n        );\n\n        id = nextShipmentId;\n        ++nextShipmentId;\n\n        emit ShipmentUpdated(\n            id,\n            data.shipment.batch,\n            block.timestamp,\n            data.shipment.stage,\n            data.previousBlockHash,\n            data.previousShipmentId\n        );\n\n        emit ShipmentUpdateDetails(\n            id,\n            data.shipment.weight,\n            data.shipment.price,\n            data.shipment.description\n        );\n\n        emit ShipmentUpdateLocation(\n            id,\n            data.shipment.origin.latitud,\n            data.shipment.origin.longitud,\n            data.shipment.destination.latitud,\n            data.shipment.destination.longitud\n        );\n\n        return id;\n    }\n\n    function transferOwnership(address newOwner) external onlyOwner {\n        require(newOwner != address(0), \"Invalid new owner address\");\n        require(newOwner != owner, \"New owner same as current owner\");\n\n        owner = newOwner;\n        authorizedProviders[newOwner] = true;\n    }\n}\n"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "metadata",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      },
      "resolc": {
        "version": "latest",
        "compilerSource": "binary",
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 200
          }
        }
      }
    }
  },
  "output": {
    "errors": [],
    "version": "0.8.20",
    "long_version": "0.8.20+commit.a1b79de6.Linux.g++",
    "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
    "sources": {
      "contracts/LogisticsTracking.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "contracts/LogisticsTracking.sol",
          "exportedSymbols": {
            "LogisticsEvents": [
              544
            ]
          },
          "id": 545,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "LogisticsEvents",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 544,
              "linearizedBaseContracts": [
                544
              ],
              "name": "LogisticsEvents",
              "nameLocation": "67:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 3,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "104:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "89:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "89:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "69dc3ae2",
                  "id": 7,
                  "mutability": "mutable",
                  "name": "authorizedProviders",
                  "nameLocation": "148:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "116:51:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 6,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 4,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "124:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "116:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 5,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "135:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "b9a3a68c",
                  "id": 9,
                  "mutability": "mutable",
                  "name": "nextShipmentId",
                  "nameLocation": "188:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 544,
                  "src": "173:29:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "LogisticsEvents.ShipmentStage",
                  "id": 16,
                  "members": [
                    {
                      "id": 10,
                      "name": "Harvest",
                      "nameLocation": "238:7:0",
                      "nodeType": "EnumValue",
                      "src": "238:7:0"
                    },
                    {
                      "id": 11,
                      "name": "Drying",
                      "nameLocation": "255:6:0",
                      "nodeType": "EnumValue",
                      "src": "255:6:0"
                    },
                    {
                      "id": 12,
                      "name": "Grinding",
                      "nameLocation": "271:8:0",
                      "nodeType": "EnumValue",
                      "src": "271:8:0"
                    },
                    {
                      "id": 13,
                      "name": "Blending",
                      "nameLocation": "289:8:0",
                      "nodeType": "EnumValue",
                      "src": "289:8:0"
                    },
                    {
                      "id": 14,
                      "name": "Packaging",
                      "nameLocation": "307:9:0",
                      "nodeType": "EnumValue",
                      "src": "307:9:0"
                    },
                    {
                      "id": 15,
                      "name": "Retail",
                      "nameLocation": "326:6:0",
                      "nodeType": "EnumValue",
                      "src": "326:6:0"
                    }
                  ],
                  "name": "ShipmentStage",
                  "nameLocation": "214:13:0",
                  "nodeType": "EnumDefinition",
                  "src": "209:129:0"
                },
                {
                  "body": {
                    "id": 31,
                    "nodeType": "Block",
                    "src": "358:83:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 22,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 19,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "368:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 20,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "376:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 21,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "380:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "376:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "368:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 23,
                        "nodeType": "ExpressionStatement",
                        "src": "368:18:0"
                      },
                      {
                        "expression": {
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 24,
                              "name": "authorizedProviders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "396:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 27,
                            "indexExpression": {
                              "expression": {
                                "id": 25,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "416:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 26,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "420:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "416:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "396:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 28,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "430:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "396:38:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 30,
                        "nodeType": "ExpressionStatement",
                        "src": "396:38:0"
                      }
                    ]
                  },
                  "id": 32,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "355:2:0"
                  },
                  "returnParameters": {
                    "id": 18,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "358:0:0"
                  },
                  "scope": 544,
                  "src": "344:97:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 43,
                    "nodeType": "Block",
                    "src": "468:86:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 38,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 35,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "486:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 36,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "490:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "486:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 37,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "500:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "486:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a65643a206f776e6572206f6e6c79",
                              "id": 39,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "507:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ecad1603cb330663c05e0483c52118d1d2baa70e6422f097b6efb6e1f7939ab3",
                                "typeString": "literal_string \"Not authorized: owner only\""
                              },
                              "value": "Not authorized: owner only"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ecad1603cb330663c05e0483c52118d1d2baa70e6422f097b6efb6e1f7939ab3",
                                "typeString": "literal_string \"Not authorized: owner only\""
                              }
                            ],
                            "id": 34,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "478:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 40,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "478:58:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41,
                        "nodeType": "ExpressionStatement",
                        "src": "478:58:0"
                      },
                      {
                        "id": 42,
                        "nodeType": "PlaceholderStatement",
                        "src": "546:1:0"
                      }
                    ]
                  },
                  "id": 44,
                  "name": "onlyOwner",
                  "nameLocation": "456:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "465:2:0"
                  },
                  "src": "447:107:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 55,
                    "nodeType": "Block",
                    "src": "586:135:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 47,
                                "name": "authorizedProviders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "617:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 50,
                              "indexExpression": {
                                "expression": {
                                  "id": 48,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "637:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "641:6:0",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "637:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "617:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617574686f72697a65643a2070726f7669646572206f6e6c79",
                              "id": 51,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "662:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7fd4aec67b5b3e0bb1e415a1fa7cd60a1b19624d22abb2f507f0b20d67ed879e",
                                "typeString": "literal_string \"Not authorized: provider only\""
                              },
                              "value": "Not authorized: provider only"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7fd4aec67b5b3e0bb1e415a1fa7cd60a1b19624d22abb2f507f0b20d67ed879e",
                                "typeString": "literal_string \"Not authorized: provider only\""
                              }
                            ],
                            "id": 46,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "596:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "596:107:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53,
                        "nodeType": "ExpressionStatement",
                        "src": "596:107:0"
                      },
                      {
                        "id": 54,
                        "nodeType": "PlaceholderStatement",
                        "src": "713:1:0"
                      }
                    ]
                  },
                  "id": 56,
                  "name": "onlyAuthorized",
                  "nameLocation": "569:14:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "583:2:0"
                  },
                  "src": "560:161:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "canonicalName": "LogisticsEvents.Location",
                  "id": 61,
                  "members": [
                    {
                      "constant": false,
                      "id": 58,
                      "mutability": "mutable",
                      "name": "longitud",
                      "nameLocation": "760:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "753:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 60,
                      "mutability": "mutable",
                      "name": "latitud",
                      "nameLocation": "785:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 61,
                      "src": "778:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 59,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "778:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Location",
                  "nameLocation": "734:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 544,
                  "src": "727:72:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "LogisticsEvents.ShipmentData",
                  "id": 79,
                  "members": [
                    {
                      "constant": false,
                      "id": 63,
                      "mutability": "mutable",
                      "name": "weight",
                      "nameLocation": "843:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "835:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 62,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "835:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 65,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "867:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "859:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 64,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "859:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67,
                      "mutability": "mutable",
                      "name": "batch",
                      "nameLocation": "890:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "882:13:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 66,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "882:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 70,
                      "mutability": "mutable",
                      "name": "origin",
                      "nameLocation": "914:6:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "905:15:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Location_$61_storage_ptr",
                        "typeString": "struct LogisticsEvents.Location"
                      },
                      "typeName": {
                        "id": 69,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 68,
                          "name": "Location",
                          "nameLocations": [
                            "905:8:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "905:8:0"
                        },
                        "referencedDeclaration": 61,
                        "src": "905:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Location_$61_storage_ptr",
                          "typeString": "struct LogisticsEvents.Location"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 73,
                      "mutability": "mutable",
                      "name": "destination",
                      "nameLocation": "939:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "930:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Location_$61_storage_ptr",
                        "typeString": "struct LogisticsEvents.Location"
                      },
                      "typeName": {
                        "id": 72,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 71,
                          "name": "Location",
                          "nameLocations": [
                            "930:8:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61,
                          "src": "930:8:0"
                        },
                        "referencedDeclaration": 61,
                        "src": "930:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Location_$61_storage_ptr",
                          "typeString": "struct LogisticsEvents.Location"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 75,
                      "mutability": "mutable",
                      "name": "description",
                      "nameLocation": "967:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "960:18:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 74,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "960:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 78,
                      "mutability": "mutable",
                      "name": "stage",
                      "nameLocation": "1002:5:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 79,
                      "src": "988:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ShipmentStage_$16",
                        "typeString": "enum LogisticsEvents.ShipmentStage"
                      },
                      "typeName": {
                        "id": 77,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 76,
                          "name": "ShipmentStage",
                          "nameLocations": [
                            "988:13:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 16,
                          "src": "988:13:0"
                        },
                        "referencedDeclaration": 16,
                        "src": "988:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ShipmentStage_$16",
                          "typeString": "enum LogisticsEvents.ShipmentStage"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ShipmentData",
                  "nameLocation": "812:12:0",
                  "nodeType": "StructDefinition",
                  "scope": 544,
                  "src": "805:209:0",
                  "visibility": "public"
                },
                {
                  "canonicalName": "LogisticsEvents.ShipmentUpdateData",
                  "id": 87,
                  "members": [
                    {
                      "constant": false,
                      "id": 82,
                      "mutability": "mutable",
                      "name": "shipment",
                      "nameLocation": "1069:8:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "1056:21:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ShipmentData_$79_storage_ptr",
                        "typeString": "struct LogisticsEvents.ShipmentData"
                      },
                      "typeName": {
                        "id": 81,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80,
                          "name": "ShipmentData",
                          "nameLocations": [
                            "1056:12:0"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 79,
                          "src": "1056:12:0"
                        },
                        "referencedDeclaration": 79,
                        "src": "1056:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ShipmentData_$79_storage_ptr",
                          "typeString": "struct LogisticsEvents.ShipmentData"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 84,
                      "mutability": "mutable",
                      "name": "previousBlockHash",
                      "nameLocation": "1095:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "1087:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 83,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1087:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 86,
                      "mutability": "mutable",
                      "name": "previousShipmentId",
                      "nameLocation": "1130:18:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 87,
                      "src": "1122:26:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 85,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1122:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ShipmentUpdateData",
                  "nameLocation": "1027:18:0",
                  "nodeType": "StructDefinition",
                  "scope": 544,
                  "src": "1020:135:0",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "eventSelector": "b118b853012c4ac72c351a1dbd3b9faaac7f8f06c66d8e93126c68ad5fbda25c",
                  "id": 98,
                  "name": "ShipmentCreated",
                  "nameLocation": "1167:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 89,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "shipmentId",
                        "nameLocation": "1208:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1192:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1192:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "batch",
                        "nameLocation": "1244:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1228:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1228:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1267:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1259:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1259:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 96,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "stage",
                        "nameLocation": "1300:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "1286:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ShipmentStage_$16",
                          "typeString": "enum LogisticsEvents.ShipmentStage"
                        },
                        "typeName": {
                          "id": 95,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 94,
                            "name": "ShipmentStage",
                            "nameLocations": [
                              "1286:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 16,
                            "src": "1286:13:0"
                          },
                          "referencedDeclaration": 16,
                          "src": "1286:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ShipmentStage_$16",
                            "typeString": "enum LogisticsEvents.ShipmentStage"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1182:129:0"
                  },
                  "src": "1161:151:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d0dff245ef8064ea30e5fe4169f26b2627d985e0d75b7d4c0b286b6858a2e702",
                  "id": 108,
                  "name": "ShipmentDetails",
                  "nameLocation": "1324:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 107,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 100,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "shipmentId",
                        "nameLocation": "1365:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1349:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 99,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1349:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 102,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "weight",
                        "nameLocation": "1393:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1385:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1385:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 104,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "1417:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1409:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1409:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 106,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "description",
                        "nameLocation": "1439:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 108,
                        "src": "1432:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 105,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1432:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1339:117:0"
                  },
                  "src": "1318:139:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e2ae1bbe20eb41ac95e45202700261faa3150e291d898b802257c5e330c80b38",
                  "id": 120,
                  "name": "ShipmentLocation",
                  "nameLocation": "1469:16:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "shipmentId",
                        "nameLocation": "1511:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1495:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1495:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 112,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "originLat",
                        "nameLocation": "1538:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1531:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 111,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1531:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 114,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "originLong",
                        "nameLocation": "1564:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1557:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 113,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1557:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 116,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destLat",
                        "nameLocation": "1591:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1584:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 115,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1584:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 118,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destLong",
                        "nameLocation": "1615:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 120,
                        "src": "1608:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 117,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1608:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1485:144:0"
                  },
                  "src": "1463:167:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "3d933174f9ea309dc67a49b099037e7f6797742b5c96a5e24b494ec18bcdfc19",
                  "id": 135,
                  "name": "ShipmentUpdated",
                  "nameLocation": "1642:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "shipmentId",
                        "nameLocation": "1683:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1667:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1667:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 124,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "batch",
                        "nameLocation": "1719:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1703:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1703:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 126,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1742:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1734:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "stage",
                        "nameLocation": "1775:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1761:19:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ShipmentStage_$16",
                          "typeString": "enum LogisticsEvents.ShipmentStage"
                        },
                        "typeName": {
                          "id": 128,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 127,
                            "name": "ShipmentStage",
                            "nameLocations": [
                              "1761:13:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 16,
                            "src": "1761:13:0"
                          },
                          "referencedDeclaration": 16,
                          "src": "1761:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ShipmentStage_$16",
                            "typeString": "enum LogisticsEvents.ShipmentStage"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 131,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousBlockHash",
                        "nameLocation": "1798:17:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1790:25:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1790:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "previousShipmentId",
                        "nameLocation": "1833:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 135,
                        "src": "1825:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1825:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1657:200:0"
                  },
                  "src": "1636:222:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "577ece94246e906e2e310d275806cdac2eef04882c7befcb0818fc8b9eb5828a",
                  "id": 145,
                  "name": "ShipmentUpdateDetails",
                  "nameLocation": "1870:21:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 144,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 137,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "shipmentId",
                        "nameLocation": "1917:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1901:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1901:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 139,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "weight",
                        "nameLocation": "1945:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1937:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1937:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 141,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "price",
                        "nameLocation": "1969:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1961:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1961:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 143,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "description",
                        "nameLocation": "1991:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 145,
                        "src": "1984:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1984:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1891:117:0"
                  },
                  "src": "1864:145:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "d3714fb6cf2960bb43fe730eda641301c962a3d12f1c10201fa1a77a0874ba83",
                  "id": 157,
                  "name": "ShipmentUpdateLocation",
                  "nameLocation": "2021:22:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 156,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 147,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "shipmentId",
                        "nameLocation": "2069:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "2053:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 146,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2053:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "originLat",
                        "nameLocation": "2096:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "2089:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 148,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2089:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 151,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "originLong",
                        "nameLocation": "2122:10:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "2115:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 150,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2115:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 153,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destLat",
                        "nameLocation": "2149:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "2142:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2142:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "destLong",
                        "nameLocation": "2173:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 157,
                        "src": "2166:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2166:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2043:144:0"
                  },
                  "src": "2015:173:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5ee18bb17d127d4409f69ab086fffad6d93acf3010f7a646b731b79ada5d2cdf",
                  "id": 163,
                  "name": "ProviderAuthorized",
                  "nameLocation": "2200:18:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 162,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 159,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "2235:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2219:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 158,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2219:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 161,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2253:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 163,
                        "src": "2245:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 160,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2218:45:0"
                  },
                  "src": "2194:70:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9bb673ad8a87cc3127dff95aacd54437e94c3262aca5f99a5ddc8a0e9ac71b19",
                  "id": 169,
                  "name": "ProviderRevoked",
                  "nameLocation": "2275:15:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 168,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 165,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "2307:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "2291:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 164,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 167,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "2325:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 169,
                        "src": "2317:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 166,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2290:45:0"
                  },
                  "src": "2269:67:0"
                },
                {
                  "body": {
                    "id": 206,
                    "nodeType": "Block",
                    "src": "2406:263:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 182,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 177,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "2424:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 180,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2444:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 179,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2436:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 178,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2436:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 181,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2436:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2424:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642070726f76696465722061646472657373",
                              "id": 183,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2448:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4bcfdad90cbd61c8c5caa292df03d86574ade1e344f67f3d41fe4d00b98774fc",
                                "typeString": "literal_string \"Invalid provider address\""
                              },
                              "value": "Invalid provider address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4bcfdad90cbd61c8c5caa292df03d86574ade1e344f67f3d41fe4d00b98774fc",
                                "typeString": "literal_string \"Invalid provider address\""
                              }
                            ],
                            "id": 176,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2416:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 184,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2416:59:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 185,
                        "nodeType": "ExpressionStatement",
                        "src": "2416:59:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2493:30:0",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 187,
                                  "name": "authorizedProviders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 7,
                                  "src": "2494:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 189,
                                "indexExpression": {
                                  "id": 188,
                                  "name": "provider",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 171,
                                  "src": "2514:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2494:29:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f766964657220616c726561647920617574686f72697a6564",
                              "id": 191,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2525:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a",
                                "typeString": "literal_string \"Provider already authorized\""
                              },
                              "value": "Provider already authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18062ff471b9a33099a67084ab8e7f2145a1b46b4f565c3de108915bfd89f67a",
                                "typeString": "literal_string \"Provider already authorized\""
                              }
                            ],
                            "id": 186,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2485:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 192,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2485:70:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 193,
                        "nodeType": "ExpressionStatement",
                        "src": "2485:70:0"
                      },
                      {
                        "expression": {
                          "id": 198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 194,
                              "name": "authorizedProviders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2566:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 196,
                            "indexExpression": {
                              "id": 195,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "2586:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2566:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2598:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2566:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 199,
                        "nodeType": "ExpressionStatement",
                        "src": "2566:36:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 201,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "2636:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 202,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2646:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 203,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2652:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2646:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 200,
                            "name": "ProviderAuthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "2617:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2617:45:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 205,
                        "nodeType": "EmitStatement",
                        "src": "2612:50:0"
                      }
                    ]
                  },
                  "functionSelector": "112ea262",
                  "id": 207,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 174,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 173,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2396:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 44,
                        "src": "2396:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2396:9:0"
                    }
                  ],
                  "name": "authorizeProvider",
                  "nameLocation": "2351:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "2377:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 207,
                        "src": "2369:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2369:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2368:18:0"
                  },
                  "returnParameters": {
                    "id": 175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2406:0:0"
                  },
                  "scope": 544,
                  "src": "2342:327:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 240,
                    "nodeType": "Block",
                    "src": "2736:246:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 217,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 215,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 209,
                                "src": "2754:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 216,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "2766:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2754:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43616e6e6f74207265766f6b65206f776e6572",
                              "id": 218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2773:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8c3d573cf77ce63447440ddf3121120e5a09006d9547e99aaef8a42e7ebeedda",
                                "typeString": "literal_string \"Cannot revoke owner\""
                              },
                              "value": "Cannot revoke owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8c3d573cf77ce63447440ddf3121120e5a09006d9547e99aaef8a42e7ebeedda",
                                "typeString": "literal_string \"Cannot revoke owner\""
                              }
                            ],
                            "id": 214,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2746:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2746:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 220,
                        "nodeType": "ExpressionStatement",
                        "src": "2746:49:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 222,
                                "name": "authorizedProviders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7,
                                "src": "2813:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                  "typeString": "mapping(address => bool)"
                                }
                              },
                              "id": 224,
                              "indexExpression": {
                                "id": 223,
                                "name": "provider",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 209,
                                "src": "2833:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2813:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "50726f7669646572206e6f7420617574686f72697a6564",
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2844:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c",
                                "typeString": "literal_string \"Provider not authorized\""
                              },
                              "value": "Provider not authorized"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6ab62a68bfff85b4512ab9c27ef663ae4fca6c23e2fe8e3c1cd2ce9afe13db2c",
                                "typeString": "literal_string \"Provider not authorized\""
                              }
                            ],
                            "id": 221,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2805:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2805:65:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "2805:65:0"
                      },
                      {
                        "expression": {
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 228,
                              "name": "authorizedProviders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "2881:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 230,
                            "indexExpression": {
                              "id": 229,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 209,
                              "src": "2901:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2881:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 231,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2913:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2881:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "2881:37:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 235,
                              "name": "provider",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 209,
                              "src": "2949:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 236,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "2959:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2965:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "2959:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 234,
                            "name": "ProviderRevoked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "2933:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2933:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 239,
                        "nodeType": "EmitStatement",
                        "src": "2928:47:0"
                      }
                    ]
                  },
                  "functionSelector": "ac1e8b8e",
                  "id": 241,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 212,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 211,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2726:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 44,
                        "src": "2726:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2726:9:0"
                    }
                  ],
                  "name": "revokeProvider",
                  "nameLocation": "2684:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 209,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "2707:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 241,
                        "src": "2699:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 208,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2699:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2698:18:0"
                  },
                  "returnParameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2736:0:0"
                  },
                  "scope": 544,
                  "src": "2675:307:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 364,
                    "nodeType": "Block",
                    "src": "3099:1067:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 252,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "3117:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3122:6:0",
                                "memberName": "weight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63,
                                "src": "3117:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3131:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3117:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "576569676874206d7573742062652067726561746572207468616e2030",
                              "id": 256,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3134:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588",
                                "typeString": "literal_string \"Weight must be greater than 0\""
                              },
                              "value": "Weight must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588",
                                "typeString": "literal_string \"Weight must be greater than 0\""
                              }
                            ],
                            "id": 251,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3109:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3109:57:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 258,
                        "nodeType": "ExpressionStatement",
                        "src": "3109:57:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 260,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "3184:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 261,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3189:5:0",
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "3184:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3197:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3184:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                              "id": 264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3200:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              },
                              "value": "Price must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              }
                            ],
                            "id": 259,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3176:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3176:55:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 266,
                        "nodeType": "ExpressionStatement",
                        "src": "3176:55:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 276,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 270,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3268:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 271,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3273:6:0",
                                        "memberName": "origin",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 70,
                                        "src": "3268:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3280:7:0",
                                      "memberName": "latitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 60,
                                      "src": "3268:19:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 269,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3262:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 268,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3262:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3262:26:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 274,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3289:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3262:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 275,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3298:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3262:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f726967696e206c61746974756465207265717569726564",
                              "id": 277,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3313:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_14035d8334a35fd6e988cf29452c834e9cd7f1bbde7b19f7389fd469158be1a3",
                                "typeString": "literal_string \"Origin latitude required\""
                              },
                              "value": "Origin latitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_14035d8334a35fd6e988cf29452c834e9cd7f1bbde7b19f7389fd469158be1a3",
                                "typeString": "literal_string \"Origin latitude required\""
                              }
                            ],
                            "id": 267,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3241:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3241:108:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 279,
                        "nodeType": "ExpressionStatement",
                        "src": "3241:108:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 283,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3386:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 284,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3391:6:0",
                                        "memberName": "origin",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 70,
                                        "src": "3386:11:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 285,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3398:8:0",
                                      "memberName": "longitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "3386:20:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 282,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3380:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 281,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3380:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3380:27:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3408:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3380:34:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3417:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3380:38:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f726967696e206c6f6e676974756465207265717569726564",
                              "id": 290,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3432:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b4d86de1d64b97ea53ea93482e07a0e600fabde183f431af85dcaf8d5da9ac44",
                                "typeString": "literal_string \"Origin longitude required\""
                              },
                              "value": "Origin longitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b4d86de1d64b97ea53ea93482e07a0e600fabde183f431af85dcaf8d5da9ac44",
                                "typeString": "literal_string \"Origin longitude required\""
                              }
                            ],
                            "id": 280,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3359:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3359:110:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 292,
                        "nodeType": "ExpressionStatement",
                        "src": "3359:110:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 302,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 296,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3506:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 297,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3511:11:0",
                                        "memberName": "destination",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "3506:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 298,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3523:7:0",
                                      "memberName": "latitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 60,
                                      "src": "3506:24:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 295,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3500:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 294,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3500:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3500:31:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3532:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3500:38:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 301,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3541:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3500:42:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44657374696e6174696f6e206c61746974756465207265717569726564",
                              "id": 303,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3556:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_581b45c4125d8463f2d83c0abd37ea8d920e50e6aa6cb12e74b1e7ef3ca0eb14",
                                "typeString": "literal_string \"Destination latitude required\""
                              },
                              "value": "Destination latitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_581b45c4125d8463f2d83c0abd37ea8d920e50e6aa6cb12e74b1e7ef3ca0eb14",
                                "typeString": "literal_string \"Destination latitude required\""
                              }
                            ],
                            "id": 293,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3479:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3479:118:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 305,
                        "nodeType": "ExpressionStatement",
                        "src": "3479:118:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 315,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "id": 309,
                                          "name": "data",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 244,
                                          "src": "3634:4:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3639:11:0",
                                        "memberName": "destination",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "3634:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "3651:8:0",
                                      "memberName": "longitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "3634:25:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 308,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3628:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 307,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3628:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 312,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3628:32:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3661:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3628:39:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3670:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3628:43:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44657374696e6174696f6e206c6f6e676974756465207265717569726564",
                              "id": 316,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3685:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87ab001663f607552e9bd0a49f6ba4b3598228b1f7892bff3e499d368730c6c9",
                                "typeString": "literal_string \"Destination longitude required\""
                              },
                              "value": "Destination longitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_87ab001663f607552e9bd0a49f6ba4b3598228b1f7892bff3e499d368730c6c9",
                                "typeString": "literal_string \"Destination longitude required\""
                              }
                            ],
                            "id": 306,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3607:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3607:120:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 318,
                        "nodeType": "ExpressionStatement",
                        "src": "3607:120:0"
                      },
                      {
                        "expression": {
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 319,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 249,
                            "src": "3738:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 320,
                            "name": "nextShipmentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "3743:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3738:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 322,
                        "nodeType": "ExpressionStatement",
                        "src": "3738:19:0"
                      },
                      {
                        "expression": {
                          "id": 324,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "3767:16:0",
                          "subExpression": {
                            "id": 323,
                            "name": "nextShipmentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "3769:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 325,
                        "nodeType": "ExpressionStatement",
                        "src": "3767:16:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 327,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "3815:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 328,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3819:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 329,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3824:5:0",
                              "memberName": "batch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "3819:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 330,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3831:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3837:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3831:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 332,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3848:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3853:5:0",
                              "memberName": "stage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78,
                              "src": "3848:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ShipmentStage_$16",
                                "typeString": "enum LogisticsEvents.ShipmentStage"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ShipmentStage_$16",
                                "typeString": "enum LogisticsEvents.ShipmentStage"
                              }
                            ],
                            "id": 326,
                            "name": "ShipmentCreated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 98,
                            "src": "3799:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_ShipmentStage_$16_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,enum LogisticsEvents.ShipmentStage)"
                            }
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3799:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 335,
                        "nodeType": "EmitStatement",
                        "src": "3794:65:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 337,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "3891:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 338,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3895:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3900:6:0",
                              "memberName": "weight",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "3895:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 340,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3908:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 341,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3913:5:0",
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65,
                              "src": "3908:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 342,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "3920:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3925:11:0",
                              "memberName": "description",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "3920:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 336,
                            "name": "ShipmentDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 108,
                            "src": "3875:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3875:62:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 345,
                        "nodeType": "EmitStatement",
                        "src": "3870:67:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 347,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 249,
                              "src": "3983:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 348,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "3999:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 349,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4004:6:0",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "3999:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 350,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4011:7:0",
                              "memberName": "latitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "3999:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 351,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "4032:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4037:6:0",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "4032:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4044:8:0",
                              "memberName": "longitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "4032:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 354,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "4066:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 355,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4071:11:0",
                                "memberName": "destination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "4066:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4083:7:0",
                              "memberName": "latitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "4066:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 357,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "4104:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4109:11:0",
                                "memberName": "destination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "4104:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4121:8:0",
                              "memberName": "longitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "4104:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 346,
                            "name": "ShipmentLocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 120,
                            "src": "3953:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory,string memory,string memory,string memory)"
                            }
                          },
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3953:186:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 361,
                        "nodeType": "EmitStatement",
                        "src": "3948:191:0"
                      },
                      {
                        "expression": {
                          "id": 362,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 249,
                          "src": "4157:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 250,
                        "id": 363,
                        "nodeType": "Return",
                        "src": "4150:9:0"
                      }
                    ]
                  },
                  "functionSelector": "91e1d4f3",
                  "id": 365,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 247,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 246,
                        "name": "onlyAuthorized",
                        "nameLocations": [
                          "3063:14:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 56,
                        "src": "3063:14:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3063:14:0"
                    }
                  ],
                  "name": "createShipment",
                  "nameLocation": "2997:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 244,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "3043:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3021:26:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                          "typeString": "struct LogisticsEvents.ShipmentData"
                        },
                        "typeName": {
                          "id": 243,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 242,
                            "name": "ShipmentData",
                            "nameLocations": [
                              "3021:12:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79,
                            "src": "3021:12:0"
                          },
                          "referencedDeclaration": 79,
                          "src": "3021:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ShipmentData_$79_storage_ptr",
                            "typeString": "struct LogisticsEvents.ShipmentData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3011:42:0"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "3095:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 365,
                        "src": "3087:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3087:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3086:12:0"
                  },
                  "scope": 544,
                  "src": "2988:1178:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 507,
                    "nodeType": "Block",
                    "src": "4289:1403:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 376,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "4307:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                      "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                    }
                                  },
                                  "id": 377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4312:8:0",
                                  "memberName": "shipment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "4307:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 378,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4321:6:0",
                                "memberName": "weight",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 63,
                                "src": "4307:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4330:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4307:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "576569676874206d7573742062652067726561746572207468616e2030",
                              "id": 381,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4333:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588",
                                "typeString": "literal_string \"Weight must be greater than 0\""
                              },
                              "value": "Weight must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9e0c2a7d5dd8eaf274da7cfbc2247c9a272319ddd7c4dd3ea5bf6d1b9cadf588",
                                "typeString": "literal_string \"Weight must be greater than 0\""
                              }
                            ],
                            "id": 375,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4299:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4299:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 383,
                        "nodeType": "ExpressionStatement",
                        "src": "4299:66:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 385,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "4383:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                      "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                    }
                                  },
                                  "id": 386,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4388:8:0",
                                  "memberName": "shipment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "4383:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4397:5:0",
                                "memberName": "price",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 65,
                                "src": "4383:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4405:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4383:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5072696365206d7573742062652067726561746572207468616e2030",
                              "id": 390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4408:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              },
                              "value": "Price must be greater than 0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f496d2a6b8c6dfd2fdeb51133639f7cbcc6985234f7207231dd11f4a16998dde",
                                "typeString": "literal_string \"Price must be greater than 0\""
                              }
                            ],
                            "id": 384,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4375:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4375:64:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 392,
                        "nodeType": "ExpressionStatement",
                        "src": "4375:64:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "expression": {
                                            "id": 396,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "4476:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                              "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                            }
                                          },
                                          "id": 397,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4481:8:0",
                                          "memberName": "shipment",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 82,
                                          "src": "4476:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 398,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4490:6:0",
                                        "memberName": "origin",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 70,
                                        "src": "4476:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 399,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4497:7:0",
                                      "memberName": "latitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 60,
                                      "src": "4476:28:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 395,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4470:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 394,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4470:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 400,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4470:35:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 401,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4506:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4470:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 402,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4515:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4470:46:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f726967696e206c61746974756465207265717569726564",
                              "id": 404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4530:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_14035d8334a35fd6e988cf29452c834e9cd7f1bbde7b19f7389fd469158be1a3",
                                "typeString": "literal_string \"Origin latitude required\""
                              },
                              "value": "Origin latitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_14035d8334a35fd6e988cf29452c834e9cd7f1bbde7b19f7389fd469158be1a3",
                                "typeString": "literal_string \"Origin latitude required\""
                              }
                            ],
                            "id": 393,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4449:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4449:117:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 406,
                        "nodeType": "ExpressionStatement",
                        "src": "4449:117:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "expression": {
                                            "id": 410,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "4603:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                              "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                            }
                                          },
                                          "id": 411,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4608:8:0",
                                          "memberName": "shipment",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 82,
                                          "src": "4603:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 412,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4617:6:0",
                                        "memberName": "origin",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 70,
                                        "src": "4603:20:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 413,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4624:8:0",
                                      "memberName": "longitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "4603:29:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4597:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 408,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4597:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 414,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4597:36:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 415,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4634:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4597:43:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 416,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4643:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4597:47:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f726967696e206c6f6e676974756465207265717569726564",
                              "id": 418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4658:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b4d86de1d64b97ea53ea93482e07a0e600fabde183f431af85dcaf8d5da9ac44",
                                "typeString": "literal_string \"Origin longitude required\""
                              },
                              "value": "Origin longitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b4d86de1d64b97ea53ea93482e07a0e600fabde183f431af85dcaf8d5da9ac44",
                                "typeString": "literal_string \"Origin longitude required\""
                              }
                            ],
                            "id": 407,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4576:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4576:119:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 420,
                        "nodeType": "ExpressionStatement",
                        "src": "4576:119:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 431,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "expression": {
                                            "id": 424,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "4732:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                              "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                            }
                                          },
                                          "id": 425,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4737:8:0",
                                          "memberName": "shipment",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 82,
                                          "src": "4732:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 426,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4746:11:0",
                                        "memberName": "destination",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "4732:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 427,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4758:7:0",
                                      "memberName": "latitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 60,
                                      "src": "4732:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4726:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 422,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4726:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4726:40:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 429,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4767:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4726:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4776:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4726:51:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44657374696e6174696f6e206c61746974756465207265717569726564",
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4791:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_581b45c4125d8463f2d83c0abd37ea8d920e50e6aa6cb12e74b1e7ef3ca0eb14",
                                "typeString": "literal_string \"Destination latitude required\""
                              },
                              "value": "Destination latitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_581b45c4125d8463f2d83c0abd37ea8d920e50e6aa6cb12e74b1e7ef3ca0eb14",
                                "typeString": "literal_string \"Destination latitude required\""
                              }
                            ],
                            "id": 421,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4705:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4705:127:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "4705:127:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "expression": {
                                          "expression": {
                                            "id": 438,
                                            "name": "data",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 368,
                                            "src": "4869:4:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                              "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                            }
                                          },
                                          "id": 439,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "4874:8:0",
                                          "memberName": "shipment",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 82,
                                          "src": "4869:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                            "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                          }
                                        },
                                        "id": 440,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4883:11:0",
                                        "memberName": "destination",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 73,
                                        "src": "4869:25:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                          "typeString": "struct LogisticsEvents.Location calldata"
                                        }
                                      },
                                      "id": 441,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "4895:8:0",
                                      "memberName": "longitud",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 58,
                                      "src": "4869:34:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_calldata_ptr",
                                        "typeString": "string calldata"
                                      }
                                    ],
                                    "id": 437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "4863:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 436,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "4863:5:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 442,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4863:41:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_calldata_ptr",
                                    "typeString": "bytes calldata"
                                  }
                                },
                                "id": 443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4905:6:0",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "4863:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 444,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4914:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4863:52:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "44657374696e6174696f6e206c6f6e676974756465207265717569726564",
                              "id": 446,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4929:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_87ab001663f607552e9bd0a49f6ba4b3598228b1f7892bff3e499d368730c6c9",
                                "typeString": "literal_string \"Destination longitude required\""
                              },
                              "value": "Destination longitude required"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_87ab001663f607552e9bd0a49f6ba4b3598228b1f7892bff3e499d368730c6c9",
                                "typeString": "literal_string \"Destination longitude required\""
                              }
                            ],
                            "id": 435,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4842:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4842:129:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 448,
                        "nodeType": "ExpressionStatement",
                        "src": "4842:129:0"
                      },
                      {
                        "expression": {
                          "id": 451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 449,
                            "name": "id",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 373,
                            "src": "4982:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 450,
                            "name": "nextShipmentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "4987:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4982:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 452,
                        "nodeType": "ExpressionStatement",
                        "src": "4982:19:0"
                      },
                      {
                        "expression": {
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": true,
                          "src": "5011:16:0",
                          "subExpression": {
                            "id": 453,
                            "name": "nextShipmentId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9,
                            "src": "5013:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 455,
                        "nodeType": "ExpressionStatement",
                        "src": "5011:16:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 457,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "5072:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 458,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5088:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                  }
                                },
                                "id": 459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5093:8:0",
                                "memberName": "shipment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 82,
                                "src": "5088:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5102:5:0",
                              "memberName": "batch",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 67,
                              "src": "5088:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 461,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5121:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5127:9:0",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5121:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 463,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5150:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                  }
                                },
                                "id": 464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5155:8:0",
                                "memberName": "shipment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 82,
                                "src": "5150:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5164:5:0",
                              "memberName": "stage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78,
                              "src": "5150:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ShipmentStage_$16",
                                "typeString": "enum LogisticsEvents.ShipmentStage"
                              }
                            },
                            {
                              "expression": {
                                "id": 466,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "5183:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5188:17:0",
                              "memberName": "previousBlockHash",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 84,
                              "src": "5183:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 468,
                                "name": "data",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "5219:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                }
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5224:18:0",
                              "memberName": "previousShipmentId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 86,
                              "src": "5219:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_ShipmentStage_$16",
                                "typeString": "enum LogisticsEvents.ShipmentStage"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 456,
                            "name": "ShipmentUpdated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135,
                            "src": "5043:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_enum$_ShipmentStage_$16_$_t_bytes32_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,enum LogisticsEvents.ShipmentStage,bytes32,uint256)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5043:209:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "EmitStatement",
                        "src": "5038:214:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 473,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "5303:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 474,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5319:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                  }
                                },
                                "id": 475,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5324:8:0",
                                "memberName": "shipment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 82,
                                "src": "5319:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 476,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5333:6:0",
                              "memberName": "weight",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 63,
                              "src": "5319:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 477,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5353:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                  }
                                },
                                "id": 478,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5358:8:0",
                                "memberName": "shipment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 82,
                                "src": "5353:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5367:5:0",
                              "memberName": "price",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 65,
                              "src": "5353:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "id": 480,
                                  "name": "data",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5386:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                  }
                                },
                                "id": 481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5391:8:0",
                                "memberName": "shipment",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 82,
                                "src": "5386:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                }
                              },
                              "id": 482,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5400:11:0",
                              "memberName": "description",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 75,
                              "src": "5386:25:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 472,
                            "name": "ShipmentUpdateDetails",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "5268:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256,string memory)"
                            }
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5268:153:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 484,
                        "nodeType": "EmitStatement",
                        "src": "5263:158:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 486,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 373,
                              "src": "5473:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 487,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "5489:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                      "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                    }
                                  },
                                  "id": 488,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5494:8:0",
                                  "memberName": "shipment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "5489:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5503:6:0",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "5489:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5510:7:0",
                              "memberName": "latitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "5489:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 491,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "5531:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                      "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                    }
                                  },
                                  "id": 492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5536:8:0",
                                  "memberName": "shipment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "5531:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 493,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5545:6:0",
                                "memberName": "origin",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 70,
                                "src": "5531:20:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5552:8:0",
                              "memberName": "longitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "5531:29:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 495,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "5574:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                      "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                    }
                                  },
                                  "id": 496,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5579:8:0",
                                  "memberName": "shipment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "5574:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 497,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5588:11:0",
                                "memberName": "destination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "5574:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5600:7:0",
                              "memberName": "latitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60,
                              "src": "5574:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            {
                              "expression": {
                                "expression": {
                                  "expression": {
                                    "id": 499,
                                    "name": "data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "5621:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                                      "typeString": "struct LogisticsEvents.ShipmentUpdateData calldata"
                                    }
                                  },
                                  "id": 500,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "5626:8:0",
                                  "memberName": "shipment",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 82,
                                  "src": "5621:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ShipmentData_$79_calldata_ptr",
                                    "typeString": "struct LogisticsEvents.ShipmentData calldata"
                                  }
                                },
                                "id": 501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5635:11:0",
                                "memberName": "destination",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 73,
                                "src": "5621:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Location_$61_calldata_ptr",
                                  "typeString": "struct LogisticsEvents.Location calldata"
                                }
                              },
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5647:8:0",
                              "memberName": "longitud",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 58,
                              "src": "5621:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              },
                              {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            ],
                            "id": 485,
                            "name": "ShipmentUpdateLocation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 157,
                            "src": "5437:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (uint256,string memory,string memory,string memory,string memory)"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5437:228:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 504,
                        "nodeType": "EmitStatement",
                        "src": "5432:233:0"
                      },
                      {
                        "expression": {
                          "id": 505,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 373,
                          "src": "5683:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 374,
                        "id": 506,
                        "nodeType": "Return",
                        "src": "5676:9:0"
                      }
                    ]
                  },
                  "functionSelector": "d44fadca",
                  "id": 508,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 371,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 370,
                        "name": "onlyAuthorized",
                        "nameLocations": [
                          "4253:14:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 56,
                        "src": "4253:14:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4253:14:0"
                    }
                  ],
                  "name": "updateShipment",
                  "nameLocation": "4181:14:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "4233:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 508,
                        "src": "4205:32:0",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_calldata_ptr",
                          "typeString": "struct LogisticsEvents.ShipmentUpdateData"
                        },
                        "typeName": {
                          "id": 367,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 366,
                            "name": "ShipmentUpdateData",
                            "nameLocations": [
                              "4205:18:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 87,
                            "src": "4205:18:0"
                          },
                          "referencedDeclaration": 87,
                          "src": "4205:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ShipmentUpdateData_$87_storage_ptr",
                            "typeString": "struct LogisticsEvents.ShipmentUpdateData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4195:48:0"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "id",
                        "nameLocation": "4285:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 508,
                        "src": "4277:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4277:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4276:12:0"
                  },
                  "scope": 544,
                  "src": "4172:1520:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 542,
                    "nodeType": "Block",
                    "src": "5762:221:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 516,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5780:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 519,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5800:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 518,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5792:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 517,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5792:7:0",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5792:10:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5780:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964206e6577206f776e65722061646472657373",
                              "id": 522,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5804:27:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222",
                                "typeString": "literal_string \"Invalid new owner address\""
                              },
                              "value": "Invalid new owner address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_deeba0d3adbbc38c1d0b1d0650cba0e4d1986a9c041e0d8f4cd8a10c5d9fa222",
                                "typeString": "literal_string \"Invalid new owner address\""
                              }
                            ],
                            "id": 515,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5772:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5772:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 524,
                        "nodeType": "ExpressionStatement",
                        "src": "5772:60:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 526,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 510,
                                "src": "5850:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 527,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3,
                                "src": "5862:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "5850:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6577206f776e65722073616d652061732063757272656e74206f776e6572",
                              "id": 529,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5869:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a01151ef9aa8ef4dddb4d65515066a9556f1a2df65d39f7f711f7781e25c113a",
                                "typeString": "literal_string \"New owner same as current owner\""
                              },
                              "value": "New owner same as current owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a01151ef9aa8ef4dddb4d65515066a9556f1a2df65d39f7f711f7781e25c113a",
                                "typeString": "literal_string \"New owner same as current owner\""
                              }
                            ],
                            "id": 525,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5842:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5842:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 531,
                        "nodeType": "ExpressionStatement",
                        "src": "5842:61:0"
                      },
                      {
                        "expression": {
                          "id": 534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 532,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "5914:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 533,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 510,
                            "src": "5922:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5914:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 535,
                        "nodeType": "ExpressionStatement",
                        "src": "5914:16:0"
                      },
                      {
                        "expression": {
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 536,
                              "name": "authorizedProviders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7,
                              "src": "5940:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 538,
                            "indexExpression": {
                              "id": 537,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 510,
                              "src": "5960:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5940:29:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5972:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5940:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 541,
                        "nodeType": "ExpressionStatement",
                        "src": "5940:36:0"
                      }
                    ]
                  },
                  "functionSelector": "f2fde38b",
                  "id": 543,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 513,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 512,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "5752:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 44,
                        "src": "5752:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5752:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "5707:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 511,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "5733:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 543,
                        "src": "5725:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5725:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5724:18:0"
                  },
                  "returnParameters": {
                    "id": 514,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5762:0:0"
                  },
                  "scope": 544,
                  "src": "5698:285:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 545,
              "src": "58:5927:0",
              "usedErrors": [],
              "usedEvents": [
                98,
                108,
                120,
                135,
                145,
                157,
                163,
                169
              ]
            }
          ],
          "src": "32:5954:0"
        }
      }
    },
    "contracts": {
      "contracts/LogisticsTracking.sol": {
        "LogisticsEvents": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ProviderAuthorized",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "ProviderRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "shipmentId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "batch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum LogisticsEvents.ShipmentStage",
                  "name": "stage",
                  "type": "uint8"
                }
              ],
              "name": "ShipmentCreated",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "shipmentId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ShipmentDetails",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "shipmentId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "originLat",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "originLong",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "destLat",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "destLong",
                  "type": "string"
                }
              ],
              "name": "ShipmentLocation",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "shipmentId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "weight",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "description",
                  "type": "string"
                }
              ],
              "name": "ShipmentUpdateDetails",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "shipmentId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "originLat",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "originLong",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "destLat",
                  "type": "string"
                },
                {
                  "indexed": false,
                  "internalType": "string",
                  "name": "destLong",
                  "type": "string"
                }
              ],
              "name": "ShipmentUpdateLocation",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "shipmentId",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "batch",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "enum LogisticsEvents.ShipmentStage",
                  "name": "stage",
                  "type": "uint8"
                },
                {
                  "indexed": false,
                  "internalType": "bytes32",
                  "name": "previousBlockHash",
                  "type": "bytes32"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "previousShipmentId",
                  "type": "uint256"
                }
              ],
              "name": "ShipmentUpdated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "name": "authorizeProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "authorizedProviders",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "weight",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "price",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "batch",
                      "type": "uint256"
                    },
                    {
                      "components": [
                        {
                          "internalType": "string",
                          "name": "longitud",
                          "type": "string"
                        },
                        {
                          "internalType": "string",
                          "name": "latitud",
                          "type": "string"
                        }
                      ],
                      "internalType": "struct LogisticsEvents.Location",
                      "name": "origin",
                      "type": "tuple"
                    },
                    {
                      "components": [
                        {
                          "internalType": "string",
                          "name": "longitud",
                          "type": "string"
                        },
                        {
                          "internalType": "string",
                          "name": "latitud",
                          "type": "string"
                        }
                      ],
                      "internalType": "struct LogisticsEvents.Location",
                      "name": "destination",
                      "type": "tuple"
                    },
                    {
                      "internalType": "string",
                      "name": "description",
                      "type": "string"
                    },
                    {
                      "internalType": "enum LogisticsEvents.ShipmentStage",
                      "name": "stage",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct LogisticsEvents.ShipmentData",
                  "name": "data",
                  "type": "tuple"
                }
              ],
              "name": "createShipment",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nextShipmentId",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                }
              ],
              "name": "revokeProvider",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "uint256",
                          "name": "weight",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "price",
                          "type": "uint256"
                        },
                        {
                          "internalType": "uint256",
                          "name": "batch",
                          "type": "uint256"
                        },
                        {
                          "components": [
                            {
                              "internalType": "string",
                              "name": "longitud",
                              "type": "string"
                            },
                            {
                              "internalType": "string",
                              "name": "latitud",
                              "type": "string"
                            }
                          ],
                          "internalType": "struct LogisticsEvents.Location",
                          "name": "origin",
                          "type": "tuple"
                        },
                        {
                          "components": [
                            {
                              "internalType": "string",
                              "name": "longitud",
                              "type": "string"
                            },
                            {
                              "internalType": "string",
                              "name": "latitud",
                              "type": "string"
                            }
                          ],
                          "internalType": "struct LogisticsEvents.Location",
                          "name": "destination",
                          "type": "tuple"
                        },
                        {
                          "internalType": "string",
                          "name": "description",
                          "type": "string"
                        },
                        {
                          "internalType": "enum LogisticsEvents.ShipmentStage",
                          "name": "stage",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct LogisticsEvents.ShipmentData",
                      "name": "shipment",
                      "type": "tuple"
                    },
                    {
                      "internalType": "bytes32",
                      "name": "previousBlockHash",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "previousShipmentId",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct LogisticsEvents.ShipmentUpdateData",
                  "name": "data",
                  "type": "tuple"
                }
              ],
              "name": "updateShipment",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_arguments": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Default",
              "level_middle_end_size": "Z"
            },
            "revive_pallet_version": null,
            "revive_version": "0.3.0+commit.ed60869.llvm-18.1.8",
            "solc_metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProviderAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProviderRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LogisticsEvents.ShipmentStage\",\"name\":\"stage\",\"type\":\"uint8\"}],\"name\":\"ShipmentCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ShipmentDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"originLat\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"originLong\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destLat\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destLong\",\"type\":\"string\"}],\"name\":\"ShipmentLocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ShipmentUpdateDetails\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"originLat\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"originLong\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destLat\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"destLong\",\"type\":\"string\"}],\"name\":\"ShipmentUpdateLocation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"shipmentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum LogisticsEvents.ShipmentStage\",\"name\":\"stage\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"previousBlockHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousShipmentId\",\"type\":\"uint256\"}],\"name\":\"ShipmentUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"authorizeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedProviders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"longitud\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latitud\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.Location\",\"name\":\"origin\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"longitud\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latitud\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.Location\",\"name\":\"destination\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum LogisticsEvents.ShipmentStage\",\"name\":\"stage\",\"type\":\"uint8\"}],\"internalType\":\"struct LogisticsEvents.ShipmentData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"createShipment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextShipmentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"}],\"name\":\"revokeProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"batch\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"longitud\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latitud\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.Location\",\"name\":\"origin\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"longitud\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"latitud\",\"type\":\"string\"}],\"internalType\":\"struct LogisticsEvents.Location\",\"name\":\"destination\",\"type\":\"tuple\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"enum LogisticsEvents.ShipmentStage\",\"name\":\"stage\",\"type\":\"uint8\"}],\"internalType\":\"struct LogisticsEvents.ShipmentData\",\"name\":\"shipment\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"previousBlockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"previousShipmentId\",\"type\":\"uint256\"}],\"internalType\":\"struct LogisticsEvents.ShipmentUpdateData\",\"name\":\"data\",\"type\":\"tuple\"}],\"name\":\"updateShipment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LogisticsTracking.sol\":\"LogisticsEvents\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LogisticsTracking.sol\":{\"keccak256\":\"0x5a82243eb954e6d389d21f1de7c88811fb67ce4e02eac315543fd61f03f34c19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0716044d76e0b47e26ae0082c55825fc7fea659004b894c919d2c2bd48f0f24\",\"dweb:/ipfs/QmYcEn6U3z52vxAYoV6gmyMa9JRaNn4Z1RbT2heHiEmvyi\"]}},\"version\":1}",
            "solc_version": "0.8.20+commit.a1b79de6.Linux.g++"
          },
          "evm": {
            "assembly": "// RO data = 0/0 bytes\n// RW data = 584/66176 bytes\n// Stack size = 32768 bytes\n\n// Instructions = 7070\n// Code size = 25135 bytes\n\n      : @0 (gas: 2)\n     0: a1 = i32 [0x20250]\n     5: jump @43 if a1 == 0\n      : @1 (gas: 4)\n     9: a0 = 0x30280\n    14: i32 a0 = a0 + 0\n    16: ecalli 9 // 'set_immutable_data'\n    18: jump @43\n      : @2 (gas: 8)\n    21: sp = sp + 0xfffffffffffffff0\n    24: u64 [sp + 0x8] = ra\n    27: u64 [sp] = s0\n    29: a2 = a1\n    31: s0 = a0\n    33: a1 = 0x20\n    36: a0 = a2\n    38: ra = 2, jump @14\n      : @3 [@dyn 1] (gas: 100)\n    43: a1 = u8 [a0 + 0x1]\n    46: a2 = u8 [a0]\n    48: a3 = u8 [a0 + 0x2]\n    51: a4 = u8 [a0 + 0x3]\n    54: a1 = a1 << 0x8\n    57: a1 = a1 | a2\n    60: a3 = a3 << 0x10\n    63: a4 = a4 << 0x18\n    66: a3 = a3 | a4\n    69: a1 = a1 | a3\n    72: a2 = u8 [a0 + 0x5]\n    75: a3 = u8 [a0 + 0x4]\n    78: a4 = u8 [a0 + 0x6]\n    81: a5 = u8 [a0 + 0x7]\n    84: a2 = a2 << 0x8\n    87: a2 = a2 | a3\n    90: a4 = a4 << 0x10\n    93: a5 = a5 << 0x18\n    96: a4 = a4 | a5\n    99: a2 = a2 | a4\n   102: a2 = a2 << 0x20\n   105: t0 = a2 | a1\n   108: a2 = u8 [a0 + 0x9]\n   111: a3 = u8 [a0 + 0x8]\n   114: a4 = u8 [a0 + 0xa]\n   117: a5 = u8 [a0 + 0xb]\n   120: a2 = a2 << 0x8\n   123: a2 = a2 | a3\n   126: a4 = a4 << 0x10\n   129: a5 = a5 << 0x18\n   132: a4 = a4 | a5\n   135: a2 = a2 | a4\n   138: a3 = u8 [a0 + 0xd]\n   141: a4 = u8 [a0 + 0xc]\n   144: a5 = u8 [a0 + 0xe]\n   147: a1 = u8 [a0 + 0xf]\n   150: a3 = a3 << 0x8\n   153: a3 = a3 | a4\n   156: a5 = a5 << 0x10\n   159: a1 = a1 << 0x18\n   162: a1 = a1 | a5\n   165: a1 = a1 | a3\n   168: a1 = a1 << 0x20\n   171: t1 = a1 | a2\n   174: a1 = u8 [a0 + 0x11]\n   177: a3 = u8 [a0 + 0x10]\n   180: a4 = u8 [a0 + 0x12]\n   183: a5 = u8 [a0 + 0x13]\n   186: a1 = a1 << 0x8\n   189: a1 = a1 | a3\n   192: a4 = a4 << 0x10\n   195: a5 = a5 << 0x18\n   198: a4 = a4 | a5\n   201: a1 = a1 | a4\n   204: a3 = u8 [a0 + 0x15]\n   207: a4 = u8 [a0 + 0x14]\n   210: a5 = u8 [a0 + 0x16]\n   213: a2 = u8 [a0 + 0x17]\n   216: a3 = a3 << 0x8\n   219: a3 = a3 | a4\n   222: a5 = a5 << 0x10\n   225: a2 = a2 << 0x18\n   228: a2 = a2 | a5\n   231: a2 = a2 | a3\n   234: a2 = a2 << 0x20\n   237: a3 = a2 | a1\n   240: a1 = u8 [a0 + 0x19]\n   243: a2 = u8 [a0 + 0x18]\n   246: a4 = u8 [a0 + 0x1a]\n   249: a5 = u8 [a0 + 0x1b]\n   252: a1 = a1 << 0x8\n   255: a1 = a1 | a2\n   258: a4 = a4 << 0x10\n   261: a5 = a5 << 0x18\n   264: a4 = a4 | a5\n   267: a1 = a1 | a4\n   270: a2 = u8 [a0 + 0x1d]\n   273: a4 = u8 [a0 + 0x1c]\n   276: a5 = u8 [a0 + 0x1e]\n   279: a0 = u8 [a0 + 0x1f]\n   282: a2 = a2 << 0x8\n   285: a2 = a2 | a4\n   288: a5 = a5 << 0x10\n   291: a0 = a0 << 0x18\n   294: a0 = a0 | a5\n   297: a0 = a0 | a2\n   300: a0 = a0 << 0x20\n   303: a0 = a0 | a1\n   306: a0 = reverse a0\n   308: a1 = reverse a3\n   310: a2 = reverse t1\n   312: a3 = reverse t0\n   314: u64 [s0 + 0x18] = a3\n   317: u64 [s0 + 0x10] = a2\n   320: u64 [s0 + 0x8] = a1\n   323: u64 [s0] = a0\n   325: ra = u64 [sp + 0x8]\n   328: s0 = u64 [sp]\n   330: sp = sp + 0x10\n   333: ret\n      : @4 (gas: 12)\n   335: sp = sp + 0xffffffffffffffd8\n   338: u64 [sp + 0x20] = ra\n   341: u64 [sp + 0x18] = s0\n   344: u64 [sp + 0x10] = s1\n   347: a2 = u64 [a1]\n   349: u64 [sp + 0x8] = a2\n   352: a2 = u64 [a1 + 0x8]\n   355: u64 [sp] = a2\n   357: s0 = u64 [a1 + 0x10]\n   360: s1 = u64 [a1 + 0x18]\n   363: a1 = 0x20\n   366: ra = 4, jump @14\n      : @5 [@dyn 2] (gas: 71)\n   371: a1 = reverse s1\n   373: a2 = reverse s0\n   375: a3 = u64 [sp]\n   377: a3 = reverse a3\n   379: a4 = u64 [sp + 0x8]\n   382: a4 = reverse a4\n   384: u8 [a0 + 0x18] = a4\n   387: u8 [a0 + 0x10] = a3\n   390: u8 [a0 + 0x8] = a2\n   393: u8 [a0] = a1\n   395: a5 = a4 >> 0x38\n   398: u8 [a0 + 0x1f] = a5\n   401: a5 = a4 >> 0x30\n   404: u8 [a0 + 0x1e] = a5\n   407: a5 = a4 >> 0x28\n   410: u8 [a0 + 0x1d] = a5\n   413: a5 = a4 >> 0x20\n   416: u8 [a0 + 0x1c] = a5\n   419: a5 = a4 >> 0x18\n   422: u8 [a0 + 0x1b] = a5\n   425: a5 = a4 >> 0x10\n   428: u8 [a0 + 0x1a] = a5\n   431: a4 = a4 >> 0x8\n   434: u8 [a0 + 0x19] = a4\n   437: a4 = a3 >> 0x38\n   440: u8 [a0 + 0x17] = a4\n   443: a4 = a3 >> 0x30\n   446: u8 [a0 + 0x16] = a4\n   449: a4 = a3 >> 0x28\n   452: u8 [a0 + 0x15] = a4\n   455: a4 = a3 >> 0x20\n   458: u8 [a0 + 0x14] = a4\n   461: a4 = a3 >> 0x18\n   464: u8 [a0 + 0x13] = a4\n   467: a4 = a3 >> 0x10\n   470: u8 [a0 + 0x12] = a4\n   473: a3 = a3 >> 0x8\n   476: u8 [a0 + 0x11] = a3\n   479: a3 = a2 >> 0x38\n   482: u8 [a0 + 0xf] = a3\n   485: a3 = a2 >> 0x30\n   488: u8 [a0 + 0xe] = a3\n   491: a3 = a2 >> 0x28\n   494: u8 [a0 + 0xd] = a3\n   497: a3 = a2 >> 0x20\n   500: u8 [a0 + 0xc] = a3\n   503: a3 = a2 >> 0x18\n   506: u8 [a0 + 0xb] = a3\n   509: a3 = a2 >> 0x10\n   512: u8 [a0 + 0xa] = a3\n   515: a2 = a2 >> 0x8\n   518: u8 [a0 + 0x9] = a2\n   521: a2 = a1 >> 0x38\n   524: u8 [a0 + 0x7] = a2\n   527: a2 = a1 >> 0x30\n   530: u8 [a0 + 0x6] = a2\n   533: a2 = a1 >> 0x28\n   536: u8 [a0 + 0x5] = a2\n   539: a2 = a1 >> 0x20\n   542: u8 [a0 + 0x4] = a2\n   545: a2 = a1 >> 0x18\n   548: u8 [a0 + 0x3] = a2\n   551: a2 = a1 >> 0x10\n   554: u8 [a0 + 0x2] = a2\n   557: a1 = a1 >> 0x8\n   560: u8 [a0 + 0x1] = a1\n   563: ra = u64 [sp + 0x20]\n   566: s0 = u64 [sp + 0x18]\n   569: s1 = u64 [sp + 0x10]\n   572: sp = sp + 0x28\n   575: ret\n      : @6 (gas: 48)\n   577: sp = sp + 0xffffffffffffffa0\n   580: u64 [sp + 0x58] = ra\n   583: u64 [sp + 0x50] = s0\n   586: u64 [sp + 0x48] = s1\n   589: s0 = sp + 0x60\n   592: sp = sp & 0xffffffffffffffe0\n   595: s1 = a0\n   597: a0 = u64 [a1 + 0x18]\n   600: a2 = u64 [a1 + 0x10]\n   603: a3 = u64 [a1 + 0x8]\n   606: a1 = u64 [a1]\n   608: a0 = reverse a0\n   610: a2 = reverse a2\n   612: a3 = reverse a3\n   614: a1 = reverse a1\n   616: u64 [sp + 0x18] = a1\n   619: u64 [sp + 0x10] = a3\n   622: u64 [sp + 0x8] = a2\n   625: u64 [sp] = a0\n   627: u64 [sp + 56] = 0\n   630: u64 [sp + 48] = 0\n   633: u64 [sp + 40] = 0\n   636: u64 [sp + 32] = 0\n   639: u32 [sp + 64] = 0x20\n   643: i32 a1 = sp + 0\n   645: i32 a3 = sp + 0x20\n   648: i32 a4 = sp + 0x40\n   651: a2 = 0xffffffffffffffff\n   654: a0 = 0\n   656: ecalli 5 // 'get_storage'\n   658: a0 = u64 [sp + 0x38]\n   661: a1 = u64 [sp + 0x30]\n   664: a2 = u64 [sp + 0x28]\n   667: a3 = u64 [sp + 0x20]\n   670: a0 = reverse a0\n   672: a1 = reverse a1\n   674: a2 = reverse a2\n   676: a3 = reverse a3\n   678: u64 [s1 + 0x18] = a3\n   681: u64 [s1 + 0x10] = a2\n   684: u64 [s1 + 0x8] = a1\n   687: u64 [s1] = a0\n   689: sp = s0 + 0xffffffffffffffa0\n   692: ra = u64 [sp + 0x58]\n   695: s0 = u64 [sp + 0x50]\n   698: s1 = u64 [sp + 0x48]\n   701: sp = sp + 0x60\n   704: ret\n      : @7 (gas: 40)\n   706: sp = sp + 0xffffffffffffffa0\n   709: u64 [sp + 0x58] = ra\n   712: u64 [sp + 0x50] = s0\n   715: s0 = sp + 0x60\n   718: sp = sp & 0xffffffffffffffe0\n   721: t0 = u64 [a0]\n   723: a3 = u64 [a0 + 0x8]\n   726: a4 = u64 [a0 + 0x10]\n   729: a0 = u64 [a0 + 0x18]\n   732: t1 = u64 [a1]\n   734: a2 = u64 [a1 + 0x8]\n   737: a5 = u64 [a1 + 0x10]\n   740: a1 = u64 [a1 + 0x18]\n   743: t2 = reverse a0\n   745: a4 = reverse a4\n   747: a3 = reverse a3\n   749: a0 = reverse t0\n   751: t0 = reverse a1\n   753: a5 = reverse a5\n   755: a2 = reverse a2\n   757: a1 = reverse t1\n   759: u64 [sp + 0x18] = a0\n   762: u64 [sp + 0x10] = a3\n   765: u64 [sp + 0x8] = a4\n   768: u64 [sp] = t2\n   770: u64 [sp + 0x38] = a1\n   773: u64 [sp + 0x30] = a2\n   776: u64 [sp + 0x28] = a5\n   779: u64 [sp + 0x20] = t0\n   782: i32 a1 = sp + 0\n   784: i32 a3 = sp + 0x20\n   787: a2 = 0xffffffffffffffff\n   790: a4 = 0x20\n   793: a0 = 0\n   795: ecalli 10 // 'set_storage'\n   797: sp = s0 + 0xffffffffffffffa0\n   800: ra = u64 [sp + 0x58]\n   803: s0 = u64 [sp + 0x50]\n   806: sp = sp + 0x60\n   809: ret\n      : @8 (gas: 24)\n   811: sp = sp + 0xffffffffffffff60\n   815: u64 [sp + 0x98] = ra\n   819: u64 [sp + 0x90] = s0\n   823: u64 [sp + 0x88] = s1\n   827: s0 = sp + 0xa0\n   831: sp = sp & 0xffffffffffffffe0\n   834: a4 = u64 [a3]\n   836: u64 [sp + 0x38] = a4\n   839: a4 = u64 [a3 + 0x8]\n   842: u64 [sp + 0x30] = a4\n   845: a4 = u64 [a3 + 0x10]\n   848: u64 [sp + 0x28] = a4\n   851: a3 = u64 [a3 + 0x18]\n   854: u64 [sp + 0x20] = a3\n   857: a3 = u64 [a2]\n   859: u64 [sp + 0x18] = a3\n   862: a3 = u64 [a2 + 0x8]\n   865: u64 [sp + 0x10] = a3\n   868: a3 = u64 [a2 + 0x10]\n   871: u64 [sp + 0x8] = a3\n   874: a2 = u64 [a2 + 0x18]\n   877: u64 [sp] = a2\n   879: s1 = a1\n   881: ra = 6, jump @14\n      : @9 [@dyn 3] (gas: 35)\n   886: a1 = u64 [sp]\n   888: a1 = reverse a1\n   890: a2 = u64 [sp + 0x8]\n   893: a2 = reverse a2\n   895: a3 = u64 [sp + 0x10]\n   898: a3 = reverse a3\n   900: a4 = u64 [sp + 0x18]\n   903: a4 = reverse a4\n   905: u64 [sp + 0x58] = a4\n   908: u64 [sp + 0x50] = a3\n   911: u64 [sp + 0x48] = a2\n   914: u64 [sp + 0x40] = a1\n   917: a1 = u64 [sp + 0x20]\n   920: a1 = reverse a1\n   922: a2 = u64 [sp + 0x28]\n   925: a2 = reverse a2\n   927: a3 = u64 [sp + 0x30]\n   930: a3 = reverse a3\n   932: a4 = u64 [sp + 0x38]\n   935: a4 = reverse a4\n   937: u64 [sp + 0x78] = a4\n   940: u64 [sp + 0x70] = a3\n   943: u64 [sp + 0x68] = a2\n   946: u64 [sp + 0x60] = a1\n   949: i32 a2 = a0 + 0\n   951: i32 a3 = s1 + 0\n   953: i32 a0 = sp + 0x40\n   956: a1 = 0x2\n   959: ecalli 4 // 'deposit_event'\n   961: sp = s0 + 0xffffffffffffff60\n   965: ra = u64 [sp + 0x98]\n   969: s0 = u64 [sp + 0x90]\n   973: s1 = u64 [sp + 0x88]\n   977: sp = sp + 0xa0\n   981: ret\n      : @10 (gas: 33)\n   983: sp = sp + 0xffffffffffffff20\n   987: u64 [sp + 0xd8] = ra\n   991: u64 [sp + 0xd0] = s0\n   995: u64 [sp + 0xc8] = s1\n   999: s0 = sp + 0xe0\n  1003: sp = sp & 0xffffffffffffffe0\n  1006: a5 = u64 [a4]\n  1008: u64 [sp + 0x40] = a5\n  1011: a5 = u64 [a4 + 0x8]\n  1014: u64 [sp + 0x48] = a5\n  1017: a5 = u64 [a4 + 0x10]\n  1020: u64 [sp + 0x50] = a5\n  1023: a4 = u64 [a4 + 0x18]\n  1026: u64 [sp + 0x58] = a4\n  1029: t0 = 0x8\n  1032: a4 = u64 [a3]\n  1034: u64 [sp + 0x18] = a4\n  1037: a4 = u64 [a3 + 0x8]\n  1040: u64 [sp + 0x20] = a4\n  1043: a4 = u64 [a3 + 0x10]\n  1046: u64 [sp + 0x28] = a4\n  1049: a3 = u64 [a3 + 0x18]\n  1052: u64 [sp + 0x30] = a3\n  1055: s1 = u64 [a2]\n  1057: a3 = u64 [a2 + 0x8]\n  1060: u64 [sp] = a3\n  1062: a3 = u64 [a2 + 0x10]\n  1065: u64 [sp + 0x8] = a3\n  1068: a2 = u64 [a2 + 0x18]\n  1071: u64 [sp + 0x10] = a2\n  1074: u64 [sp + 0x38] = a1\n  1077: ra = 0xa\n  1080: jump @14\n      : @11 [@dyn 4] (gas: 2)\n  1083: u64 [sp + 0x38] = a1\n  1086: ra = 10, jump @14\n      : @12 [@dyn 5] (gas: 41)\n  1090: a1 = reverse s1\n  1092: u64 [sp + 0x78] = a1\n  1095: a1 = u64 [sp]\n  1097: a1 = reverse a1\n  1099: u64 [sp + 0x70] = a1\n  1102: a1 = u64 [sp + 0x8]\n  1105: a1 = reverse a1\n  1107: u64 [sp + 0x68] = a1\n  1110: a1 = u64 [sp + 0x10]\n  1113: a1 = reverse a1\n  1115: u64 [sp + 0x60] = a1\n  1118: a1 = u64 [sp + 0x18]\n  1121: a1 = reverse a1\n  1123: u64 [sp + 0x98] = a1\n  1127: a1 = u64 [sp + 0x20]\n  1130: a1 = reverse a1\n  1132: u64 [sp + 0x90] = a1\n  1136: a1 = u64 [sp + 0x28]\n  1139: a1 = reverse a1\n  1141: u64 [sp + 0x88] = a1\n  1145: a1 = u64 [sp + 0x30]\n  1148: a1 = reverse a1\n  1150: u64 [sp + 0x80] = a1\n  1154: a1 = u64 [sp + 0x40]\n  1157: a1 = reverse a1\n  1159: u64 [sp + 0xb8] = a1\n  1163: a1 = u64 [sp + 0x48]\n  1166: a1 = reverse a1\n  1168: u64 [sp + 0xb0] = a1\n  1172: a1 = u64 [sp + 0x50]\n  1175: a1 = reverse a1\n  1177: u64 [sp + 0xa8] = a1\n  1181: a1 = u64 [sp + 0x58]\n  1184: a1 = reverse a1\n  1186: u64 [sp + 0xa0] = a1\n  1190: i32 a2 = a0 + 0\n  1192: a3 = i32 [sp + 0x38]\n  1195: i32 a0 = sp + 0x60\n  1198: a1 = 0x3\n  1201: ecalli 4 // 'deposit_event'\n  1203: t0 = 12, jump @810\n      : @13 [@dyn 6] (gas: 1)\n  1208: ret\n      : @14 (gas: 2)\n  1210: i32 a2 = a0 >> 0x10\n  1213: jump @19 if a2 != 0\n      : @15 (gas: 4)\n  1216: a1 = a1 + a0\n  1219: i32 a1 = a1 + 0x1f\n  1222: a1 = a1 & 0xffffffffffffffe0\n  1225: jump @19 if a1 >u 65536\n      : @16 (gas: 3)\n  1231: a2 = 0x2024c\n  1236: a3 = i32 [0x2024c]\n  1241: jump @18 if a3 >=u a1\n      : @17 (gas: 2)\n  1244: u32 [0x2024c] = a1\n  1249: fallthrough\n      : @18 (gas: 4)\n  1250: a1 = 0x20260\n  1255: i32 a0 = a0 + 0\n  1257: a0 = a0 + a1\n  1260: ret\n      : @19 (gas: 1)\n  1262: trap\n      : @20 (gas: 6)\n  1263: sp = sp + 0xfffffffffffffff0\n  1266: u64 [sp + 0x8] = ra\n  1269: u64 [sp] = s0\n  1271: s0 = a0 & 0x1\n  1274: ecalli 2 // 'call_data_size'\n  1276: fallthrough\n      : @21 (gas: 2)\n  1277: u32 [0x20248] = a0\n  1282: jump @23 if s0 == 0\n      : @22 (gas: 1)\n  1285: ra = 14, jump @24\n      : @23 [@dyn 7] (gas: 1)\n  1289: ra = 16, jump @45\n      : @24 [@dyn 8] (gas: 14)\n  1294: sp = sp + 0xfffffffffffffe60\n  1298: u64 [sp + 0x198] = ra\n  1302: u64 [sp + 0x190] = s0\n  1306: u64 [sp + 0x188] = s1\n  1310: s0 = sp + 0x1a0\n  1314: sp = sp & 0xffffffffffffffe0\n  1317: s1 = sp\n  1319: u64 [s1 + 216] = 0\n  1323: u64 [s1 + 208] = 0\n  1327: u64 [s1 + 192] = 0x80\n  1333: a0 = 0x40\n  1336: a1 = s1 + 0xc0\n  1340: u64 [s1 + 200] = 0\n  1344: ra = 18, jump @4\n      : @25 [@dyn 9] (gas: 7)\n  1349: u64 [s1 + 248] = 0\n  1353: u64 [s1 + 240] = 0\n  1357: u64 [s1 + 232] = 0\n  1361: u64 [s1 + 224] = 0\n  1365: i32 a0 = s1 + 0xe0\n  1369: ecalli 11 // 'value_transferred'\n  1371: fallthrough\n      : @26 (gas: 8)\n  1372: a0 = u64 [s1 + 0xf0]\n  1376: a1 = u64 [s1 + 0xf8]\n  1380: a2 = u64 [s1 + 0xe8]\n  1384: a3 = u64 [s1 + 0xe0]\n  1388: a1 = a1 | a2\n  1391: a0 = a0 | a3\n  1394: a0 = a0 | a1\n  1397: jump @28 if a0 == 0\n      : @27 (gas: 7)\n  1400: a1 = 0x20260\n  1405: i32 a1 = a1 + 0\n  1407: a0 = 0x1\n  1410: a2 = 0\n  1412: ra = 0x2a\n  1415: ecalli 8 // 'seal_return'\n  1417: jump @45\n      : @28 (gas: 29)\n  1420: a0 = 0x30260\n  1425: u64 [s1 + 0x38] = a0\n  1428: i32 a0 = a0 + 0\n  1430: u64 [s1 + 0x30] = a0\n  1433: ecalli 3 // 'caller'\n  1435: a2 = u64 [s1 + 0x38]\n  1438: a0 = u64 [a2 + 0x8]\n  1441: a1 = i32 [a2 + 0x10]\n  1444: a2 = u64 [a2]\n  1446: a0 = reverse a0\n  1448: a3 = a0 << 0x20\n  1451: a1 = reverse a1\n  1453: a1 = a1 >> 0x20\n  1456: a1 = a1 | a3\n  1459: u64 [s1 + 0x28] = a1\n  1462: a0 = a0 >> 0x20\n  1465: a1 = reverse a2\n  1467: a2 = a1 << 0x20\n  1470: a0 = a0 | a2\n  1473: u64 [s1 + 0x20] = a0\n  1476: a1 = a1 >> 0x20\n  1479: u64 [s1 + 0x18] = a1\n  1482: u64 [s1 + 280] = 0\n  1486: u64 [s1 + 272] = 0\n  1490: u64 [s1 + 264] = 0\n  1494: u64 [s1 + 256] = 0\n  1498: a0 = s1 + 0xa0\n  1502: a1 = s1 + 0x100\n  1506: ra = 20, jump @6\n      : @29 [@dyn 10] (gas: 19)\n  1511: a0 = u32 [s1 + 0xb4]\n  1515: a0 = a0 << 0x20\n  1518: a1 = u64 [s1 + 0xb8]\n  1522: a2 = u64 [s1 + 0x18]\n  1525: a0 = a0 | a2\n  1528: u64 [s1 + 312] = 0\n  1532: u64 [s1 + 304] = 0\n  1536: u64 [s1 + 296] = 0\n  1540: u64 [s1 + 288] = 0\n  1544: a2 = s1 + 0x100\n  1548: u64 [a2 + 0x58] = a1\n  1551: a1 = u64 [s1 + 0x20]\n  1554: u64 [a2 + 0x48] = a1\n  1557: a1 = u64 [s1 + 0x28]\n  1560: u64 [a2 + 0x40] = a1\n  1563: u64 [a2 + 0x50] = a0\n  1566: a0 = s1 + 0x120\n  1570: a1 = s1 + 0x140\n  1574: ra = 22, jump @7\n      : @30 [@dyn 11] (gas: 6)\n  1579: a0 = u64 [s1 + 0x30]\n  1582: ra = 0x18\n  1585: ecalli 3 // 'caller'\n  1587: a2 = u64 [s1 + 0x38]\n  1590: t0 = 0x1a\n  1593: jump @805\n      : @31 [@dyn 12] (gas: 2)\n  1596: a2 = u64 [s1 + 0x38]\n  1599: t0 = 26, jump @805\n      : @32 [@dyn 13] (gas: 7)\n  1604: u64 [s1 + 152] = 0\n  1608: u64 [s1 + 0x90] = a1\n  1612: u64 [s1 + 0x88] = a0\n  1616: a1 = s1 + 0x80\n  1620: u64 [s1 + 0x80] = a3\n  1624: a0 = 0\n  1626: ra = 28, jump @4\n      : @33 [@dyn 14] (gas: 7)\n  1631: u64 [s1 + 120] = 0\n  1634: u64 [s1 + 112] = 0\n  1637: u64 [s1 + 96] = 0x1\n  1641: a0 = 0x20\n  1644: a1 = s1 + 0x60\n  1647: u64 [s1 + 104] = 0\n  1650: ra = 30, jump @4\n      : @34 [@dyn 15] (gas: 7)\n  1655: a0 = sp + 0xffffffffffffffe0\n  1658: a0 = a0 & 0xffffffffffffffe0\n  1661: u64 [s1 + 0x38] = a0\n  1664: sp = a0\n  1666: a2 = 0x2024c\n  1671: a0 = i32 [0x2024c]\n  1676: jump @36 if a0 >u 63\n      : @35 (gas: 2)\n  1680: u32 [0x2024c] = 0x40\n  1686: fallthrough\n      : @36 (gas: 15)\n  1687: a0 = sp + 0xffffffffffffffe0\n  1690: a1 = a0 & 0xffffffffffffffe0\n  1693: u64 [s1 + 0x20] = a1\n  1696: sp = a1\n  1698: a0 = 0x20260\n  1703: u64 [s1 + 0x28] = a0\n  1706: i32 a0 = a0 + 0\n  1708: u64 [s1 + 0x30] = a2\n  1711: i32 a2 = a1 + 0\n  1713: a1 = 0x40\n  1716: ra = 0x20\n  1719: ecalli 6 // 'hash_keccak_256'\n  1721: a3 = u64 [s1 + 0x20]\n  1724: t0 = 0x22\n  1727: jump @823\n      : @37 [@dyn 16] (gas: 2)\n  1730: a3 = u64 [s1 + 0x20]\n  1733: t0 = 34, jump @823\n      : @38 [@dyn 17] (gas: 7)\n  1738: a1 = u64 [s1 + 0x38]\n  1741: u64 [a1 + 0x18] = a3\n  1744: u64 [a1 + 0x10] = a2\n  1747: u64 [a1 + 0x8] = a4\n  1750: u64 [a1] = a0\n  1752: a0 = s1 + 0x40\n  1755: ra = 36, jump @6\n      : @39 [@dyn 18] (gas: 14)\n  1760: a0 = u64 [s1 + 0x40]\n  1763: a1 = u64 [s1 + 0x48]\n  1766: a2 = u64 [s1 + 0x58]\n  1769: a3 = u64 [s1 + 0x50]\n  1772: a0 = a0 & 0xffffffffffffff00\n  1776: a0 = a0 | 0x1\n  1779: a4 = s1 + 0x100\n  1783: u64 [a4 + 0x78] = a2\n  1786: u64 [a4 + 0x70] = a3\n  1789: u64 [a4 + 0x68] = a1\n  1792: u64 [a4 + 0x60] = a0\n  1795: a1 = s1 + 0x160\n  1799: a0 = u64 [s1 + 0x38]\n  1802: ra = 38, jump @7\n      : @40 [@dyn 19] (gas: 3)\n  1807: a2 = u64 [s1 + 0x30]\n  1810: a0 = i32 [a2]\n  1812: jump @42 if a0 >u 127\n      : @41 (gas: 2)\n  1816: u32 [a2 + 0] = 0x80\n  1820: fallthrough\n      : @42 (gas: 6)\n  1821: a0 = u64 [s1 + 0x28]\n  1824: i32 a0 = a0 + 0x80\n  1828: a1 = 0\n  1830: a2 = 0\n  1832: ecalli 0 // 'call_data_copy'\n  1833: jump @0\n      : @43 (gas: 3)\n  1836: a0 = 0x80\n  1840: a1 = 0\n  1842: ra = 40, jump @14\n      : @44 [@dyn 20] (gas: 6)\n  1847: i32 a1 = a0 + 0\n  1849: a0 = 0\n  1851: a2 = 0\n  1853: ra = 0x2a\n  1856: ecalli 8 // 'seal_return'\n  1858: fallthrough\n      : @45 [@dyn 21] (gas: 16)\n  1859: sp = sp + 0xfffffffffffffe10\n  1863: u64 [sp + 0x1e8] = ra\n  1867: u64 [sp + 0x1e0] = s0\n  1871: u64 [sp + 0x1d8] = s1\n  1875: s0 = sp + 0x1f0\n  1879: sp = sp + 0xffffffffffffd1d0\n  1883: sp = sp & 0xffffffffffffffe0\n  1886: s1 = sp\n  1888: a2 = s1 + 0x28f8\n  1892: u64 [a2 + 288] = 0\n  1896: u64 [a2 + 280] = 0\n  1900: u64 [a2 + 264] = 0x80\n  1906: a0 = 0x40\n  1909: a1 = s1 + 0x2a00\n  1913: u64 [a2 + 272] = 0\n  1917: ra = 44, jump @4\n      : @46 [@dyn 22] (gas: 4)\n  1922: a0 = 0x20248\n  1927: u64 [s1 + 0x158] = a0\n  1931: a0 = i32 [0x20248]\n  1936: jump @48 if a0 >=u 4\n      : @47 (gas: 1)\n  1940: jump @503\n      : @48 (gas: 14)\n  1943: a0 = sp + 0xffffffffffffffe0\n  1946: a0 = a0 & 0xffffffffffffffe0\n  1949: sp = a0\n  1951: u64 [a0 + 24] = 0\n  1954: u64 [a0 + 16] = 0\n  1957: u64 [a0 + 8] = 0\n  1960: u64 [s1 + 0x150] = a0\n  1964: u64 [a0 + 0] = 0\n  1966: a0 = s1 + 0x3000\n  1970: i32 a0 = a0 + 0xfffffffffffffa20\n  1974: a1 = 0\n  1976: ra = 0x2e\n  1979: ecalli 1 // 'call_data_load'\n  1981: fallthrough\n      : @49 [@dyn 23] (gas: 3)\n  1982: a2 = s1 + 0x28f8\n  1986: a0 = i32 [a2 + 0x144]\n  1990: jump @51 if a0 != 2376452955\n      : @50 (gas: 1)\n  1997: jump @262\n      : @51 (gas: 1)\n  2000: jump @53 if a0 != 2447496435\n      : @52 (gas: 1)\n  2007: jump @326\n      : @53 (gas: 1)\n  2010: jump @55 if a0 != 2887682958\n      : @54 (gas: 1)\n  2017: jump @294\n      : @55 (gas: 1)\n  2020: jump @91 if a0 == 3114509964\n      : @56 (gas: 1)\n  2028: jump @130 if a0 == 3561991626\n      : @57 (gas: 1)\n  2036: jump @101 if a0 == 4076725131\n      : @58 (gas: 1)\n  2044: jump @60 if a0 == 288268898\n      : @59 (gas: 1)\n  2051: jump @272\n      : @60 (gas: 8)\n  2054: u64 [a2 + 352] = 0\n  2058: u64 [a2 + 344] = 0\n  2062: u64 [a2 + 336] = 0\n  2066: u64 [a2 + 328] = 0\n  2070: a0 = s1 + 0x3000\n  2074: i32 a0 = a0 + 0xfffffffffffffa40\n  2078: ecalli 11 // 'value_transferred'\n  2080: fallthrough\n      : @61 (gas: 10)\n  2081: a3 = s1 + 0x28f8\n  2085: a4 = a3 + 0x100\n  2089: a0 = u64 [a4 + 0x58]\n  2092: a1 = u64 [a4 + 0x60]\n  2095: a2 = u64 [a4 + 0x50]\n  2098: a3 = u64 [a4 + 0x48]\n  2101: a1 = a1 | a2\n  2104: a0 = a0 | a3\n  2107: a0 = a0 | a1\n  2110: jump @63 if a0 == 0\n      : @62 (gas: 1)\n  2113: jump @500\n      : @63 (gas: 3)\n  2116: a0 = u64 [s1 + 0x158]\n  2120: a0 = i32 [a0]\n  2122: jump @65 if a0 >u 35\n      : @64 (gas: 1)\n  2126: jump @500\n      : @65 (gas: 6)\n  2129: a0 = s1 + 0x3000\n  2133: i32 a0 = a0 + 0xfffffffffffffa60\n  2137: a1 = 0x4\n  2140: ra = 0x30\n  2143: ecalli 1 // 'call_data_load'\n  2145: fallthrough\n      : @66 [@dyn 24] (gas: 4)\n  2146: a4 = s1 + 0x28f8\n  2150: a0 = u64 [a4 + 0x178]\n  2154: a1 = u64 [a4 + 0x180]\n  2158: t0 = 50, jump @821\n      : @67 [@dyn 25] (gas: 1)\n  2163: jump @69 if a3 != 0\n      : @68 (gas: 1)\n  2166: jump @500\n      : @69 (gas: 10)\n  2169: a1 = u64 [a4 + 0x170]\n  2173: u64 [s1 + 0x148] = a1\n  2177: a1 = u64 [a4 + 0x168]\n  2181: u64 [s1 + 0x158] = a1\n  2185: a0 = a0 << 0x20\n  2188: a0 = a0 >> 0x20\n  2191: u64 [s1 + 0x140] = a0\n  2195: a0 = s1 + 0x400\n  2199: a1 = u64 [s1 + 0x150]\n  2203: ra = 52, jump @6\n      : @70 [@dyn 26] (gas: 14)\n  2208: a0 = u64 [s1 + 0x408]\n  2212: u64 [s1 + 0x150] = a0\n  2216: a0 = u64 [s1 + 0x400]\n  2220: u64 [s1 + 0x138] = a0\n  2224: a0 = u32 [s1 + 0x410]\n  2228: u64 [s1 + 0x130] = a0\n  2232: a0 = 0x30260\n  2237: u64 [s1 + 0x128] = a0\n  2241: i32 a0 = a0 + 0\n  2243: ra = 0x36\n  2246: ecalli 3 // 'caller'\n  2248: a2 = u64 [s1 + 0x128]\n  2252: t0 = 0x38\n  2255: jump @806\n      : @71 [@dyn 27] (gas: 2)\n  2258: a2 = u64 [s1 + 0x128]\n  2262: t0 = 56, jump @806\n      : @72 [@dyn 28] (gas: 17)\n  2267: a2 = u64 [s1 + 0x130]\n  2271: a1 = a1 ^ a2\n  2274: a2 = u64 [s1 + 0x138]\n  2278: a0 = a0 ^ a2\n  2281: a0 = a0 | a1\n  2284: a1 = u64 [s1 + 0x150]\n  2288: a1 = a1 ^ a3\n  2291: a0 = a0 | a1\n  2294: a0 = a0 <u 0x1\n  2297: u64 [s1 + 1016] = 0\n  2301: u64 [s1 + 1008] = 0\n  2305: u64 [s1 + 0x3e0] = a0\n  2309: a0 = s1 + 0x3e0\n  2313: u64 [s1 + 1000] = 0\n  2317: ra = 0x3a\n  2320: t0 = 0x24e\n  2324: jump @795\n      : @73 [@dyn 29] (gas: 7)\n  2327: a2 = s1 + 0x100\n  2331: a0 = u64 [a2 + 0x48]\n  2334: a1 = u64 [a2 + 0x58]\n  2337: a0 = a0 | a1\n  2340: a1 = u64 [a2 + 0x40]\n  2343: a0 = a0 | a1\n  2346: jump @75 if a0 == 0\n      : @74 (gas: 1)\n  2349: jump @430\n      : @75 (gas: 3)\n  2352: a0 = s1 + 0x1e0\n  2356: a1 = 0x40\n  2359: ra = 60, jump @2\n      : @76 [@dyn 30] (gas: 13)\n  2364: a1 = s1 + 0x100\n  2368: a4 = u64 [a1 + 0xf8]\n  2372: a5 = u64 [a1 + 0xf0]\n  2376: a3 = u64 [a1 + 0xe8]\n  2380: a0 = u64 [a1 + 0xe0]\n  2384: a2 = a3 | a4\n  2387: a1 = a0 | a5\n  2390: a1 = a1 | a2\n  2393: a1 = a1 >> 0x20\n  2396: a2 = a2 | a5\n  2399: a2 = a2 << 0x20\n  2402: a1 = a1 | a2\n  2405: jump @78 if a1 == 0\n      : @77 (gas: 1)\n  2408: jump @499\n      : @78 (gas: 11)\n  2411: u64 [s1 + 464] = 0\n  2415: u64 [s1 + 456] = 0\n  2419: u64 [s1 + 448] = 0\n  2423: a2 = 0x8c379a000000000\n  2433: a1 = s1 + 0x1c0\n  2437: u64 [s1 + 0x1d8] = a2\n  2441: u64 [s1 + 0x158] = a0\n  2445: u64 [s1 + 0x150] = a3\n  2449: u64 [s1 + 0x148] = a4\n  2453: u64 [s1 + 0x140] = a5\n  2457: ra = 62, jump @4\n      : @79 [@dyn 31] (gas: 6)\n  2462: a5 = s1 + 0x100\n  2466: a1 = u64 [a5 + 0x58]\n  2469: a0 = u64 [a5 + 0x48]\n  2472: a3 = u64 [a5 + 0x40]\n  2475: a3 = a3 | a0\n  2478: t0 = 64, jump @801\n      : @80 [@dyn 32] (gas: 1)\n  2483: jump @82 if a0 != 0\n      : @81 (gas: 1)\n  2486: jump @499\n      : @82 (gas: 9)\n  2489: i32 a0 = a1 + 0x4\n  2492: u64 [s1 + 440] = 0\n  2496: u64 [s1 + 432] = 0\n  2500: u64 [s1 + 416] = 0x20\n  2505: a1 = s1 + 0x1a0\n  2509: u64 [s1 + 424] = 0\n  2513: u64 [s1 + 0x148] = a3\n  2517: u64 [s1 + 0x140] = a4\n  2521: ra = 66, jump @4\n      : @83 [@dyn 33] (gas: 1)\n  2526: t0 = 68, jump @802\n      : @84 [@dyn 34] (gas: 1)\n  2531: jump @86 if a0 != 0\n      : @85 (gas: 1)\n  2534: jump @499\n      : @86 (gas: 7)\n  2537: i32 a0 = a1 + 0x24\n  2540: u64 [s1 + 408] = 0\n  2544: u64 [s1 + 400] = 0\n  2548: u64 [s1 + 384] = 0x18\n  2553: a1 = s1 + 0x180\n  2557: u64 [s1 + 392] = 0\n  2561: ra = 70, jump @4\n      : @87 [@dyn 35] (gas: 1)\n  2566: t0 = 72, jump @814\n      : @88 [@dyn 36] (gas: 1)\n  2571: jump @90 if a0 != 0\n      : @89 (gas: 1)\n  2574: jump @499\n      : @90 (gas: 12)\n  2577: i32 a0 = a2 + 0x44\n  2580: a1 = u64 [0x20020]\n  2585: a2 = u64 [0x20170]\n  2590: a3 = u64 [0x20178]\n  2595: a4 = s1 + 0x100\n  2599: u64 [a4 + 0x78] = a1\n  2602: u64 [a4 + 0x70] = a2\n  2605: u64 [a4 + 0x68] = a3\n  2608: a1 = s1 + 0x160\n  2612: u64 [s1 + 352] = 0\n  2616: ra = 0x218\n  2620: jump @4\n      : @91 (gas: 8)\n  2623: u64 [a2 + 1152] = 0\n  2627: u64 [a2 + 1144] = 0\n  2631: u64 [a2 + 1136] = 0\n  2635: u64 [a2 + 1128] = 0\n  2639: a0 = s1 + 0x3000\n  2643: i32 a0 = a0 + 0xfffffffffffffd60\n  2647: ecalli 11 // 'value_transferred'\n  2649: fallthrough\n      : @92 (gas: 10)\n  2650: a4 = s1 + 0x28f8\n  2654: a5 = a4 + 0x400\n  2658: a0 = u64 [a5 + 0x78]\n  2661: a1 = u64 [a5 + 0x80]\n  2665: a2 = u64 [a5 + 0x70]\n  2668: a3 = u64 [a5 + 0x68]\n  2671: a1 = a1 | a2\n  2674: a0 = a0 | a3\n  2677: a0 = a0 | a1\n  2680: jump @94 if a0 == 0\n      : @93 (gas: 1)\n  2683: jump @500\n      : @94 (gas: 3)\n  2686: a0 = u64 [s1 + 0x158]\n  2690: a0 = i32 [a0]\n  2692: jump @96 if a0 >u 3\n      : @95 (gas: 1)\n  2696: jump @500\n      : @96 (gas: 7)\n  2699: u64 [a4 + 1184] = 0\n  2703: u64 [a4 + 1176] = 0\n  2707: u64 [a4 + 1168] = 0\n  2711: u64 [a4 + 1160] = 0x2\n  2716: a0 = s1 + 0x1520\n  2720: a1 = s1 + 0x2d80\n  2724: ra = 74, jump @6\n      : @97 [@dyn 37] (gas: 14)\n  2729: a1 = s1 + 0x10f0\n  2733: a2 = a1 + 0x400\n  2737: a0 = u64 [a2 + 0x48]\n  2740: a1 = s1 + 0x100\n  2744: u64 [a1 + 0x58] = a0\n  2747: a0 = u64 [a2 + 0x40]\n  2750: u64 [a1 + 0x50] = a0\n  2753: a0 = u64 [a2 + 0x38]\n  2756: u64 [a1 + 0x48] = a0\n  2759: a0 = u64 [a2 + 0x30]\n  2762: u64 [a1 + 0x40] = a0\n  2765: a0 = s1 + 0x1500\n  2769: a1 = 0x40\n  2772: ra = 76, jump @2\n      : @98 [@dyn 38] (gas: 14)\n  2777: a3 = s1 + 0x10f0\n  2781: a5 = a3 + 0x400\n  2785: a0 = u64 [a5 + 0x28]\n  2788: a1 = u64 [a5 + 0x20]\n  2791: a2 = u64 [a5 + 0x18]\n  2794: a4 = u64 [a5 + 0x10]\n  2797: a0 = a0 | a2\n  2800: a2 = a4 | a1\n  2803: a2 = a2 | a0\n  2806: a2 = a2 >> 0x20\n  2809: a0 = a0 | a1\n  2812: a0 = a0 << 0x20\n  2815: a0 = a0 | a2\n  2818: jump @100 if a0 == 0\n      : @99 (gas: 1)\n  2821: jump @499\n      : @100 (gas: 14)\n  2824: a2 = s1 + 0x100\n  2828: a0 = u64 [a2 + 0x40]\n  2831: u64 [a3 + 0x3f0] = a0\n  2835: a0 = u64 [a2 + 0x48]\n  2838: u64 [a3 + 0x3f8] = a0\n  2842: a0 = u64 [a2 + 0x50]\n  2845: u64 [a3 + 0x400] = a0\n  2849: a1 = s1 + 0x14e0\n  2853: a0 = u64 [a2 + 0x58]\n  2856: u64 [a3 + 0x408] = a0\n  2860: a0 = a4\n  2862: u64 [a2 + 0x58] = a4\n  2865: ra = 0x11c\n  2869: jump @4\n      : @101 (gas: 8)\n  2872: u64 [a2 + 1696] = 0\n  2876: u64 [a2 + 1688] = 0\n  2880: u64 [a2 + 1680] = 0\n  2884: u64 [a2 + 1672] = 0\n  2888: a0 = s1 + 0x3000\n  2892: i32 a0 = a0 + 0xffffffffffffff80\n  2895: ecalli 11 // 'value_transferred'\n  2897: fallthrough\n      : @102 (gas: 10)\n  2898: a3 = s1 + 0x28f8\n  2902: a4 = a3 + 0x600\n  2906: a0 = u64 [a4 + 0x98]\n  2910: a1 = u64 [a4 + 0xa0]\n  2914: a2 = u64 [a4 + 0x90]\n  2918: a3 = u64 [a4 + 0x88]\n  2922: a1 = a1 | a2\n  2925: a0 = a0 | a3\n  2928: a0 = a0 | a1\n  2931: jump @104 if a0 == 0\n      : @103 (gas: 1)\n  2934: jump @500\n      : @104 (gas: 3)\n  2937: a0 = u64 [s1 + 0x158]\n  2941: a0 = i32 [a0]\n  2943: jump @106 if a0 >u 35\n      : @105 (gas: 1)\n  2947: jump @500\n      : @106 (gas: 5)\n  2950: a0 = s1 + 0x3000\n  2954: i32 a0 = a0 + 0xffffffffffffffa0\n  2957: a1 = 0x4\n  2960: ecalli 1 // 'call_data_load'\n  2962: fallthrough\n      : @107 (gas: 12)\n  2963: a2 = s1 + 0x28f8\n  2967: a3 = u64 [a2 + 0x6b8]\n  2971: a4 = u64 [a2 + 0x6c0]\n  2975: a0 = 0x100000000\n  2985: a0 = a0 ^ a3\n  2988: a0 = a0 | a4\n  2991: a1 = a3 >> 0x20\n  2994: a1 = a1 <u 0x1\n  2997: u64 [s1 + 0x110] = a4\n  3001: a1 = 0 if a4 != 0\n  3003: a1 = 0 if a0 == 0\n  3005: jump @109 if a1 != 0\n      : @108 (gas: 1)\n  3008: jump @505\n      : @109 (gas: 11)\n  3011: a0 = u64 [a2 + 0x6b0]\n  3015: u64 [s1 + 0x138] = a0\n  3019: a0 = u64 [a2 + 0x6a8]\n  3023: u64 [s1 + 0x130] = a0\n  3027: u64 [s1 + 0x118] = a3\n  3031: a0 = a3 << 0x20\n  3034: a0 = a0 >> 0x20\n  3037: u64 [s1 + 0x128] = a0\n  3041: a0 = s1 + 0x29e0\n  3045: a1 = u64 [s1 + 0x150]\n  3049: ra = 78, jump @6\n      : @110 [@dyn 39] (gas: 17)\n  3054: a1 = s1 + 0x28f8\n  3058: a0 = u64 [a1 + 0x100]\n  3062: u64 [s1 + 0x108] = a0\n  3066: a0 = u64 [a1 + 0xf8]\n  3070: u64 [s1 + 0x158] = a0\n  3074: a0 = u64 [a1 + 0xf0]\n  3078: u64 [s1 + 0x140] = a0\n  3082: a0 = u64 [a1 + 0xe8]\n  3086: u64 [s1 + 0x148] = a0\n  3090: a0 = 0x30260\n  3095: u64 [s1 + 0x120] = a0\n  3099: i32 a0 = a0 + 0\n  3101: ra = 0x50\n  3104: ecalli 3 // 'caller'\n  3106: a2 = u64 [s1 + 0x120]\n  3110: t0 = 0x52\n  3113: jump @806\n      : @111 [@dyn 40] (gas: 2)\n  3116: a2 = u64 [s1 + 0x120]\n  3120: t0 = 82, jump @806\n      : @112 [@dyn 41] (gas: 20)\n  3125: a2 = u64 [s1 + 0x158]\n  3129: a2 = a2 << 0x20\n  3132: a2 = a2 >> 0x20\n  3135: a1 = a1 ^ a2\n  3138: a2 = u64 [s1 + 0x148]\n  3142: a0 = a0 ^ a2\n  3145: a0 = a0 | a1\n  3148: a1 = u64 [s1 + 0x140]\n  3152: a1 = a1 ^ a3\n  3155: a0 = a0 | a1\n  3158: a0 = a0 <u 0x1\n  3161: a1 = s1 + 0x28f8\n  3165: u64 [a1 + 224] = 0\n  3169: u64 [a1 + 216] = 0\n  3173: u64 [a1 + 0xc8] = a0\n  3177: a0 = s1 + 0x29c0\n  3181: u64 [a1 + 208] = 0\n  3185: ra = 0x54\n  3188: t0 = 0x24e\n  3192: jump @795\n      : @113 [@dyn 42] (gas: 7)\n  3195: a0 = s1 + 0x100\n  3199: a5 = u64 [a0 + 0x28]\n  3202: a4 = u64 [a0 + 0x38]\n  3205: a3 = u64 [a0 + 0x30]\n  3208: a0 = a3 | a4\n  3211: a0 = a0 | a5\n  3214: jump @115 if a0 == 0\n      : @114 (gas: 1)\n  3217: jump @417\n      : @115 (gas: 3)\n  3220: a0 = s1 + 0x28a0\n  3224: a1 = 0x40\n  3227: ra = 86, jump @2\n      : @116 [@dyn 43] (gas: 14)\n  3232: a2 = s1 + 0x20f0\n  3236: t0 = u64 [a2 + 0x7c8]\n  3240: a1 = a2 + 0x700\n  3244: a5 = u64 [a1 + 0xc0]\n  3248: a4 = u64 [a1 + 0xb8]\n  3252: a0 = u64 [a1 + 0xb0]\n  3256: a3 = a4 | t0\n  3259: a1 = a0 | a5\n  3262: a1 = a1 | a3\n  3265: a1 = a1 >> 0x20\n  3268: a3 = a3 | a5\n  3271: a3 = a3 << 0x20\n  3274: a1 = a1 | a3\n  3277: jump @118 if a1 == 0\n      : @117 (gas: 1)\n  3280: jump @499\n      : @118 (gas: 11)\n  3283: u64 [a2 + 1952] = 0\n  3287: u64 [a2 + 1944] = 0\n  3291: u64 [a2 + 1936] = 0\n  3295: a3 = 0x8c379a000000000\n  3305: a1 = s1 + 0x2880\n  3309: u64 [a2 + 0x7a8] = a3\n  3313: u64 [s1 + 0x158] = a0\n  3317: u64 [s1 + 0x150] = a4\n  3321: u64 [s1 + 0x140] = t0\n  3325: u64 [s1 + 0x148] = a5\n  3329: ra = 88, jump @4\n      : @119 [@dyn 44] (gas: 1)\n  3334: t0 = 90, jump @800\n      : @120 [@dyn 45] (gas: 1)\n  3339: jump @122 if a0 != 0\n      : @121 (gas: 1)\n  3342: jump @499\n      : @122 (gas: 10)\n  3345: i32 a0 = a1 + 0x4\n  3348: a2 = s1 + 0x20f0\n  3352: u64 [a2 + 1928] = 0\n  3356: u64 [a2 + 1920] = 0\n  3360: u64 [a2 + 1904] = 0x20\n  3365: a1 = s1 + 0x2860\n  3369: u64 [a2 + 1912] = 0\n  3373: u64 [s1 + 0x148] = a3\n  3377: u64 [s1 + 0x140] = a4\n  3381: ra = 92, jump @4\n      : @123 [@dyn 46] (gas: 10)\n  3386: a2 = s1 + 0x100\n  3390: a4 = u64 [a2 + 0x48]\n  3393: a3 = u64 [a2 + 0x50]\n  3396: a1 = u64 [a2 + 0x58]\n  3399: a0 = u64 [a2 + 0x40]\n  3402: a0 = a0 + 0xffffffffffffffdc\n  3405: a0 = a1 <u a0\n  3408: a0 = 0 if a3 != 0\n  3410: a0 = 0 if a4 != 0\n  3412: jump @125 if a0 != 0\n      : @124 (gas: 1)\n  3415: jump @499\n      : @125 (gas: 8)\n  3418: i32 a0 = a1 + 0x24\n  3421: a2 = s1 + 0x20f0\n  3425: u64 [a2 + 1896] = 0\n  3429: u64 [a2 + 1888] = 0\n  3433: u64 [a2 + 1872] = 0x19\n  3438: a1 = s1 + 0x2840\n  3442: u64 [a2 + 1880] = 0\n  3446: ra = 94, jump @4\n      : @126 [@dyn 47] (gas: 1)\n  3451: t0 = 96, jump @804\n      : @127 [@dyn 48] (gas: 1)\n  3456: jump @129 if a0 != 0\n      : @128 (gas: 1)\n  3459: jump @499\n      : @129 (gas: 14)\n  3462: i32 a0 = a3 + 0x44\n  3465: a1 = u64 [0x20020]\n  3470: a2 = u64 [0x20028]\n  3475: a3 = u64 [0x20030]\n  3480: a4 = s1 + 0x20f0\n  3484: a5 = a4 + 0x700\n  3488: u64 [a5 + 0x48] = a1\n  3491: u64 [a5 + 0x40] = a2\n  3494: u64 [a5 + 0x38] = a3\n  3497: a2 = 0x7300000000000000\n  3507: a1 = s1 + 0x2820\n  3511: u64 [a5 + 0x30] = a2\n  3514: ra = 0x218\n  3518: jump @4\n      : @130 (gas: 8)\n  3521: u64 [a2 + 1216] = 0\n  3525: u64 [a2 + 1208] = 0\n  3529: u64 [a2 + 1200] = 0\n  3533: u64 [a2 + 1192] = 0\n  3537: a0 = s1 + 0x3000\n  3541: i32 a0 = a0 + 0xfffffffffffffda0\n  3545: ecalli 11 // 'value_transferred'\n  3547: fallthrough\n      : @131 (gas: 10)\n  3548: a3 = s1 + 0x28f8\n  3552: a4 = a3 + 0x400\n  3556: a0 = u64 [a4 + 0xb8]\n  3560: a1 = u64 [a4 + 0xc0]\n  3564: a2 = u64 [a4 + 0xb0]\n  3568: a3 = u64 [a4 + 0xa8]\n  3572: a1 = a1 | a2\n  3575: a0 = a0 | a3\n  3578: a0 = a0 | a1\n  3581: jump @133 if a0 == 0\n      : @132 (gas: 1)\n  3584: jump @500\n      : @133 (gas: 3)\n  3587: a0 = u64 [s1 + 0x158]\n  3591: a0 = i32 [a0]\n  3593: jump @135 if a0 >u 35\n      : @134 (gas: 1)\n  3597: jump @500\n      : @135 (gas: 5)\n  3600: a0 = s1 + 0x3000\n  3604: i32 a0 = a0 + 0xfffffffffffffdc0\n  3608: a1 = 0x4\n  3611: ecalli 1 // 'call_data_load'\n  3613: fallthrough\n      : @136 (gas: 9)\n  3614: a0 = s1 + 0x28f8\n  3618: t0 = u64 [a0 + 0x4e0]\n  3622: t1 = u64 [a0 + 0x4d8]\n  3626: a1 = u64 [a0 + 0x4d0]\n  3630: a3 = t1 | t0\n  3633: a2 = a1 <u 0x1\n  3636: u64 [s1 + 0x130] = a3\n  3640: a2 = 0 if a3 != 0\n  3642: jump @138 if a2 != 0\n      : @137 (gas: 1)\n  3645: jump @500\n      : @138 (gas: 26)\n  3648: t2 = u64 [a0 + 0x4c8]\n  3652: a0 = u64 [s1 + 0x158]\n  3656: a3 = u32 [a0]\n  3658: a4 = a3 <u t2\n  3661: a5 = a1 >u 0\n  3663: a5 = a4 if a1 == 0\n  3666: a2 = -t1\n  3668: a0 = a2 - a5\n  3671: a2 = a2 <u a5\n  3674: a5 = t1 >u 0\n  3676: a5 = a5 + t0\n  3679: a5 = -a5\n  3681: a5 = a5 - a2\n  3684: a2 = -a1\n  3686: a2 = a2 - a4\n  3689: a3 = a3 - t2\n  3692: a3 = a3 <u 0x64\n  3695: a3 = a3 ^ 0x1\n  3698: a4 = a2 >u 0\n  3700: a4 = a3 if a2 == 0\n  3703: a2 = a5 >s 0\n  3705: a3 = a0 >u 0\n  3707: a3 = a2 if a5 != 0\n  3710: a0 = a0 | a5\n  3713: a4 = a3 if a0 != 0\n  3716: jump @140 if a4 != 0\n      : @139 (gas: 1)\n  3719: jump @500\n      : @140 (gas: 22)\n  3722: a0 = t2 + 0x4\n  3725: u64 [s1 + 0x158] = a0\n  3729: u64 [s1 + 0x120] = t2\n  3733: a0 = a0 <u t2\n  3736: a2 = a1 + a0\n  3739: u64 [s1 + 0x150] = a2\n  3743: u64 [s1 + 0x128] = a1\n  3747: a2 = a2 <u a1\n  3750: a2 = a0 if a0 == 0\n  3753: a2 = a2 + t1\n  3756: u64 [s1 + 0x148] = a2\n  3760: a0 = a2 <u t1\n  3763: a0 = a0 + t0\n  3766: u64 [s1 + 0x140] = a0\n  3770: a0 = 0x30260\n  3775: u64 [s1 + 0x138] = a0\n  3779: i32 a0 = a0 + 0\n  3781: ra = 0x62\n  3784: ecalli 3 // 'caller'\n  3786: a2 = u64 [s1 + 0x138]\n  3790: t0 = 0x64\n  3793: jump @805\n      : @141 [@dyn 49] (gas: 2)\n  3796: a2 = u64 [s1 + 0x138]\n  3800: t0 = 100, jump @805\n      : @142 [@dyn 50] (gas: 9)\n  3805: a2 = s1 + 0x20f0\n  3809: u64 [a2 + 1832] = 0\n  3813: a4 = a2 + 0x700\n  3817: u64 [a4 + 0x20] = a1\n  3820: u64 [a4 + 0x18] = a0\n  3823: a1 = s1 + 0x2800\n  3827: u64 [a4 + 0x10] = a3\n  3830: a0 = 0\n  3832: ra = 102, jump @4\n      : @143 [@dyn 51] (gas: 8)\n  3837: a2 = s1 + 0x20f0\n  3841: u64 [a2 + 1800] = 0\n  3845: u64 [a2 + 1792] = 0\n  3849: u64 [a2 + 1776] = 0x1\n  3854: a0 = 0x20\n  3857: a1 = s1 + 0x27e0\n  3861: u64 [a2 + 1784] = 0\n  3865: ra = 104, jump @4\n      : @144 [@dyn 52] (gas: 3)\n  3870: a1 = 0x40\n  3873: a0 = 0\n  3875: ra = 106, jump @14\n      : @145 [@dyn 53] (gas: 1)\n  3880: t0 = 108, jump @812\n      : @146 [@dyn 54] (gas: 5)\n  3885: ra = 0x6e\n  3888: ecalli 6 // 'hash_keccak_256'\n  3890: a3 = u64 [s1 + 0x138]\n  3894: t0 = 0x70\n  3897: jump @807\n      : @147 [@dyn 55] (gas: 2)\n  3900: a3 = u64 [s1 + 0x138]\n  3904: t0 = 112, jump @807\n      : @148 [@dyn 56] (gas: 8)\n  3909: u64 [a4 + 0x500] = a3\n  3913: a3 = a4 + 0x400\n  3917: u64 [a3 + 0xf8] = a2\n  3921: u64 [a3 + 0xf0] = a1\n  3925: u64 [a3 + 0xe8] = a0\n  3929: a0 = s1 + 0x27c0\n  3933: a1 = s1 + 0x2de0\n  3937: ra = 114, jump @6\n      : @149 [@dyn 57] (gas: 10)\n  3942: a1 = s1 + 0x20f0\n  3946: a0 = u8 [a1 + 0x6d0]\n  3950: u64 [a1 + 1736] = 0\n  3954: u64 [a1 + 1728] = 0\n  3958: u64 [a1 + 0x6b0] = a0\n  3962: a0 = s1 + 0x27a0\n  3966: u64 [a1 + 1720] = 0\n  3970: ra = 0x74\n  3973: t0 = 0x26e\n  3977: jump @795\n      : @150 [@dyn 58] (gas: 21)\n  3980: a5 = s1 + 0x100\n  3984: a2 = u64 [a5 + 0x40]\n  3987: a4 = s1 + 0x20f0\n  3991: u64 [a4 + 0x668] = a2\n  3995: a1 = u64 [a5 + 0x48]\n  3998: u64 [a4 + 0x660] = a1\n  4002: a0 = u64 [a5 + 0x50]\n  4005: u64 [a4 + 0x658] = a0\n  4009: a3 = u64 [a5 + 0x58]\n  4012: a5 = a4 + 0x600\n  4016: u64 [a5 + 0x50] = a3\n  4019: u64 [a5 + 0x88] = a2\n  4023: u64 [a5 + 0x80] = a1\n  4027: u64 [a5 + 0x78] = a0\n  4030: a0 = s1 + 0x2780\n  4034: a1 = s1 + 0x2760\n  4038: a2 = s1 + 0x2740\n  4042: u64 [a5 + 0x70] = a3\n  4045: ra = 0x76\n  4048: t0 = 0x392\n  4052: jump @809\n      : @151 [@dyn 59] (gas: 14)\n  4055: a1 = s1 + 0x20f0\n  4059: a4 = a1 + 0x600\n  4063: a0 = u64 [a4 + 0xa8]\n  4067: a2 = u64 [a4 + 0xa0]\n  4071: a3 = u64 [a4 + 0x98]\n  4075: a1 = u64 [a4 + 0x90]\n  4079: a0 = a0 | a3\n  4082: a3 = a1 | a2\n  4085: a3 = a3 | a0\n  4088: a3 = a3 >> 0x20\n  4091: a0 = a0 | a2\n  4094: a0 = a0 << 0x20\n  4097: a0 = a0 | a3\n  4100: jump @153 if a0 == 0\n      : @152 (gas: 1)\n  4103: jump @499\n      : @153 (gas: 7)\n  4106: i32 a1 = a1 + 0\n  4108: a0 = s1 + 0x3000\n  4112: i32 a0 = a0 + 0xfffffffffffffe00\n  4116: ra = 0x78\n  4119: ecalli 1 // 'call_data_load'\n  4121: t0 = 0x7a\n  4124: jump @832\n      : @154 [@dyn 60] (gas: 1)\n  4127: t0 = 122, jump @832\n      : @155 [@dyn 61] (gas: 17)\n  4132: a0 = u64 [a4 + 0x18]\n  4135: a1 = u64 [a4 + 0x20]\n  4138: a2 = u64 [a4 + 0x10]\n  4141: a3 = u64 [a4 + 0x8]\n  4144: a1 = a1 | a2\n  4147: a0 = a0 | a3\n  4150: a0 = a0 | a1\n  4153: a0 = a0 >u 0\n  4155: a1 = s1 + 0x20f0\n  4159: u64 [a1 + 1608] = 0\n  4163: u64 [a1 + 1600] = 0\n  4167: u64 [a1 + 0x630] = a0\n  4171: a0 = s1 + 0x2720\n  4175: u64 [a1 + 1592] = 0\n  4179: ra = 0x7c\n  4182: t0 = 0x290\n  4186: jump @795\n      : @156 [@dyn 62] (gas: 21)\n  4189: a5 = s1 + 0x100\n  4193: a2 = u64 [a5 + 0x40]\n  4196: a4 = s1 + 0x20f0\n  4200: u64 [a4 + 0x5e8] = a2\n  4204: a1 = u64 [a5 + 0x48]\n  4207: u64 [a4 + 0x5e0] = a1\n  4211: a0 = u64 [a5 + 0x50]\n  4214: u64 [a4 + 0x5d8] = a0\n  4218: a3 = u64 [a5 + 0x58]\n  4221: a5 = a4 + 0x500\n  4225: u64 [a5 + 0xd0] = a3\n  4229: u64 [a4 + 0x608] = a2\n  4233: u64 [a4 + 0x600] = a1\n  4237: u64 [a5 + 0xf8] = a0\n  4241: a0 = s1 + 0x2700\n  4245: a1 = s1 + 0x26e0\n  4249: a2 = s1 + 0x26c0\n  4253: u64 [a5 + 0xf0] = a3\n  4257: ra = 0x7e\n  4260: t0 = 0x392\n  4264: jump @809\n      : @157 [@dyn 63] (gas: 8)\n  4267: a1 = s1 + 0x20f0\n  4271: a5 = a1 + 0x600\n  4275: a0 = u64 [a5 + 0x10]\n  4278: a2 = u64 [a5 + 0x28]\n  4281: a3 = u64 [a5 + 0x18]\n  4284: a4 = u64 [a5 + 0x20]\n  4287: a1 = a0 + 0x20\n  4290: t0 = 128, jump @799\n      : @158 [@dyn 64] (gas: 1)\n  4296: jump @160 if a0 == 0\n      : @159 (gas: 1)\n  4299: jump @499\n      : @160 (gas: 7)\n  4302: i32 a1 = a1 + 0\n  4304: a0 = s1 + 0x3000\n  4308: i32 a0 = a0 + 0xfffffffffffffe20\n  4312: ra = 0x82\n  4316: ecalli 1 // 'call_data_load'\n  4318: t0 = 0x84\n  4322: jump @832\n      : @161 [@dyn 65] (gas: 1)\n  4325: t0 = 132, jump @832\n      : @162 [@dyn 66] (gas: 17)\n  4331: a0 = u64 [a4 + 0x38]\n  4334: a1 = u64 [a4 + 0x40]\n  4337: a2 = u64 [a4 + 0x30]\n  4340: a3 = u64 [a4 + 0x28]\n  4343: a1 = a1 | a2\n  4346: a0 = a0 | a3\n  4349: a0 = a0 | a1\n  4352: a0 = a0 >u 0\n  4354: a1 = s1 + 0x20f0\n  4358: u64 [a1 + 1480] = 0\n  4362: u64 [a1 + 1472] = 0\n  4366: u64 [a1 + 0x5b0] = a0\n  4370: a0 = s1 + 0x26a0\n  4374: u64 [a1 + 1464] = 0\n  4378: ra = 0x86\n  4382: t0 = 0x2b2\n  4386: jump @795\n      : @163 [@dyn 67] (gas: 21)\n  4389: a3 = u64 [s1 + 0x140]\n  4393: a5 = s1 + 0x20f0\n  4397: u64 [a5 + 0x568] = a3\n  4401: a2 = u64 [s1 + 0x148]\n  4405: u64 [a5 + 0x560] = a2\n  4409: a1 = u64 [s1 + 0x150]\n  4413: u64 [a5 + 0x558] = a1\n  4417: a0 = u64 [s1 + 0x158]\n  4421: u64 [a5 + 0x550] = a0\n  4425: a4 = a0\n  4427: u64 [a5 + 0x588] = a3\n  4431: a3 = a5 + 0x500\n  4435: u64 [a3 + 0x80] = a2\n  4439: u64 [a3 + 0x78] = a1\n  4442: a0 = s1 + 0x2680\n  4446: a1 = s1 + 0x2660\n  4450: a2 = s1 + 0x2640\n  4454: u64 [a3 + 0x70] = a4\n  4457: ra = 0x88\n  4461: t0 = 0x392\n  4465: jump @809\n      : @164 [@dyn 68] (gas: 28)\n  4468: a4 = s1 + 0x20f0\n  4472: a0 = u64 [a4 + 0x590]\n  4476: t0 = u64 [a4 + 0x5a8]\n  4480: a2 = u64 [a4 + 0x598]\n  4484: a3 = u64 [a4 + 0x5a0]\n  4488: t2 = a0 + 0x60\n  4491: a5 = t2 <u a0\n  4494: t1 = a2 + a5\n  4497: a1 = t1 <u a2\n  4500: a1 = a5 if a5 == 0\n  4503: a1 = a1 + a3\n  4506: a5 = a1 <u a3\n  4509: a5 = a5 + t0\n  4512: u64 [a4 + 0x4f0] = t2\n  4516: u64 [a4 + 0x528] = t0\n  4520: u64 [a4 + 0x520] = a3\n  4524: a3 = a4 + 0x500\n  4528: u64 [a3 + 0x18] = a2\n  4531: u64 [a3 + 0x10] = a0\n  4534: u64 [a4 + 0x4f8] = t1\n  4538: u64 [a3] = a1\n  4540: a0 = s1 + 0x2620\n  4544: a1 = s1 + 0x2600\n  4548: a2 = s1 + 0x25e0\n  4552: u64 [a3 + 0x8] = a5\n  4555: ra = 0x8a\n  4559: t0 = 0x2d2\n  4563: jump @809\n      : @165 [@dyn 69] (gas: 27)\n  4566: a4 = s1 + 0x20f0\n  4570: a1 = a4 + 0x500\n  4574: a0 = u64 [a1 + 0x30]\n  4577: t0 = u64 [a4 + 0x548]\n  4581: a2 = u64 [a1 + 0x38]\n  4584: a3 = u64 [a1 + 0x40]\n  4587: t2 = a0 + 0x20\n  4590: a5 = t2 <u a0\n  4593: t1 = a2 + a5\n  4596: a1 = t1 <u a2\n  4599: a1 = a5 if a5 == 0\n  4602: a1 = a1 + a3\n  4605: a5 = a1 <u a3\n  4608: a5 = a5 + t0\n  4611: u64 [a4 + 0x470] = t2\n  4615: u64 [a4 + 0x4a8] = t0\n  4619: u64 [a4 + 0x4a0] = a3\n  4623: a3 = a4 + 0x400\n  4627: u64 [a3 + 0x98] = a2\n  4631: u64 [a3 + 0x90] = a0\n  4635: u64 [a4 + 0x478] = t1\n  4639: u64 [a3 + 0x80] = a1\n  4643: a0 = s1 + 0x25a0\n  4647: a1 = s1 + 0x2580\n  4651: a2 = s1 + 0x2560\n  4655: u64 [a3 + 0x88] = a5\n  4659: ra = 140, jump @622\n      : @166 [@dyn 70] (gas: 18)\n  4665: a4 = s1 + 0x20f0\n  4669: a5 = a4 + 0x400\n  4673: a0 = u64 [a5 + 0xe0]\n  4677: a1 = u64 [a5 + 0xe8]\n  4681: a2 = u64 [a5 + 0xd8]\n  4685: a3 = u64 [a5 + 0xd0]\n  4689: a1 = a1 | a2\n  4692: a0 = a0 | a3\n  4695: a0 = a0 | a1\n  4698: a0 = a0 >u 0\n  4700: u64 [a4 + 1128] = 0\n  4704: u64 [a4 + 1120] = 0\n  4708: u64 [a5 + 0x50] = a0\n  4711: a0 = s1 + 0x2540\n  4715: u64 [a4 + 1112] = 0\n  4719: ra = 0x8e\n  4723: t0 = 0x2dc\n  4727: jump @795\n      : @167 [@dyn 71] (gas: 1)\n  4730: t0 = 144, jump @830\n      : @168 [@dyn 72] (gas: 18)\n  4736: a5 = a4 + 0x400\n  4740: u64 [a5 + 0x8] = a2\n  4743: a1 = u64 [s1 + 0x148]\n  4747: u64 [a5] = a1\n  4749: a0 = u64 [s1 + 0x150]\n  4753: u64 [a4 + 0x3f8] = a0\n  4757: a3 = u64 [s1 + 0x158]\n  4761: u64 [a4 + 0x3f0] = a3\n  4765: u64 [a5 + 0x28] = a2\n  4768: u64 [a5 + 0x20] = a1\n  4771: u64 [a5 + 0x18] = a0\n  4774: a0 = s1 + 0x2520\n  4778: a1 = s1 + 0x2500\n  4782: a2 = s1 + 0x24e0\n  4786: u64 [a5 + 0x10] = a3\n  4789: ra = 0x92\n  4793: t0 = 0x392\n  4797: jump @809\n      : @169 [@dyn 73] (gas: 29)\n  4800: a4 = s1 + 0x20f0\n  4804: a1 = a4 + 0x400\n  4808: a0 = u64 [a1 + 0x30]\n  4811: t0 = u64 [a4 + 0x448]\n  4815: a2 = u64 [a1 + 0x38]\n  4818: a3 = u64 [a1 + 0x40]\n  4821: t2 = a0 + 0x60\n  4824: a5 = t2 <u a0\n  4827: t1 = a2 + a5\n  4830: a1 = t1 <u a2\n  4833: a1 = a5 if a5 == 0\n  4836: a1 = a1 + a3\n  4839: a5 = a1 <u a3\n  4842: a5 = a5 + t0\n  4845: u64 [a4 + 0x390] = t2\n  4849: u64 [a4 + 0x3c8] = t0\n  4853: u64 [a4 + 0x3c0] = a3\n  4857: a3 = a4 + 0x300\n  4861: u64 [a3 + 0xb8] = a2\n  4865: u64 [a3 + 0xb0] = a0\n  4869: u64 [a4 + 0x398] = t1\n  4873: u64 [a3 + 0xa0] = a1\n  4877: a0 = s1 + 0x24c0\n  4881: a1 = s1 + 0x24a0\n  4885: a2 = s1 + 0x2480\n  4889: u64 [a3 + 0xa8] = a5\n  4893: ra = 0x94\n  4897: t0 = 0x2d2\n  4901: jump @809\n      : @170 [@dyn 74] (gas: 18)\n  4904: a4 = s1 + 0x20f0\n  4908: a5 = a4 + 0x300\n  4912: a3 = u64 [a5 + 0xd0]\n  4916: a0 = u64 [a5 + 0xd8]\n  4920: a1 = u64 [a5 + 0xe0]\n  4924: a2 = u64 [a5 + 0xe8]\n  4928: u64 [a5 + 0x28] = a2\n  4931: u64 [a5 + 0x20] = a1\n  4934: u64 [a5 + 0x18] = a0\n  4937: u64 [a5 + 0x10] = a3\n  4940: u64 [a5 + 0x48] = a2\n  4943: u64 [a5 + 0x40] = a1\n  4946: u64 [a5 + 0x38] = a0\n  4949: a0 = s1 + 0x2440\n  4953: a1 = s1 + 0x2420\n  4957: a2 = s1 + 0x2400\n  4961: u64 [a5 + 0x30] = a3\n  4964: ra = 150, jump @622\n      : @171 [@dyn 75] (gas: 18)\n  4970: a4 = s1 + 0x20f0\n  4974: a5 = a4 + 0x300\n  4978: a0 = u64 [a5 + 0x80]\n  4982: a1 = u64 [a5 + 0x88]\n  4986: a2 = u64 [a5 + 0x78]\n  4989: a3 = u64 [a5 + 0x70]\n  4992: a1 = a1 | a2\n  4995: a0 = a0 | a3\n  4998: a0 = a0 | a1\n  5001: a0 = a0 >u 0\n  5003: u64 [a4 + 776] = 0\n  5007: u64 [a4 + 768] = 0\n  5011: u64 [a4 + 0x2f0] = a0\n  5015: a0 = s1 + 0x23e0\n  5019: u64 [a4 + 760] = 0\n  5023: ra = 0x98\n  5027: t0 = 0x2fc\n  5031: jump @795\n      : @172 [@dyn 76] (gas: 1)\n  5034: t0 = 154, jump @830\n      : @173 [@dyn 77] (gas: 18)\n  5040: a5 = a4 + 0x200\n  5044: u64 [a5 + 0xa8] = a2\n  5048: a1 = u64 [s1 + 0x148]\n  5052: u64 [a5 + 0xa0] = a1\n  5056: a0 = u64 [s1 + 0x150]\n  5060: u64 [a5 + 0x98] = a0\n  5064: a3 = u64 [s1 + 0x158]\n  5068: u64 [a5 + 0x90] = a3\n  5072: u64 [a5 + 0xc8] = a2\n  5076: u64 [a5 + 0xc0] = a1\n  5080: u64 [a5 + 0xb8] = a0\n  5084: a0 = s1 + 0x23c0\n  5088: a1 = s1 + 0x23a0\n  5092: a2 = s1 + 0x2380\n  5096: u64 [a5 + 0xb0] = a3\n  5100: ra = 0x9c\n  5104: t0 = 0x392\n  5108: jump @809\n      : @174 [@dyn 78] (gas: 28)\n  5111: a4 = s1 + 0x20f0\n  5115: a0 = u64 [a4 + 0x2d0]\n  5119: t0 = u64 [a4 + 0x2e8]\n  5123: a2 = u64 [a4 + 0x2d8]\n  5127: a3 = u64 [a4 + 0x2e0]\n  5131: t2 = a0 + 0x80\n  5135: a5 = t2 <u a0\n  5138: t1 = a2 + a5\n  5141: a1 = t1 <u a2\n  5144: a1 = a5 if a5 == 0\n  5147: a1 = a1 + a3\n  5150: a5 = a1 <u a3\n  5153: a5 = a5 + t0\n  5156: u64 [a4 + 0x230] = t2\n  5160: u64 [a4 + 0x268] = t0\n  5164: u64 [a4 + 0x260] = a3\n  5168: a3 = a4 + 0x200\n  5172: u64 [a3 + 0x58] = a2\n  5175: u64 [a3 + 0x50] = a0\n  5178: u64 [a4 + 0x238] = t1\n  5182: u64 [a3 + 0x40] = a1\n  5185: a0 = s1 + 0x2360\n  5189: a1 = s1 + 0x2340\n  5193: a2 = s1 + 0x2320\n  5197: u64 [a3 + 0x48] = a5\n  5200: ra = 0x9e\n  5204: t0 = 0x2d2\n  5208: jump @809\n      : @175 [@dyn 79] (gas: 27)\n  5211: a4 = s1 + 0x20f0\n  5215: a1 = a4 + 0x200\n  5219: a0 = u64 [a1 + 0x70]\n  5222: t0 = u64 [a4 + 0x288]\n  5226: a2 = u64 [a1 + 0x78]\n  5229: a3 = u64 [a1 + 0x80]\n  5233: t2 = a0 + 0x20\n  5236: a5 = t2 <u a0\n  5239: t1 = a2 + a5\n  5242: a1 = t1 <u a2\n  5245: a1 = a5 if a5 == 0\n  5248: a1 = a1 + a3\n  5251: a5 = a1 <u a3\n  5254: a5 = a5 + t0\n  5257: u64 [a4 + 0x1b0] = t2\n  5261: u64 [a4 + 0x1e8] = t0\n  5265: u64 [a4 + 0x1e0] = a3\n  5269: a3 = a4 + 0x100\n  5273: u64 [a3 + 0xd8] = a2\n  5277: u64 [a3 + 0xd0] = a0\n  5281: u64 [a4 + 0x1b8] = t1\n  5285: u64 [a3 + 0xc0] = a1\n  5289: a0 = s1 + 0x22e0\n  5293: a1 = s1 + 0x22c0\n  5297: a2 = s1 + 0x22a0\n  5301: u64 [a3 + 0xc8] = a5\n  5305: ra = 160, jump @622\n      : @176 [@dyn 80] (gas: 18)\n  5311: a4 = s1 + 0x20f0\n  5315: a5 = a4 + 0x200\n  5319: a0 = u64 [a5 + 0x20]\n  5322: a1 = u64 [a5 + 0x28]\n  5325: a2 = u64 [a5 + 0x18]\n  5328: a3 = u64 [a5 + 0x10]\n  5331: a1 = a1 | a2\n  5334: a0 = a0 | a3\n  5337: a0 = a0 | a1\n  5340: a0 = a0 >u 0\n  5342: u64 [a4 + 424] = 0\n  5346: u64 [a4 + 416] = 0\n  5350: u64 [a4 + 0x190] = a0\n  5354: a0 = s1 + 0x2280\n  5358: u64 [a4 + 408] = 0\n  5362: ra = 0xa2\n  5366: t0 = 0x31c\n  5370: jump @795\n      : @177 [@dyn 81] (gas: 1)\n  5373: t0 = 164, jump @830\n      : @178 [@dyn 82] (gas: 18)\n  5379: a5 = a4 + 0x100\n  5383: u64 [a5 + 0x48] = a2\n  5386: a1 = u64 [s1 + 0x148]\n  5390: u64 [a5 + 0x40] = a1\n  5393: a0 = u64 [s1 + 0x150]\n  5397: u64 [a5 + 0x38] = a0\n  5400: a3 = u64 [s1 + 0x158]\n  5404: u64 [a5 + 0x30] = a3\n  5407: u64 [a5 + 0x68] = a2\n  5410: u64 [a5 + 0x60] = a1\n  5413: u64 [a5 + 0x58] = a0\n  5416: a0 = s1 + 0x2260\n  5420: a1 = s1 + 0x2240\n  5424: a2 = s1 + 0x2220\n  5428: u64 [a5 + 0x50] = a3\n  5431: ra = 0xa6\n  5435: t0 = 0x392\n  5439: jump @809\n      : @179 [@dyn 83] (gas: 27)\n  5442: a4 = s1 + 0x20f0\n  5446: a0 = u64 [a4 + 0x170]\n  5450: t0 = u64 [a4 + 0x188]\n  5454: a2 = u64 [a4 + 0x178]\n  5458: a3 = u64 [a4 + 0x180]\n  5462: t2 = a0 + 0x80\n  5466: a5 = t2 <u a0\n  5469: t1 = a2 + a5\n  5472: a1 = t1 <u a2\n  5475: a1 = a5 if a5 == 0\n  5478: a1 = a1 + a3\n  5481: a5 = a1 <u a3\n  5484: a5 = a5 + t0\n  5487: u64 [a4 + 0xd0] = t2\n  5491: u64 [a4 + 0x108] = t0\n  5495: u64 [a4 + 0x100] = a3\n  5499: u64 [a4 + 0xf8] = a2\n  5503: u64 [a4 + 0xf0] = a0\n  5507: u64 [a4 + 0xd8] = t1\n  5511: u64 [a4 + 0xe0] = a1\n  5515: a0 = s1 + 0x2200\n  5519: a1 = s1 + 0x21e0\n  5523: a2 = s1 + 0x21c0\n  5527: u64 [a4 + 0xe8] = a5\n  5531: ra = 0xa8\n  5535: t0 = 0x2d2\n  5539: jump @809\n      : @180 [@dyn 84] (gas: 18)\n  5542: a4 = s1 + 0x20f0\n  5546: a5 = a4 + 0x100\n  5550: a3 = u64 [a5 + 0x10]\n  5553: a0 = u64 [a5 + 0x18]\n  5556: a1 = u64 [a5 + 0x20]\n  5559: a2 = u64 [a5 + 0x28]\n  5562: u64 [a4 + 0x68] = a2\n  5565: u64 [a4 + 0x60] = a1\n  5568: u64 [a4 + 0x58] = a0\n  5571: u64 [a4 + 0x50] = a3\n  5574: u64 [a4 + 0x88] = a2\n  5578: u64 [a4 + 0x80] = a1\n  5582: u64 [a4 + 0x78] = a0\n  5585: a0 = s1 + 0x2180\n  5589: a1 = s1 + 0x2160\n  5593: a2 = s1 + 0x2140\n  5597: u64 [a4 + 0x70] = a3\n  5600: ra = 170, jump @622\n      : @181 [@dyn 85] (gas: 17)\n  5606: a4 = s1 + 0x20f0\n  5610: a0 = u64 [a4 + 0xc0]\n  5614: a1 = u64 [a4 + 0xc8]\n  5618: a2 = u64 [a4 + 0xb8]\n  5622: a3 = u64 [a4 + 0xb0]\n  5626: a1 = a1 | a2\n  5629: a0 = a0 | a3\n  5632: a0 = a0 | a1\n  5635: a0 = a0 >u 0\n  5637: u64 [a4 + 72] = 0\n  5640: u64 [a4 + 64] = 0\n  5643: u64 [a4 + 0x30] = a0\n  5646: a0 = s1 + 0x2120\n  5650: u64 [a4 + 56] = 0\n  5653: ra = 0xac\n  5657: t0 = 0x33e\n  5661: jump @795\n      : @182 [@dyn 86] (gas: 8)\n  5664: a0 = s1 + 0x28f8\n  5668: u64 [a0 + 1376] = 0\n  5672: u64 [a0 + 1368] = 0\n  5676: u64 [a0 + 1360] = 0\n  5680: u64 [a0 + 1352] = 0x2\n  5685: a0 = s1 + 0x2100\n  5689: a1 = s1 + 0x2e40\n  5693: ra = 174, jump @6\n      : @183 [@dyn 87] (gas: 18)\n  5699: a3 = s1 + 0x20f0\n  5703: a0 = u64 [a3 + 0x28]\n  5706: a1 = u64 [a3 + 0x20]\n  5709: a2 = u64 [a3 + 0x18]\n  5712: a3 = u64 [a3 + 0x10]\n  5715: u64 [s1 + 0x138] = a0\n  5719: a4 = s1 + 0x18f0\n  5723: a5 = a4 + 0x700\n  5727: u64 [a5 + 0xe8] = a0\n  5731: u64 [s1 + 0x118] = a1\n  5735: u64 [a5 + 0xe0] = a1\n  5739: u64 [s1 + 0x110] = a2\n  5743: u64 [a5 + 0xd8] = a2\n  5747: a0 = s1 + 0x20e0\n  5751: a1 = s1 + 0x20c0\n  5755: u64 [s1 + 0x108] = a3\n  5759: u64 [a5 + 0xd0] = a3\n  5763: ra = 176, jump @728\n      : @184 [@dyn 88] (gas: 19)\n  5769: a1 = s1 + 0x18f0\n  5773: a0 = u64 [a1 + 0x7f0]\n  5777: a1 = u64 [a1 + 0x7f8]\n  5781: a3 = s1 + 0x20f0\n  5785: a2 = u64 [a3]\n  5787: a3 = u64 [a3 + 0x8]\n  5790: a4 = s1 + 0x28f8\n  5794: u64 [a4 + 1408] = 0\n  5798: u64 [a4 + 1400] = 0\n  5802: u64 [a4 + 1392] = 0\n  5806: u64 [a4 + 1384] = 0x2\n  5811: a5 = a4 + 0x500\n  5815: u64 [a5 + 0xa0] = a3\n  5819: u64 [a5 + 0x98] = a2\n  5823: u64 [a5 + 0x90] = a1\n  5827: u64 [a5 + 0x88] = a0\n  5831: a0 = s1 + 0x2e60\n  5835: a1 = s1 + 0x2e80\n  5839: ra = 178, jump @7\n      : @185 [@dyn 89] (gas: 22)\n  5845: a0 = s1 + 0x18f0\n  5849: a5 = s1 + 0x100\n  5853: a4 = u64 [a5 + 0x40]\n  5856: u64 [a0 + 0x788] = a4\n  5860: a2 = u64 [a5 + 0x48]\n  5863: u64 [a0 + 0x780] = a2\n  5867: a1 = u64 [a5 + 0x50]\n  5870: u64 [a0 + 0x778] = a1\n  5874: a3 = u64 [a5 + 0x58]\n  5877: a5 = a0 + 0x700\n  5881: u64 [a5 + 0x70] = a3\n  5884: u64 [a5 + 0xa8] = a4\n  5888: u64 [a5 + 0xa0] = a2\n  5892: u64 [a5 + 0x98] = a1\n  5896: a4 = a0\n  5898: a0 = s1 + 0x20a0\n  5902: a1 = s1 + 0x2080\n  5906: a2 = s1 + 0x2060\n  5910: u64 [a4 + 0x790] = a3\n  5914: ra = 0xb4\n  5918: t0 = 0x392\n  5922: jump @809\n      : @186 [@dyn 90] (gas: 8)\n  5925: a1 = s1 + 0x18f0\n  5929: a5 = a1 + 0x700\n  5933: a0 = u64 [a5 + 0xb0]\n  5937: a2 = u64 [a5 + 0xc8]\n  5941: a3 = u64 [a5 + 0xb8]\n  5945: a4 = u64 [a5 + 0xc0]\n  5949: a1 = a0 + 0x40\n  5952: t0 = 182, jump @799\n      : @187 [@dyn 91] (gas: 1)\n  5958: jump @189 if a0 == 0\n      : @188 (gas: 1)\n  5961: jump @499\n      : @189 (gas: 41)\n  5964: i32 a1 = a1 + 0\n  5966: a0 = s1 + 0x3000\n  5970: i32 a0 = a0 + 0xfffffffffffffea0\n  5974: ecalli 1 // 'call_data_load'\n  5976: a0 = s1 + 0x28f8\n  5980: a2 = a0 + 0x500\n  5984: a1 = u64 [a2 + 0xc0]\n  5988: u64 [s1 + 0xc8] = a1\n  5992: a1 = u64 [a2 + 0xb8]\n  5996: u64 [s1 + 0xd0] = a1\n  6000: a1 = u64 [a2 + 0xb0]\n  6004: u64 [s1 + 0xd8] = a1\n  6008: a0 = u64 [a2 + 0xa8]\n  6012: u64 [s1 + 0xe0] = a0\n  6016: a0 = s1 + 0x18f0\n  6020: a5 = s1 + 0x100\n  6024: a3 = u64 [a5 + 0x40]\n  6027: u64 [a0 + 0x728] = a3\n  6031: a0 = s1 + 0x18f0\n  6035: a2 = u64 [a5 + 0x48]\n  6038: u64 [a0 + 0x720] = a2\n  6042: a0 = s1 + 0x18f0\n  6046: a1 = u64 [a5 + 0x50]\n  6049: u64 [a0 + 0x718] = a1\n  6053: a0 = s1 + 0x18f0\n  6057: a4 = u64 [a5 + 0x58]\n  6060: u64 [a0 + 0x710] = a4\n  6064: a0 = s1 + 0x18f0\n  6068: u64 [a0 + 0x748] = a3\n  6072: a0 = s1 + 0x18f0\n  6076: u64 [a0 + 0x740] = a2\n  6080: a0 = s1 + 0x18f0\n  6084: u64 [a0 + 0x738] = a1\n  6088: a0 = s1 + 0x2040\n  6092: a1 = s1 + 0x2020\n  6096: a2 = s1 + 0x2000\n  6100: a3 = s1 + 0x18f0\n  6104: u64 [a3 + 0x730] = a4\n  6108: ra = 0xb8\n  6112: t0 = 0x392\n  6116: jump @809\n      : @190 [@dyn 92] (gas: 8)\n  6119: a1 = s1 + 0x18f0\n  6123: a5 = a1 + 0x700\n  6127: a0 = u64 [a5 + 0x50]\n  6130: a2 = u64 [a5 + 0x68]\n  6133: a3 = u64 [a5 + 0x58]\n  6136: a4 = u64 [a5 + 0x60]\n  6139: a1 = a0 + 0xc0\n  6143: t0 = 186, jump @799\n      : @191 [@dyn 93] (gas: 1)\n  6149: jump @193 if a0 == 0\n      : @192 (gas: 1)\n  6152: jump @499\n      : @193 (gas: 5)\n  6155: i32 a1 = a1 + 0\n  6157: a0 = s1 + 0x3000\n  6161: i32 a0 = a0 + 0xfffffffffffffec0\n  6165: ecalli 1 // 'call_data_load'\n  6167: fallthrough\n      : @194 (gas: 15)\n  6168: a0 = s1 + 0x28f8\n  6172: a5 = a0 + 0x500\n  6176: a3 = u64 [a5 + 0xe0]\n  6180: a2 = u64 [a5 + 0xd8]\n  6184: a1 = u64 [a5 + 0xc8]\n  6188: a4 = u64 [a5 + 0xd0]\n  6192: u64 [s1 + 0xb8] = a2\n  6196: u64 [s1 + 0xb0] = a3\n  6200: a0 = a2 | a3\n  6203: u64 [s1 + 0xc0] = a1\n  6207: a1 = a1 <u 0x6\n  6210: u64 [s1 + 0xa8] = a4\n  6214: a1 = 0 if a4 != 0\n  6216: a1 = 0 if a0 != 0\n  6218: jump @196 if a1 != 0\n      : @195 (gas: 1)\n  6221: jump @505\n      : @196 (gas: 3)\n  6224: a0 = s1 + 0x1fe0\n  6228: a1 = 0x40\n  6231: ra = 188, jump @2\n      : @197 [@dyn 94] (gas: 14)\n  6237: a0 = s1 + 0x18f0\n  6241: a1 = u64 [a0 + 0x708]\n  6245: u64 [s1 + 0xf0] = a1\n  6249: a1 = u64 [a0 + 0x700]\n  6253: u64 [s1 + 0xe8] = a1\n  6257: a1 = u64 [a0 + 0x6f8]\n  6261: u64 [s1 + 0xf8] = a1\n  6265: a0 = u64 [a0 + 0x6f0]\n  6269: u64 [s1 + 0x100] = a0\n  6273: a0 = s1 + 0x3000\n  6277: i32 a0 = a0 + 0xfffffffffffffee0\n  6281: ra = 0xbe\n  6285: ecalli 7 // 'now'\n  6287: fallthrough\n      : @198 [@dyn 95] (gas: 6)\n  6288: a0 = u64 [s1 + 0xf0]\n  6292: a1 = u64 [s1 + 0xf8]\n  6296: a0 = a0 | a1\n  6299: a2 = u64 [s1 + 0xe8]\n  6303: a1 = u64 [s1 + 0x100]\n  6307: t0 = 192, jump @828\n      : @199 [@dyn 96] (gas: 1)\n  6313: jump @201 if a0 == 0\n      : @200 (gas: 1)\n  6316: jump @499\n      : @201 (gas: 1)\n  6319: t0 = 194, jump @832\n      : @202 [@dyn 97] (gas: 13)\n  6325: a0 = u64 [a4 + 0xe8]\n  6329: a1 = u64 [a4 + 0xf0]\n  6333: a2 = u64 [a4 + 0xf8]\n  6337: a3 = u64 [a3 + 0x600]\n  6341: a4 = s1 + 0x18f0\n  6345: a5 = a4 + 0x600\n  6349: u64 [a5 + 0xe8] = a3\n  6353: u64 [a5 + 0xe0] = a2\n  6357: u64 [a5 + 0xd8] = a1\n  6361: a1 = s1 + 0x1fc0\n  6365: u64 [a5 + 0xd0] = a0\n  6369: a0 = u64 [s1 + 0x100]\n  6373: ra = 196, jump @4\n      : @203 [@dyn 98] (gas: 5)\n  6379: a1 = u64 [s1 + 0x100]\n  6383: a0 = a1 + 0x20\n  6386: a1 = a0 <u a1\n  6389: a3 = u64 [s1 + 0xf8]\n  6393: t0 = 198, jump @820\n      : @204 [@dyn 99] (gas: 23)\n  6399: a1 = u64 [s1 + 0xe8]\n  6403: a3 = a3 + a1\n  6406: a1 = a3 <u a1\n  6409: a4 = u64 [s1 + 0xf0]\n  6413: a4 = a4 + a1\n  6416: a1 = s1 + 0x18f0\n  6420: a5 = a1 + 0x600\n  6424: u64 [a5 + 0x98] = a2\n  6428: u64 [a5 + 0x90] = a0\n  6432: a0 = u64 [s1 + 0xb0]\n  6436: u64 [a5 + 0xc8] = a0\n  6440: a0 = u64 [s1 + 0xb8]\n  6444: u64 [a5 + 0xc0] = a0\n  6448: a0 = u64 [s1 + 0xa8]\n  6452: u64 [a5 + 0xb8] = a0\n  6456: a0 = u64 [s1 + 0xc0]\n  6460: u64 [a5 + 0xb0] = a0\n  6464: u64 [a5 + 0xa0] = a3\n  6468: a2 = a1\n  6470: a0 = s1 + 0x1fa0\n  6474: a1 = s1 + 0x1f80\n  6478: u64 [a2 + 0x6a8] = a4\n  6482: ra = 200, jump @736\n      : @205 [@dyn 100] (gas: 3)\n  6488: a3 = 0x100000000\n  6498: a0 = 0xffffffdc\n  6508: t0 = 202, jump @827\n      : @206 [@dyn 101] (gas: 1)\n  6514: jump @208 if a0 != 0\n      : @207 (gas: 1)\n  6517: jump @499\n      : @208 (gas: 6)\n  6520: i32 a1 = a2 + 0x24\n  6523: a0 = s1 + 0x3000\n  6527: i32 a0 = a0 + 0xffffffffffffff00\n  6531: u64 [s1 + 0xc0] = a3\n  6535: ecalli 1 // 'call_data_load'\n  6537: fallthrough\n      : @209 (gas: 11)\n  6538: a0 = u64 [s1 + 0xf0]\n  6542: a1 = u64 [s1 + 0xe8]\n  6546: a2 = a1 | a0\n  6549: a0 = u64 [s1 + 0xc0]\n  6553: a0 = a0 + 0xffffffffffffffc0\n  6556: a1 = u64 [s1 + 0x100]\n  6560: a0 = a1 <u a0\n  6563: a1 = u64 [s1 + 0xf8]\n  6567: a0 = 0 if a1 != 0\n  6569: a0 = 0 if a2 != 0\n  6571: jump @211 if a0 != 0\n      : @210 (gas: 1)\n  6574: jump @499\n      : @211 (gas: 17)\n  6577: u64 [s1 + 0xf0] = a2\n  6581: a0 = s1 + 0x28f8\n  6585: a5 = a0 + 0x600\n  6589: a2 = u64 [a5 + 0x8]\n  6592: a1 = u64 [a5 + 0x10]\n  6595: a3 = u64 [a5 + 0x18]\n  6598: a4 = u64 [a5 + 0x20]\n  6601: a0 = u64 [s1 + 0x100]\n  6605: i32 a0 = a0 + 0x40\n  6608: a5 = s1 + 0x18f0\n  6612: u64 [a5 + 0x688] = a4\n  6616: a4 = a5 + 0x600\n  6620: u64 [a4 + 0x80] = a3\n  6624: u64 [a4 + 0x78] = a1\n  6627: a1 = s1 + 0x1f60\n  6631: u64 [a4 + 0x70] = a2\n  6634: ra = 204, jump @4\n      : @212 [@dyn 102] (gas: 3)\n  6640: a3 = 0x100000000\n  6650: a0 = 0xffffffbc\n  6660: t0 = 206, jump @827\n      : @213 [@dyn 103] (gas: 1)\n  6666: jump @215 if a0 != 0\n      : @214 (gas: 1)\n  6669: jump @499\n      : @215 (gas: 6)\n  6672: i32 a1 = a2 + 0x44\n  6675: a0 = s1 + 0x3000\n  6679: i32 a0 = a0 + 0xffffffffffffff20\n  6683: u64 [s1 + 0x130] = a3\n  6687: ecalli 1 // 'call_data_load'\n  6689: fallthrough\n      : @216 (gas: 9)\n  6690: a0 = u64 [s1 + 0x130]\n  6694: a0 = a0 + 0xffffffffffffffa0\n  6697: a1 = u64 [s1 + 0x100]\n  6701: a0 = a1 <u a0\n  6704: a1 = u64 [s1 + 0xf8]\n  6708: a0 = 0 if a1 != 0\n  6710: a1 = u64 [s1 + 0xf0]\n  6714: a0 = 0 if a1 != 0\n  6716: jump @218 if a0 != 0\n      : @217 (gas: 1)\n  6719: jump @499\n      : @218 (gas: 16)\n  6722: a0 = s1 + 0x28f8\n  6726: a5 = a0 + 0x600\n  6730: a2 = u64 [a5 + 0x28]\n  6733: a1 = u64 [a5 + 0x30]\n  6736: a3 = u64 [a5 + 0x38]\n  6739: a4 = u64 [a5 + 0x40]\n  6742: a0 = u64 [s1 + 0x100]\n  6746: i32 a0 = a0 + 0x60\n  6749: a5 = s1 + 0x18f0\n  6753: u64 [a5 + 0x668] = a4\n  6757: a4 = a5 + 0x600\n  6761: u64 [a4 + 0x60] = a3\n  6764: u64 [a4 + 0x58] = a1\n  6767: a1 = s1 + 0x1f40\n  6771: u64 [a4 + 0x50] = a2\n  6774: ra = 208, jump @4\n      : @219 [@dyn 104] (gas: 35)\n  6780: a0 = u64 [s1 + 0xc8]\n  6784: a1 = s1 + 0x18f0\n  6788: a2 = a1 + 0x600\n  6792: u64 [a2 + 0x8] = a0\n  6795: a0 = u64 [s1 + 0xd0]\n  6799: u64 [a2] = a0\n  6801: a0 = u64 [s1 + 0xd8]\n  6805: u64 [a1 + 0x5f8] = a0\n  6809: a0 = u64 [s1 + 0xe0]\n  6813: u64 [a1 + 0x5f0] = a0\n  6817: a0 = u64 [s1 + 0x138]\n  6821: u64 [a2 + 0x28] = a0\n  6824: a0 = u64 [s1 + 0x118]\n  6828: u64 [a2 + 0x20] = a0\n  6831: a0 = u64 [s1 + 0x110]\n  6835: u64 [a2 + 0x18] = a0\n  6838: a4 = a1\n  6840: a0 = u64 [0x20038]\n  6845: a1 = u64 [0x20040]\n  6850: a2 = u64 [0x20048]\n  6855: a3 = u64 [0x20050]\n  6860: a5 = a4 + 0x600\n  6864: u64 [a5 + 0x48] = a0\n  6867: u64 [a5 + 0x40] = a1\n  6870: u64 [a5 + 0x38] = a2\n  6873: u64 [a5 + 0x30] = a3\n  6876: a5 = a4\n  6878: a1 = 0x80\n  6882: a2 = s1 + 0x1f20\n  6886: a3 = s1 + 0x1f00\n  6890: a4 = s1 + 0x1ee0\n  6894: a0 = u64 [s1 + 0x108]\n  6898: u64 [a5 + 0x610] = a0\n  6902: a0 = u64 [s1 + 0x100]\n  6906: ra = 210, jump @10\n      : @220 [@dyn 105] (gas: 21)\n  6912: a5 = s1 + 0x100\n  6916: a2 = u64 [a5 + 0x40]\n  6919: a4 = s1 + 0x18f0\n  6923: u64 [a4 + 0x5a8] = a2\n  6927: a1 = u64 [a5 + 0x48]\n  6930: u64 [a4 + 0x5a0] = a1\n  6934: a0 = u64 [a5 + 0x50]\n  6937: u64 [a4 + 0x598] = a0\n  6941: a3 = u64 [a5 + 0x58]\n  6944: a5 = a4 + 0x500\n  6948: u64 [a5 + 0x90] = a3\n  6952: u64 [a5 + 0xc8] = a2\n  6956: u64 [a5 + 0xc0] = a1\n  6960: u64 [a5 + 0xb8] = a0\n  6964: a0 = s1 + 0x1ec0\n  6968: a1 = s1 + 0x1ea0\n  6972: a2 = s1 + 0x1e80\n  6976: u64 [a5 + 0xb0] = a3\n  6980: ra = 0xd4\n  6984: t0 = 0x392\n  6988: jump @809\n      : @221 [@dyn 106] (gas: 14)\n  6991: a1 = s1 + 0x18f0\n  6995: a4 = a1 + 0x500\n  6999: a0 = u64 [a4 + 0xe8]\n  7003: a2 = u64 [a4 + 0xe0]\n  7007: a3 = u64 [a4 + 0xd8]\n  7011: a1 = u64 [a4 + 0xd0]\n  7015: a0 = a0 | a3\n  7018: a3 = a1 | a2\n  7021: a3 = a3 | a0\n  7024: a3 = a3 >> 0x20\n  7027: a0 = a0 | a2\n  7030: a0 = a0 << 0x20\n  7033: a0 = a0 | a3\n  7036: jump @223 if a0 == 0\n      : @222 (gas: 1)\n  7039: jump @499\n      : @223 (gas: 35)\n  7042: i32 a1 = a1 + 0\n  7044: a0 = s1 + 0x3000\n  7048: i32 a0 = a0 + 0xffffffffffffff40\n  7052: ecalli 1 // 'call_data_load'\n  7054: a0 = s1 + 0x28f8\n  7058: a2 = a0 + 0x600\n  7062: a1 = u64 [a2 + 0x60]\n  7065: a5 = s1 + 0x100\n  7069: u64 [a5] = a1\n  7071: a1 = u64 [a2 + 0x58]\n  7074: u64 [a5 + 0x20] = a1\n  7077: a1 = u64 [a2 + 0x50]\n  7080: u64 [a5 + 0x28] = a1\n  7083: a0 = u64 [a2 + 0x48]\n  7086: u64 [a5 + 0x30] = a0\n  7089: a4 = s1 + 0x18f0\n  7093: a2 = u64 [a5 + 0x40]\n  7096: u64 [a4 + 0x548] = a2\n  7100: a1 = u64 [a5 + 0x48]\n  7103: u64 [a4 + 0x540] = a1\n  7107: a0 = u64 [a5 + 0x50]\n  7110: u64 [a4 + 0x538] = a0\n  7114: a3 = u64 [a5 + 0x58]\n  7117: a5 = a4 + 0x500\n  7121: u64 [a5 + 0x30] = a3\n  7124: u64 [a5 + 0x68] = a2\n  7127: u64 [a5 + 0x60] = a1\n  7130: u64 [a5 + 0x58] = a0\n  7133: a0 = s1 + 0x1e60\n  7137: a1 = s1 + 0x1e40\n  7141: a2 = s1 + 0x1e20\n  7145: u64 [a5 + 0x50] = a3\n  7148: ra = 0xd6\n  7152: t0 = 0x392\n  7156: jump @809\n      : @224 [@dyn 107] (gas: 8)\n  7159: a1 = s1 + 0x18f0\n  7163: a5 = a1 + 0x500\n  7167: a0 = u64 [a5 + 0x70]\n  7170: a2 = u64 [a5 + 0x88]\n  7174: a3 = u64 [a5 + 0x78]\n  7177: a4 = u64 [a5 + 0x80]\n  7181: a1 = a0 + 0x20\n  7184: t0 = 216, jump @799\n      : @225 [@dyn 108] (gas: 1)\n  7190: jump @227 if a0 == 0\n      : @226 (gas: 1)\n  7193: jump @499\n      : @227 (gas: 34)\n  7196: i32 a1 = a1 + 0\n  7198: a0 = s1 + 0x3000\n  7202: i32 a0 = a0 + 0xffffffffffffff60\n  7206: ecalli 1 // 'call_data_load'\n  7208: a0 = s1 + 0x28f8\n  7212: a2 = a0 + 0x600\n  7216: a1 = u64 [a2 + 0x68]\n  7219: u64 [s1 + 0xe8] = a1\n  7223: a1 = u64 [a2 + 0x70]\n  7226: u64 [s1 + 0xe0] = a1\n  7230: a1 = u64 [a2 + 0x78]\n  7233: u64 [s1 + 0xd8] = a1\n  7237: a0 = u64 [a2 + 0x80]\n  7241: u64 [s1 + 0xd0] = a0\n  7245: a4 = s1 + 0x18f0\n  7249: a2 = u64 [s1 + 0x140]\n  7253: a5 = a4 + 0x400\n  7257: u64 [a5 + 0xe8] = a2\n  7261: a1 = u64 [s1 + 0x148]\n  7265: u64 [a5 + 0xe0] = a1\n  7269: a0 = u64 [s1 + 0x150]\n  7273: u64 [a5 + 0xd8] = a0\n  7277: a3 = u64 [s1 + 0x158]\n  7281: u64 [a5 + 0xd0] = a3\n  7285: u64 [a4 + 0x508] = a2\n  7289: u64 [a4 + 0x500] = a1\n  7293: u64 [a5 + 0xf8] = a0\n  7297: a0 = s1 + 0x1e00\n  7301: a1 = s1 + 0x1de0\n  7305: a2 = s1 + 0x1dc0\n  7309: u64 [a5 + 0xf0] = a3\n  7313: ra = 0xda\n  7317: t0 = 0x392\n  7321: jump @809\n      : @228 [@dyn 109] (gas: 27)\n  7324: a4 = s1 + 0x18f0\n  7328: a1 = a4 + 0x500\n  7332: a0 = u64 [a1 + 0x10]\n  7335: t0 = u64 [a4 + 0x528]\n  7339: a2 = u64 [a1 + 0x18]\n  7342: a3 = u64 [a1 + 0x20]\n  7345: t2 = a0 + 0xa0\n  7349: a5 = t2 <u a0\n  7352: t1 = a2 + a5\n  7355: a1 = t1 <u a2\n  7358: a1 = a5 if a5 == 0\n  7361: a1 = a1 + a3\n  7364: a5 = a1 <u a3\n  7367: a5 = a5 + t0\n  7370: u64 [a4 + 0x450] = t2\n  7374: u64 [a4 + 0x488] = t0\n  7378: u64 [a4 + 0x480] = a3\n  7382: a3 = a4 + 0x400\n  7386: u64 [a3 + 0x78] = a2\n  7389: u64 [a3 + 0x70] = a0\n  7392: u64 [a4 + 0x458] = t1\n  7396: u64 [a3 + 0x60] = a1\n  7399: a0 = s1 + 0x1d80\n  7403: a1 = s1 + 0x1d60\n  7407: a2 = s1 + 0x1d40\n  7411: u64 [a3 + 0x68] = a5\n  7414: ra = 220, jump @622\n      : @229 [@dyn 110] (gas: 21)\n  7420: a0 = s1 + 0x18f0\n  7424: a2 = a0 + 0x400\n  7428: a1 = u64 [a2 + 0x90]\n  7432: u64 [s1 + 0xc8] = a1\n  7436: a1 = u64 [a2 + 0x98]\n  7440: u64 [s1 + 0xc0] = a1\n  7444: a1 = u64 [a2 + 0xa0]\n  7448: u64 [s1 + 0xb8] = a1\n  7452: a1 = u64 [a2 + 0xa8]\n  7456: u64 [s1 + 0xb0] = a1\n  7460: a1 = u64 [a2 + 0xb0]\n  7464: u64 [s1 + 0xa0] = a1\n  7468: a1 = u64 [a2 + 0xb8]\n  7472: u64 [s1 + 0x98] = a1\n  7476: a1 = u64 [a2 + 0xc0]\n  7480: u64 [s1 + 0x88] = a1\n  7484: a1 = u64 [a2 + 0xc8]\n  7488: u64 [s1 + 0x80] = a1\n  7492: a0 = s1 + 0x1d20\n  7496: a1 = 0x40\n  7499: ra = 222, jump @2\n      : @230 [@dyn 111] (gas: 54)\n  7505: a1 = s1 + 0x18f0\n  7509: a5 = a1 + 0x400\n  7513: a2 = u64 [a5 + 0x48]\n  7516: u64 [s1 + 0xf0] = a2\n  7520: a3 = u64 [a5 + 0x40]\n  7523: u64 [s1 + 0xa8] = a3\n  7527: a4 = u64 [a5 + 0x38]\n  7530: u64 [s1 + 0x90] = a4\n  7534: t1 = u64 [a1 + 0x430]\n  7538: u64 [s1 + 0xf8] = t1\n  7542: a0 = u64 [s1 + 0x80]\n  7546: u64 [a1 + 0x388] = a0\n  7550: a0 = u64 [s1 + 0x88]\n  7554: u64 [a1 + 0x380] = a0\n  7558: a0 = u64 [s1 + 0x98]\n  7562: u64 [a1 + 0x378] = a0\n  7566: a0 = u64 [s1 + 0xa0]\n  7570: u64 [a1 + 0x370] = a0\n  7574: a0 = u64 [s1 + 0xb0]\n  7578: u64 [a1 + 0x3a8] = a0\n  7582: a0 = u64 [s1 + 0xb8]\n  7586: u64 [a1 + 0x3a0] = a0\n  7590: a0 = u64 [s1 + 0xc0]\n  7594: u64 [a1 + 0x398] = a0\n  7598: a0 = u64 [s1 + 0xc8]\n  7602: u64 [a1 + 0x390] = a0\n  7606: a0 = u64 [s1 + 0xd0]\n  7610: u64 [a1 + 0x3c8] = a0\n  7614: a0 = u64 [s1 + 0xd8]\n  7618: u64 [a1 + 0x3c0] = a0\n  7622: a0 = u64 [s1 + 0xe0]\n  7626: u64 [a1 + 0x3b8] = a0\n  7630: a0 = u64 [s1 + 0xe8]\n  7634: u64 [a1 + 0x3b0] = a0\n  7638: a0 = u64 [s1 + 0x100]\n  7642: u64 [a1 + 0x3e8] = a0\n  7646: a0 = u64 [s1 + 0x120]\n  7650: u64 [a1 + 0x3e0] = a0\n  7654: a0 = u64 [s1 + 0x128]\n  7658: u64 [a1 + 0x3d8] = a0\n  7662: a0 = u64 [s1 + 0x130]\n  7666: u64 [a1 + 0x3d0] = a0\n  7670: u64 [a5 + 0x8] = a2\n  7673: u64 [a5] = a3\n  7675: u64 [a1 + 0x3f8] = a4\n  7679: t0 = a1\n  7681: a0 = s1 + 0x1d00\n  7685: a1 = s1 + 0x1ce0\n  7689: a2 = s1 + 0x1cc0\n  7693: a3 = s1 + 0x1ca0\n  7697: a4 = s1 + 0x1c80\n  7701: a5 = s1 + 0x1c60\n  7705: u64 [t0 + 0x3f0] = t1\n  7709: ra = 224, jump @758\n      : @231 [@dyn 112] (gas: 13)\n  7715: a1 = u64 [s1 + 0x90]\n  7719: a2 = a1\n  7721: a0 = u64 [s1 + 0xf0]\n  7725: a0 = a0 | a1\n  7728: a3 = u64 [s1 + 0xa8]\n  7732: a1 = u64 [s1 + 0xf8]\n  7736: a1 = a1 | a3\n  7739: a1 = a1 | a0\n  7742: a1 = a1 >> 0x20\n  7745: a0 = a0 | a3\n  7748: a0 = a0 << 0x20\n  7751: a0 = a0 | a1\n  7754: jump @233 if a0 == 0\n      : @232 (gas: 1)\n  7757: jump @499\n      : @233 (gas: 24)\n  7760: t0 = a3\n  7762: a1 = s1 + 0x18f0\n  7766: a4 = a1 + 0x400\n  7770: a0 = u64 [a4 + 0x18]\n  7773: a3 = u64 [a4 + 0x28]\n  7776: u64 [s1 + 0x130] = a3\n  7780: t1 = u64 [a1 + 0x410]\n  7784: a3 = u64 [a4 + 0x20]\n  7787: ra = a0 ^ a2\n  7790: a5 = a0 <u a2\n  7793: t2 = u64 [s1 + 0xf8]\n  7797: a1 = t1 <u t2\n  7800: a5 = a1 if ra == 0\n  7803: a4 = a3 - t0\n  7806: ra = a4 - a5\n  7809: a4 = a4 <u a5\n  7812: u64 [s1 + 0x128] = a4\n  7816: a3 = a3 <u t0\n  7819: a5 = u64 [s1 + 0xf0]\n  7823: a4 = u64 [s1 + 0x130]\n  7827: a5 = a4 - a5\n  7830: a5 = a5 - a3\n  7833: a3 = u64 [s1 + 0x128]\n  7837: t0 = 226, jump @816\n      : @234 [@dyn 113] (gas: 1)\n  7843: jump @236 if a0 == 0\n      : @235 (gas: 1)\n  7846: jump @499\n      : @236 (gas: 22)\n  7849: a0 = u64 [0x20058]\n  7854: a2 = u64 [0x20060]\n  7859: a4 = s1 + 0x18f0\n  7863: a5 = a4 + 0x300\n  7867: u64 [a5 + 0x68] = a0\n  7870: u64 [a5 + 0x60] = a2\n  7873: a0 = u64 [0x20068]\n  7878: a2 = u64 [0x20070]\n  7883: a3 = u64 [s1 + 0x108]\n  7887: u64 [a5 + 0x30] = a3\n  7890: a3 = u64 [s1 + 0x110]\n  7894: u64 [a5 + 0x38] = a3\n  7897: u64 [a5 + 0x58] = a0\n  7900: u64 [a5 + 0x50] = a2\n  7903: a0 = u64 [s1 + 0x118]\n  7907: u64 [a5 + 0x40] = a0\n  7910: a2 = s1 + 0x1c40\n  7914: a3 = s1 + 0x1c20\n  7918: a0 = u64 [s1 + 0x138]\n  7922: u64 [a5 + 0x48] = a0\n  7925: a0 = u64 [s1 + 0xf8]\n  7929: ra = 228, jump @8\n      : @237 [@dyn 114] (gas: 20)\n  7935: a3 = u64 [s1 + 0x140]\n  7939: a5 = s1 + 0x18f0\n  7943: u64 [a5 + 0x2e8] = a3\n  7947: a2 = u64 [s1 + 0x148]\n  7951: u64 [a5 + 0x2e0] = a2\n  7955: a1 = u64 [s1 + 0x150]\n  7959: u64 [a5 + 0x2d8] = a1\n  7963: a0 = u64 [s1 + 0x158]\n  7967: u64 [a5 + 0x2d0] = a0\n  7971: a4 = a0\n  7973: u64 [a5 + 0x308] = a3\n  7977: u64 [a5 + 0x300] = a2\n  7981: u64 [a5 + 0x2f8] = a1\n  7985: a0 = s1 + 0x1c00\n  7989: a1 = s1 + 0x1be0\n  7993: a2 = s1 + 0x1bc0\n  7997: u64 [a5 + 0x2f0] = a4\n  8001: ra = 0xe6\n  8005: t0 = 0x392\n  8009: jump @809\n      : @238 [@dyn 115] (gas: 29)\n  8012: a4 = s1 + 0x18f0\n  8016: a1 = a4 + 0x300\n  8020: a0 = u64 [a1 + 0x10]\n  8023: t0 = u64 [a4 + 0x328]\n  8027: a2 = u64 [a1 + 0x18]\n  8030: a3 = u64 [a1 + 0x20]\n  8033: t2 = a0 + 0x60\n  8036: a5 = t2 <u a0\n  8039: t1 = a2 + a5\n  8042: a1 = t1 <u a2\n  8045: a1 = a5 if a5 == 0\n  8048: a1 = a1 + a3\n  8051: a5 = a1 <u a3\n  8054: a5 = a5 + t0\n  8057: u64 [a4 + 0x270] = t2\n  8061: u64 [a4 + 0x2a8] = t0\n  8065: u64 [a4 + 0x2a0] = a3\n  8069: a3 = a4 + 0x200\n  8073: u64 [a3 + 0x98] = a2\n  8077: u64 [a3 + 0x90] = a0\n  8081: u64 [a4 + 0x278] = t1\n  8085: u64 [a3 + 0x80] = a1\n  8089: a0 = s1 + 0x1ba0\n  8093: a1 = s1 + 0x1b80\n  8097: a2 = s1 + 0x1b60\n  8101: u64 [a3 + 0x88] = a5\n  8105: ra = 0xe8\n  8109: t0 = 0x2d2\n  8113: jump @809\n      : @239 [@dyn 116] (gas: 26)\n  8116: a4 = s1 + 0x18f0\n  8120: a0 = u64 [a4 + 0x2b0]\n  8124: t0 = u64 [a4 + 0x2c8]\n  8128: a2 = u64 [a4 + 0x2b8]\n  8132: a3 = u64 [a4 + 0x2c0]\n  8136: t2 = a0 + 0x20\n  8139: a5 = t2 <u a0\n  8142: t1 = a2 + a5\n  8145: a1 = t1 <u a2\n  8148: a1 = a5 if a5 == 0\n  8151: a1 = a1 + a3\n  8154: a5 = a1 <u a3\n  8157: a5 = a5 + t0\n  8160: u64 [a4 + 0x1f0] = t2\n  8164: u64 [a4 + 0x228] = t0\n  8168: u64 [a4 + 0x220] = a3\n  8172: a3 = a4 + 0x200\n  8176: u64 [a3 + 0x18] = a2\n  8179: u64 [a3 + 0x10] = a0\n  8182: u64 [a4 + 0x1f8] = t1\n  8186: u64 [a3] = a1\n  8188: a0 = s1 + 0x1b20\n  8192: a1 = s1 + 0x1b00\n  8196: a2 = s1 + 0x1ae0\n  8200: u64 [a3 + 0x8] = a5\n  8203: ra = 234, jump @622\n      : @240 [@dyn 117] (gas: 38)\n  8209: a1 = s1 + 0x18f0\n  8213: a2 = a1 + 0x200\n  8217: a0 = u64 [a2 + 0x30]\n  8220: u64 [s1 + 0x130] = a0\n  8224: a0 = u64 [a2 + 0x38]\n  8227: u64 [s1 + 0x128] = a0\n  8231: a0 = u64 [a2 + 0x40]\n  8234: u64 [s1 + 0x120] = a0\n  8238: a0 = u64 [a2 + 0x48]\n  8241: u64 [s1 + 0x100] = a0\n  8245: a0 = u64 [a2 + 0x50]\n  8248: u64 [s1 + 0xf8] = a0\n  8252: a0 = u64 [a2 + 0x58]\n  8255: u64 [s1 + 0xf0] = a0\n  8259: a0 = u64 [a2 + 0x60]\n  8262: u64 [s1 + 0xe8] = a0\n  8266: a0 = u64 [a2 + 0x68]\n  8269: u64 [s1 + 0xe0] = a0\n  8273: a3 = u64 [s1 + 0x140]\n  8277: a5 = a1 + 0x100\n  8281: u64 [a5 + 0xa8] = a3\n  8285: a2 = u64 [s1 + 0x148]\n  8289: u64 [a5 + 0xa0] = a2\n  8293: a0 = u64 [s1 + 0x150]\n  8297: u64 [a5 + 0x98] = a0\n  8301: a4 = u64 [s1 + 0x158]\n  8305: u64 [a5 + 0x90] = a4\n  8309: u64 [a5 + 0xc8] = a3\n  8313: u64 [a5 + 0xc0] = a2\n  8317: u64 [a5 + 0xb8] = a0\n  8321: a3 = a1\n  8323: a0 = s1 + 0x1ac0\n  8327: a1 = s1 + 0x1aa0\n  8331: a2 = s1 + 0x1a80\n  8335: u64 [a3 + 0x1b0] = a4\n  8339: ra = 0xec\n  8343: t0 = 0x392\n  8347: jump @809\n      : @241 [@dyn 118] (gas: 28)\n  8350: a4 = s1 + 0x18f0\n  8354: a0 = u64 [a4 + 0x1d0]\n  8358: t0 = u64 [a4 + 0x1e8]\n  8362: a2 = u64 [a4 + 0x1d8]\n  8366: a3 = u64 [a4 + 0x1e0]\n  8370: t2 = a0 + 0x60\n  8373: a5 = t2 <u a0\n  8376: t1 = a2 + a5\n  8379: a1 = t1 <u a2\n  8382: a1 = a5 if a5 == 0\n  8385: a1 = a1 + a3\n  8388: a5 = a1 <u a3\n  8391: a5 = a5 + t0\n  8394: u64 [a4 + 0x130] = t2\n  8398: u64 [a4 + 0x168] = t0\n  8402: u64 [a4 + 0x160] = a3\n  8406: a3 = a4 + 0x100\n  8410: u64 [a3 + 0x58] = a2\n  8413: u64 [a3 + 0x50] = a0\n  8416: u64 [a4 + 0x138] = t1\n  8420: u64 [a3 + 0x40] = a1\n  8423: a0 = s1 + 0x1a60\n  8427: a1 = s1 + 0x1a40\n  8431: a2 = s1 + 0x1a20\n  8435: u64 [a3 + 0x48] = a5\n  8438: ra = 0xee\n  8442: t0 = 0x2d2\n  8446: jump @809\n      : @242 [@dyn 119] (gas: 18)\n  8449: a4 = s1 + 0x18f0\n  8453: a5 = a4 + 0x100\n  8457: a3 = u64 [a5 + 0x70]\n  8460: a0 = u64 [a5 + 0x78]\n  8463: a1 = u64 [a5 + 0x80]\n  8467: a2 = u64 [a5 + 0x88]\n  8471: u64 [a4 + 0xc8] = a2\n  8475: u64 [a4 + 0xc0] = a1\n  8479: u64 [a4 + 0xb8] = a0\n  8483: u64 [a4 + 0xb0] = a3\n  8487: u64 [a4 + 0xe8] = a2\n  8491: u64 [a4 + 0xe0] = a1\n  8495: u64 [a4 + 0xd8] = a0\n  8499: a0 = s1 + 0x19e0\n  8503: a1 = s1 + 0x19c0\n  8507: a2 = s1 + 0x19a0\n  8511: u64 [a4 + 0xd0] = a3\n  8515: ra = 240, jump @622\n      : @243 [@dyn 120] (gas: 36)\n  8521: a4 = s1 + 0x18f0\n  8525: a0 = u64 [a4 + 0xf0]\n  8529: u64 [s1 + 0xd8] = a0\n  8533: a0 = u64 [a4 + 0xf8]\n  8537: u64 [s1 + 0xd0] = a0\n  8541: a1 = a4 + 0x100\n  8545: a0 = u64 [a1]\n  8547: u64 [s1 + 0xc8] = a0\n  8551: a0 = u64 [a1 + 0x8]\n  8554: u64 [s1 + 0xc0] = a0\n  8558: a0 = u64 [a1 + 0x10]\n  8561: u64 [s1 + 0xb8] = a0\n  8565: a0 = u64 [a1 + 0x18]\n  8568: u64 [s1 + 0xb0] = a0\n  8572: a0 = u64 [a1 + 0x20]\n  8575: u64 [s1 + 0xa8] = a0\n  8579: a0 = u64 [a1 + 0x28]\n  8582: u64 [s1 + 0xa0] = a0\n  8586: a2 = u64 [s1 + 0x140]\n  8590: u64 [a4 + 0x68] = a2\n  8593: a1 = u64 [s1 + 0x148]\n  8597: u64 [a4 + 0x60] = a1\n  8600: a0 = u64 [s1 + 0x150]\n  8604: u64 [a4 + 0x58] = a0\n  8607: a3 = u64 [s1 + 0x158]\n  8611: u64 [a4 + 0x50] = a3\n  8614: u64 [a4 + 0x88] = a2\n  8618: u64 [a4 + 0x80] = a1\n  8622: u64 [a4 + 0x78] = a0\n  8625: a0 = s1 + 0x1980\n  8629: a1 = s1 + 0x1960\n  8633: a2 = s1 + 0x1940\n  8637: u64 [a4 + 0x70] = a3\n  8640: ra = 0xf2\n  8644: t0 = 0x392\n  8648: jump @809\n      : @244 [@dyn 121] (gas: 28)\n  8651: a4 = s1 + 0x18f0\n  8655: a0 = u64 [a4 + 0x90]\n  8659: t0 = u64 [a4 + 0xa8]\n  8663: a2 = u64 [a4 + 0x98]\n  8667: a3 = u64 [a4 + 0xa0]\n  8671: ra = a0 + 0x80\n  8675: a5 = ra <u a0\n  8678: t1 = a2 + a5\n  8681: a1 = t1 <u a2\n  8684: a1 = a5 if a5 == 0\n  8687: a1 = a1 + a3\n  8690: a5 = a1 <u a3\n  8693: t2 = t0 + a5\n  8696: a5 = s1 + 0x10f0\n  8700: u64 [a5 + 0x7f0] = ra\n  8704: u64 [a4 + 0x28] = t0\n  8707: u64 [a4 + 0x20] = a3\n  8710: u64 [a4 + 0x18] = a2\n  8713: u64 [a4 + 0x10] = a0\n  8716: u64 [a5 + 0x7f8] = t1\n  8720: u64 [a4] = a1\n  8722: a0 = s1 + 0x1920\n  8726: a1 = s1 + 0x1900\n  8730: a2 = s1 + 0x18e0\n  8734: u64 [a4 + 0x8] = t2\n  8737: ra = 0xf4\n  8741: t0 = 0x2d2\n  8745: jump @809\n      : @245 [@dyn 122] (gas: 27)\n  8748: a1 = s1 + 0x18f0\n  8752: a0 = u64 [a1 + 0x30]\n  8755: t0 = u64 [a1 + 0x48]\n  8758: a2 = u64 [a1 + 0x38]\n  8761: a3 = u64 [a1 + 0x40]\n  8764: a4 = a0 + 0x20\n  8767: a5 = a4 <u a0\n  8770: t1 = a2 + a5\n  8773: a1 = t1 <u a2\n  8776: a1 = a5 if a5 == 0\n  8779: a1 = a1 + a3\n  8782: a5 = a1 <u a3\n  8785: t2 = t0 + a5\n  8788: a5 = s1 + 0x10f0\n  8792: u64 [a5 + 0x770] = a4\n  8796: u64 [a5 + 0x7a8] = t0\n  8800: a4 = a5 + 0x700\n  8804: u64 [a4 + 0xa0] = a3\n  8808: u64 [a4 + 0x98] = a2\n  8812: u64 [a4 + 0x90] = a0\n  8816: u64 [a5 + 0x778] = t1\n  8820: u64 [a4 + 0x80] = a1\n  8824: a0 = s1 + 0x18a0\n  8828: a1 = s1 + 0x1880\n  8832: a2 = s1 + 0x1860\n  8836: u64 [a5 + 0x788] = t2\n  8840: ra = 246, jump @622\n      : @246 [@dyn 123] (gas: 37)\n  8846: a0 = s1 + 0x10f0\n  8850: a5 = a0 + 0x700\n  8854: a1 = u64 [a5 + 0xb0]\n  8858: u64 [s1 + 0x98] = a1\n  8862: a1 = u64 [a5 + 0xb8]\n  8866: u64 [s1 + 0x90] = a1\n  8870: a1 = u64 [a5 + 0xc0]\n  8874: u64 [s1 + 0x88] = a1\n  8878: a1 = u64 [a5 + 0xc8]\n  8882: u64 [s1 + 0x80] = a1\n  8886: a1 = u64 [a5 + 0xd0]\n  8890: u64 [s1 + 0x78] = a1\n  8893: a1 = u64 [a5 + 0xd8]\n  8897: u64 [s1 + 0x70] = a1\n  8900: a1 = u64 [a5 + 0xe0]\n  8904: u64 [s1 + 0x68] = a1\n  8907: a1 = u64 [a5 + 0xe8]\n  8911: u64 [s1 + 0x60] = a1\n  8914: a4 = u64 [s1 + 0x140]\n  8918: u64 [a5 + 0x28] = a4\n  8921: a2 = u64 [s1 + 0x148]\n  8925: u64 [a5 + 0x20] = a2\n  8928: a1 = u64 [s1 + 0x150]\n  8932: u64 [a5 + 0x18] = a1\n  8935: a3 = u64 [s1 + 0x158]\n  8939: u64 [a5 + 0x10] = a3\n  8942: u64 [a5 + 0x48] = a4\n  8945: u64 [a5 + 0x40] = a2\n  8948: u64 [a5 + 0x38] = a1\n  8951: a4 = a0\n  8953: a0 = s1 + 0x1840\n  8957: a1 = s1 + 0x1820\n  8961: a2 = s1 + 0x1800\n  8965: u64 [a4 + 0x730] = a3\n  8969: ra = 0xf8\n  8973: t0 = 0x392\n  8977: jump @809\n      : @247 [@dyn 124] (gas: 29)\n  8980: a4 = s1 + 0x10f0\n  8984: a1 = a4 + 0x700\n  8988: a0 = u64 [a1 + 0x50]\n  8991: t0 = u64 [a4 + 0x768]\n  8995: a2 = u64 [a1 + 0x58]\n  8998: a3 = u64 [a1 + 0x60]\n  9001: t2 = a0 + 0x80\n  9005: a5 = t2 <u a0\n  9008: t1 = a2 + a5\n  9011: a1 = t1 <u a2\n  9014: a1 = a5 if a5 == 0\n  9017: a1 = a1 + a3\n  9020: a5 = a1 <u a3\n  9023: a5 = a5 + t0\n  9026: u64 [a4 + 0x6b0] = t2\n  9030: u64 [a4 + 0x6e8] = t0\n  9034: u64 [a4 + 0x6e0] = a3\n  9038: a3 = a4 + 0x600\n  9042: u64 [a3 + 0xd8] = a2\n  9046: u64 [a3 + 0xd0] = a0\n  9050: u64 [a4 + 0x6b8] = t1\n  9054: u64 [a3 + 0xc0] = a1\n  9058: a0 = s1 + 0x17e0\n  9062: a1 = s1 + 0x17c0\n  9066: a2 = s1 + 0x17a0\n  9070: u64 [a3 + 0xc8] = a5\n  9074: ra = 0xfa\n  9078: t0 = 0x2d2\n  9082: jump @809\n      : @248 [@dyn 125] (gas: 18)\n  9085: a4 = s1 + 0x10f0\n  9089: a5 = a4 + 0x600\n  9093: a3 = u64 [a5 + 0xf0]\n  9097: a0 = u64 [a5 + 0xf8]\n  9101: a1 = u64 [a4 + 0x700]\n  9105: a2 = u64 [a4 + 0x708]\n  9109: u64 [a5 + 0x48] = a2\n  9112: u64 [a5 + 0x40] = a1\n  9115: u64 [a5 + 0x38] = a0\n  9118: u64 [a5 + 0x30] = a3\n  9121: u64 [a5 + 0x68] = a2\n  9124: u64 [a5 + 0x60] = a1\n  9127: u64 [a5 + 0x58] = a0\n  9130: a0 = s1 + 0x1760\n  9134: a1 = s1 + 0x1740\n  9138: a2 = s1 + 0x1720\n  9142: u64 [a5 + 0x50] = a3\n  9145: ra = 252, jump @622\n      : @249 [@dyn 126] (gas: 21)\n  9151: a1 = s1 + 0x10f0\n  9155: a2 = a1 + 0x600\n  9159: a0 = u64 [a2 + 0x70]\n  9162: u64 [s1 + 0x148] = a0\n  9166: a0 = u64 [a2 + 0x78]\n  9169: u64 [s1 + 0x140] = a0\n  9173: a0 = u64 [a2 + 0x80]\n  9177: u64 [s1 + 0x58] = a0\n  9180: a0 = u64 [a2 + 0x88]\n  9184: u64 [s1 + 0x50] = a0\n  9187: a0 = u64 [a2 + 0x90]\n  9191: u64 [s1 + 0x48] = a0\n  9194: a0 = u64 [a2 + 0x98]\n  9198: u64 [s1 + 0x40] = a0\n  9201: a0 = u64 [a2 + 0xa0]\n  9205: u64 [s1 + 0x38] = a0\n  9208: a0 = u64 [a2 + 0xa8]\n  9212: u64 [s1 + 0x30] = a0\n  9215: a0 = s1 + 0x1700\n  9219: a1 = 0x40\n  9222: ra = 254, jump @2\n      : @250 [@dyn 127] (gas: 97)\n  9228: a1 = s1 + 0x10f0\n  9232: a0 = a1 + 0x600\n  9236: a2 = u64 [a0 + 0x28]\n  9239: u64 [s1 + 0x150] = a2\n  9243: a3 = u64 [a0 + 0x20]\n  9246: u64 [s1 + 0x28] = a3\n  9249: a4 = u64 [a0 + 0x18]\n  9252: u64 [s1 + 0x20] = a4\n  9255: t1 = u64 [a1 + 0x610]\n  9259: u64 [s1 + 0x158] = t1\n  9263: sp = sp + 0xffffffffffffffe0\n  9266: a0 = s1 + 0x15c0\n  9270: u64 [sp + 0x18] = a0\n  9273: a0 = s1 + 0x15e0\n  9277: u64 [sp + 0x10] = a0\n  9280: a0 = s1 + 0x1600\n  9284: u64 [sp + 0x8] = a0\n  9287: a0 = s1 + 0x1620\n  9291: u64 [sp] = a0\n  9293: a0 = u64 [s1 + 0x30]\n  9296: a5 = a1 + 0x400\n  9300: u64 [a5 + 0xe8] = a0\n  9304: a0 = u64 [s1 + 0x38]\n  9307: u64 [a5 + 0xe0] = a0\n  9311: a0 = u64 [s1 + 0x40]\n  9314: u64 [a5 + 0xd8] = a0\n  9318: a0 = u64 [s1 + 0x48]\n  9321: u64 [a5 + 0xd0] = a0\n  9325: a0 = u64 [s1 + 0x50]\n  9328: u64 [a1 + 0x508] = a0\n  9332: a0 = u64 [s1 + 0x58]\n  9335: u64 [a1 + 0x500] = a0\n  9339: a0 = u64 [s1 + 0x140]\n  9343: u64 [a5 + 0xf8] = a0\n  9347: a0 = u64 [s1 + 0x148]\n  9351: u64 [a5 + 0xf0] = a0\n  9355: a0 = u64 [s1 + 0x60]\n  9358: a5 = a1 + 0x500\n  9362: u64 [a5 + 0x28] = a0\n  9365: a0 = u64 [s1 + 0x68]\n  9368: u64 [a5 + 0x20] = a0\n  9371: a0 = u64 [s1 + 0x70]\n  9374: u64 [a5 + 0x18] = a0\n  9377: a0 = u64 [s1 + 0x78]\n  9380: u64 [a5 + 0x10] = a0\n  9383: a0 = u64 [s1 + 0x80]\n  9387: u64 [a5 + 0x48] = a0\n  9390: a0 = u64 [s1 + 0x88]\n  9394: u64 [a5 + 0x40] = a0\n  9397: a0 = u64 [s1 + 0x90]\n  9401: u64 [a5 + 0x38] = a0\n  9404: a0 = u64 [s1 + 0x98]\n  9408: u64 [a5 + 0x30] = a0\n  9411: a0 = u64 [s1 + 0xa0]\n  9415: u64 [a5 + 0x68] = a0\n  9418: a0 = u64 [s1 + 0xa8]\n  9422: u64 [a5 + 0x60] = a0\n  9425: a0 = u64 [s1 + 0xb0]\n  9429: u64 [a5 + 0x58] = a0\n  9432: a0 = u64 [s1 + 0xb8]\n  9436: u64 [a5 + 0x50] = a0\n  9439: a0 = u64 [s1 + 0xc0]\n  9443: u64 [a5 + 0x88] = a0\n  9447: a0 = u64 [s1 + 0xc8]\n  9451: u64 [a5 + 0x80] = a0\n  9455: a0 = u64 [s1 + 0xd0]\n  9459: u64 [a5 + 0x78] = a0\n  9462: a0 = u64 [s1 + 0xd8]\n  9466: u64 [a5 + 0x70] = a0\n  9469: a0 = u64 [s1 + 0xe0]\n  9473: u64 [a5 + 0xa8] = a0\n  9477: a0 = u64 [s1 + 0xe8]\n  9481: u64 [a5 + 0xa0] = a0\n  9485: a0 = u64 [s1 + 0xf0]\n  9489: u64 [a5 + 0x98] = a0\n  9493: a0 = u64 [s1 + 0xf8]\n  9497: u64 [a5 + 0x90] = a0\n  9501: a0 = u64 [s1 + 0x100]\n  9505: u64 [a5 + 0xc8] = a0\n  9509: a0 = u64 [s1 + 0x120]\n  9513: u64 [a5 + 0xc0] = a0\n  9517: a0 = u64 [s1 + 0x128]\n  9521: u64 [a5 + 0xb8] = a0\n  9525: a0 = u64 [s1 + 0x130]\n  9529: u64 [a5 + 0xb0] = a0\n  9533: u64 [a5 + 0xe8] = a2\n  9537: u64 [a5 + 0xe0] = a3\n  9541: u64 [a5 + 0xd8] = a4\n  9545: t0 = a1\n  9547: a0 = s1 + 0x16e0\n  9551: a1 = s1 + 0x16c0\n  9555: a2 = s1 + 0x16a0\n  9559: a3 = s1 + 0x1680\n  9563: a4 = s1 + 0x1660\n  9567: a5 = s1 + 0x1640\n  9571: u64 [t0 + 0x5d0] = t1\n  9575: ra = 256, jump @768\n      : @251 [@dyn 128] (gas: 7)\n  9581: sp = sp + 0x20\n  9584: a1 = u64 [s1 + 0x20]\n  9587: a2 = a1\n  9589: a0 = u64 [s1 + 0x150]\n  9593: a0 = a0 | a1\n  9596: a3 = u64 [s1 + 0x28]\n  9599: t0 = 258, jump @822\n      : @252 [@dyn 129] (gas: 1)\n  9605: jump @254 if a0 == 0\n      : @253 (gas: 1)\n  9608: jump @499\n      : @254 (gas: 23)\n  9611: t0 = a3\n  9613: a1 = s1 + 0x10f0\n  9617: a0 = u64 [a1 + 0x5f8]\n  9621: a3 = u64 [a1 + 0x608]\n  9625: u64 [s1 + 0x148] = a3\n  9629: t1 = u64 [a1 + 0x5f0]\n  9633: a3 = u64 [a1 + 0x600]\n  9637: ra = a0 ^ a2\n  9640: a5 = a0 <u a2\n  9643: t2 = u64 [s1 + 0x158]\n  9647: a1 = t1 <u t2\n  9650: a5 = a1 if ra == 0\n  9653: a4 = a3 - t0\n  9656: ra = a4 - a5\n  9659: a4 = a4 <u a5\n  9662: u64 [s1 + 0x140] = a4\n  9666: a3 = a3 <u t0\n  9669: a5 = u64 [s1 + 0x150]\n  9673: a4 = u64 [s1 + 0x148]\n  9677: a5 = a4 - a5\n  9680: a5 = a5 - a3\n  9683: a3 = u64 [s1 + 0x140]\n  9687: t0 = 260, jump @816\n      : @255 [@dyn 130] (gas: 1)\n  9693: jump @257 if a0 == 0\n      : @256 (gas: 1)\n  9696: jump @499\n      : @257 (gas: 23)\n  9699: a0 = u64 [0x20078]\n  9704: a2 = u64 [0x20080]\n  9709: a4 = s1 + 0x10f0\n  9713: a5 = a4 + 0x400\n  9717: u64 [a5 + 0xc8] = a0\n  9721: u64 [a5 + 0xc0] = a2\n  9725: a0 = u64 [0x20088]\n  9730: a2 = u64 [0x20090]\n  9735: a4 = s1 + 0x100\n  9739: a3 = u64 [a4 + 0x8]\n  9742: u64 [a5 + 0x90] = a3\n  9746: a3 = u64 [a4 + 0x10]\n  9749: u64 [a5 + 0x98] = a3\n  9753: u64 [a5 + 0xb8] = a0\n  9757: u64 [a5 + 0xb0] = a2\n  9761: a0 = u64 [a4 + 0x18]\n  9764: u64 [a5 + 0xa0] = a0\n  9768: a2 = s1 + 0x15a0\n  9772: a3 = s1 + 0x1580\n  9776: a0 = u64 [a4 + 0x38]\n  9779: u64 [a5 + 0xa8] = a0\n  9783: a0 = u64 [a4 + 0x58]\n  9786: ra = 262, jump @8\n      : @258 [@dyn 131] (gas: 3)\n  9792: a0 = s1 + 0x1560\n  9796: a1 = 0x40\n  9799: ra = 264, jump @2\n      : @259 [@dyn 132] (gas: 14)\n  9805: a3 = s1 + 0x10f0\n  9809: a5 = a3 + 0x400\n  9813: a0 = u64 [a5 + 0x88]\n  9817: a1 = u64 [a5 + 0x80]\n  9821: a2 = u64 [a5 + 0x78]\n  9824: a4 = u64 [a5 + 0x70]\n  9827: a0 = a0 | a2\n  9830: a2 = a4 | a1\n  9833: a2 = a2 | a0\n  9836: a2 = a2 >> 0x20\n  9839: a0 = a0 | a1\n  9842: a0 = a0 << 0x20\n  9845: a0 = a0 | a2\n  9848: jump @261 if a0 == 0\n      : @260 (gas: 1)\n  9851: jump @499\n      : @261 (gas: 17)\n  9854: a3 = a4\n  9856: a0 = s1 + 0x10f0\n  9860: a4 = s1 + 0x100\n  9864: a1 = u64 [a4 + 0x8]\n  9867: a5 = a0 + 0x400\n  9871: u64 [a5 + 0x50] = a1\n  9874: a1 = u64 [a4 + 0x10]\n  9877: u64 [a5 + 0x58] = a1\n  9880: a1 = u64 [a4 + 0x18]\n  9883: u64 [a5 + 0x60] = a1\n  9886: a1 = s1 + 0x1540\n  9890: a2 = u64 [a4 + 0x38]\n  9893: u64 [a5 + 0x68] = a2\n  9896: a0 = a3\n  9898: u64 [s1 + 0x158] = a3\n  9902: ra = 0x11c\n  9906: jump @4\n      : @262 (gas: 8)\n  9909: u64 [a2 + 608] = 0\n  9913: u64 [a2 + 600] = 0\n  9917: u64 [a2 + 592] = 0\n  9921: u64 [a2 + 584] = 0\n  9925: a0 = s1 + 0x3000\n  9929: i32 a0 = a0 + 0xfffffffffffffb40\n  9933: ecalli 11 // 'value_transferred'\n  9935: fallthrough\n      : @263 (gas: 10)\n  9936: a3 = s1 + 0x28f8\n  9940: a4 = a3 + 0x200\n  9944: a0 = u64 [a4 + 0x58]\n  9947: a1 = u64 [a4 + 0x60]\n  9950: a2 = u64 [a4 + 0x50]\n  9953: a3 = u64 [a4 + 0x48]\n  9956: a1 = a1 | a2\n  9959: a0 = a0 | a3\n  9962: a0 = a0 | a1\n  9965: jump @265 if a0 == 0\n      : @264 (gas: 1)\n  9968: jump @500\n      : @265 (gas: 3)\n  9971: a0 = u64 [s1 + 0x158]\n  9975: a0 = i32 [a0]\n  9977: jump @267 if a0 >u 3\n      : @266 (gas: 1)\n  9981: jump @500\n      : @267 (gas: 3)\n  9984: a0 = s1 + 0x500\n  9988: a1 = u64 [s1 + 0x150]\n  9992: ra = 266, jump @6\n      : @268 [@dyn 133] (gas: 11)\n  9998: a1 = s1 + 0x500\n 10002: a0 = u64 [a1 + 0x10]\n 10005: a2 = s1 + 0x100\n 10009: u64 [a2 + 0x48] = a0\n 10012: a0 = u64 [a1 + 0x8]\n 10015: u64 [a2 + 0x58] = a0\n 10018: a0 = u64 [a1]\n 10020: u64 [a2 + 0x50] = a0\n 10023: a0 = s1 + 0x4e0\n 10027: a1 = 0x40\n 10030: ra = 268, jump @2\n      : @269 [@dyn 134] (gas: 13)\n 10036: a4 = s1 + 0x400\n 10040: a3 = u64 [a4 + 0xf8]\n 10044: a1 = u64 [a4 + 0xf0]\n 10048: a2 = u64 [a4 + 0xe8]\n 10052: a0 = u64 [a4 + 0xe0]\n 10056: a3 = a3 | a2\n 10059: a2 = a0 | a1\n 10062: a2 = a2 | a3\n 10065: a2 = a2 >> 0x20\n 10068: a1 = a1 | a3\n 10071: a1 = a1 << 0x20\n 10074: a1 = a1 | a2\n 10077: jump @271 if a1 == 0\n      : @270 (gas: 1)\n 10080: jump @499\n      : @271 (gas: 15)\n 10083: a3 = s1 + 0x100\n 10087: a1 = u64 [a3 + 0x48]\n 10090: a1 = a1 << 0x20\n 10093: a2 = a1 >> 0x20\n 10096: u64 [s1 + 1240] = 0\n 10100: a1 = u64 [a3 + 0x50]\n 10103: a4 = s1 + 0x400\n 10107: u64 [a4 + 0xc0] = a1\n 10111: a1 = u64 [a3 + 0x58]\n 10114: u64 [a4 + 0xc8] = a1\n 10118: a1 = s1 + 0x4c0\n 10122: u64 [a4 + 0xd0] = a2\n 10126: u64 [s1 + 0x158] = a0\n 10130: ra = 0x11c\n 10134: jump @4\n      : @272 (gas: 1)\n 10137: jump @274 if a0 == 1776040674\n      : @273 (gas: 1)\n 10144: jump @503\n      : @274 (gas: 8)\n 10147: u64 [a2 + 512] = 0\n 10151: u64 [a2 + 504] = 0\n 10155: u64 [a2 + 496] = 0\n 10159: u64 [a2 + 488] = 0\n 10163: a0 = s1 + 0x3000\n 10167: i32 a0 = a0 + 0xfffffffffffffae0\n 10171: ecalli 11 // 'value_transferred'\n 10173: fallthrough\n      : @275 (gas: 10)\n 10174: a3 = s1 + 0x28f8\n 10178: a4 = a3 + 0x100\n 10182: a0 = u64 [a4 + 0xf8]\n 10186: a1 = u64 [a3 + 0x200]\n 10190: a2 = u64 [a4 + 0xf0]\n 10194: a3 = u64 [a4 + 0xe8]\n 10198: a1 = a1 | a2\n 10201: a0 = a0 | a3\n 10204: a0 = a0 | a1\n 10207: jump @277 if a0 == 0\n      : @276 (gas: 1)\n 10210: jump @500\n      : @277 (gas: 3)\n 10213: a0 = u64 [s1 + 0x158]\n 10217: a0 = i32 [a0]\n 10219: jump @279 if a0 >u 35\n      : @278 (gas: 1)\n 10223: jump @500\n      : @279 (gas: 5)\n 10226: a0 = s1 + 0x3000\n 10230: i32 a0 = a0 + 0xfffffffffffffb00\n 10234: a1 = 0x4\n 10237: ecalli 1 // 'call_data_load'\n 10239: fallthrough\n      : @280 (gas: 11)\n 10240: a4 = s1 + 0x28f8\n 10244: a1 = u64 [a4 + 0x218]\n 10248: a0 = u64 [a4 + 0x220]\n 10252: a2 = 0x100000000\n 10262: a2 = a2 ^ a1\n 10265: a2 = a2 | a0\n 10268: a3 = a1 >> 0x20\n 10271: a3 = a3 <u 0x1\n 10274: a3 = 0 if a0 != 0\n 10276: a3 = 0 if a2 == 0\n 10278: jump @282 if a3 != 0\n      : @281 (gas: 1)\n 10281: jump @500\n      : @282 (gas: 9)\n 10284: a2 = u64 [a4 + 0x210]\n 10288: a3 = u64 [a4 + 0x208]\n 10292: u64 [s1 + 0x4a0] = a3\n 10296: u64 [s1 + 0x4a8] = a2\n 10300: u64 [s1 + 0x4b0] = a1\n 10304: a1 = s1 + 0x4a0\n 10308: u64 [s1 + 0x4b8] = a0\n 10312: a0 = 0\n 10314: ra = 270, jump @4\n      : @283 [@dyn 135] (gas: 7)\n 10320: u64 [s1 + 1176] = 0\n 10324: u64 [s1 + 1168] = 0\n 10328: u64 [s1 + 1152] = 0x1\n 10333: a0 = 0x20\n 10336: a1 = s1 + 0x480\n 10340: u64 [s1 + 1160] = 0\n 10344: ra = 272, jump @4\n      : @284 [@dyn 136] (gas: 3)\n 10350: a1 = 0x40\n 10353: a0 = 0\n 10355: ra = 274, jump @14\n      : @285 [@dyn 137] (gas: 12)\n 10361: a1 = sp + 0xffffffffffffffe0\n 10364: a1 = a1 & 0xffffffffffffffe0\n 10367: u64 [s1 + 0x158] = a1\n 10371: sp = a1\n 10373: i32 a0 = a0 + 0\n 10375: i32 a2 = a1 + 0\n 10377: a1 = 0x40\n 10380: ra = 0x114\n 10384: ecalli 6 // 'hash_keccak_256'\n 10386: a3 = u64 [s1 + 0x158]\n 10390: t0 = 0x116\n 10394: jump @813\n      : @286 [@dyn 138] (gas: 2)\n 10397: a3 = u64 [s1 + 0x158]\n 10401: t0 = 278, jump @813\n      : @287 [@dyn 139] (gas: 7)\n 10407: u64 [a5 + 0x40] = a3\n 10410: u64 [a5 + 0x38] = a2\n 10413: u64 [a5 + 0x30] = a1\n 10416: u64 [a5 + 0x28] = a0\n 10419: a0 = s1 + 0x460\n 10423: a1 = s1 + 0x2b20\n 10427: ra = 280, jump @6\n      : @288 [@dyn 140] (gas: 5)\n 10433: a0 = u64 [s1 + 0x460]\n 10437: u64 [s1 + 0x158] = a0\n 10441: a0 = s1 + 0x440\n 10445: a1 = 0x40\n 10448: ra = 282, jump @2\n      : @289 [@dyn 141] (gas: 13)\n 10454: a4 = s1 + 0x400\n 10458: a3 = u64 [a4 + 0x58]\n 10461: a1 = u64 [a4 + 0x50]\n 10464: a2 = u64 [a4 + 0x48]\n 10467: a0 = u64 [a4 + 0x40]\n 10470: a3 = a3 | a2\n 10473: a2 = a0 | a1\n 10476: a2 = a2 | a3\n 10479: a2 = a2 >> 0x20\n 10482: a1 = a1 | a3\n 10485: a1 = a1 << 0x20\n 10488: a1 = a1 | a2\n 10491: jump @291 if a1 == 0\n      : @290 (gas: 1)\n 10494: jump @499\n      : @291 (gas: 9)\n 10497: a1 = u8 [s1 + 0x158]\n 10501: a2 = a1 >u 0\n 10503: u64 [s1 + 1080] = 0\n 10507: u64 [s1 + 1072] = 0\n 10511: u64 [s1 + 1064] = 0\n 10515: a1 = s1 + 0x420\n 10519: u64 [s1 + 0x420] = a2\n 10523: u64 [s1 + 0x158] = a0\n 10527: ra = 284, jump @4\n      : @292 [@dyn 142] (gas: 3)\n 10533: a1 = 0x20\n 10536: a0 = u64 [s1 + 0x158]\n 10540: ra = 286, jump @14\n      : @293 [@dyn 143] (gas: 5)\n 10546: i32 a1 = a0 + 0\n 10548: a2 = 0x20\n 10551: a0 = 0\n 10553: ecalli 8 // 'seal_return'\n 10555: fallthrough\n      : @294 (gas: 10)\n 10556: u64 [a2 + 992] = 0\n 10560: u64 [a2 + 984] = 0\n 10564: u64 [a2 + 976] = 0\n 10568: u64 [a2 + 968] = 0\n 10572: a0 = s1 + 0x3000\n 10576: i32 a0 = a0 + 0xfffffffffffffcc0\n 10580: ra = 0x120\n 10584: ecalli 11 // 'value_transferred'\n 10586: t0 = 0x122\n 10590: jump @831\n      : @295 [@dyn 144] (gas: 1)\n 10593: t0 = 290, jump @831\n      : @296 [@dyn 145] (gas: 8)\n 10599: a0 = u64 [a4 + 0xd8]\n 10603: a1 = u64 [a4 + 0xe0]\n 10607: a2 = u64 [a4 + 0xd0]\n 10611: a3 = u64 [a4 + 0xc8]\n 10615: a1 = a1 | a2\n 10618: a0 = a0 | a3\n 10621: a0 = a0 | a1\n 10624: jump @298 if a0 == 0\n      : @297 (gas: 1)\n 10627: jump @500\n      : @298 (gas: 3)\n 10630: a0 = u64 [s1 + 0x158]\n 10634: a0 = i32 [a0]\n 10636: jump @300 if a0 >u 35\n      : @299 (gas: 1)\n 10640: jump @500\n      : @300 (gas: 6)\n 10643: a0 = s1 + 0x3000\n 10647: i32 a0 = a0 + 0xfffffffffffffce0\n 10651: a1 = 0x4\n 10654: ra = 0x124\n 10658: ecalli 1 // 'call_data_load'\n 10660: fallthrough\n      : @301 [@dyn 146] (gas: 4)\n 10661: a4 = s1 + 0x28f8\n 10665: a0 = u64 [a4 + 0x3f8]\n 10669: a1 = u64 [a4 + 0x400]\n 10673: t0 = 294, jump @821\n      : @302 [@dyn 147] (gas: 1)\n 10679: jump @304 if a3 != 0\n      : @303 (gas: 1)\n 10682: jump @500\n      : @304 (gas: 12)\n 10685: a1 = u64 [a4 + 0x3f0]\n 10689: u64 [s1 + 0x148] = a1\n 10693: a1 = u64 [a4 + 0x3e8]\n 10697: u64 [s1 + 0x158] = a1\n 10701: a2 = 0xffffffff\n 10711: u64 [s1 + 0x130] = a2\n 10715: a0 = a0 << 0x20\n 10718: a0 = a0 >> 0x20\n 10721: u64 [s1 + 0x140] = a0\n 10725: a0 = s1 + 0x14c0\n 10729: a1 = u64 [s1 + 0x150]\n 10733: ra = 296, jump @6\n      : @305 [@dyn 148] (gas: 23)\n 10739: a0 = s1 + 0x10f0\n 10743: a4 = a0 + 0x300\n 10747: a1 = u64 [a4 + 0xd8]\n 10751: u64 [s1 + 0x128] = a1\n 10755: a2 = u64 [a4 + 0xd0]\n 10759: u64 [s1 + 0x120] = a2\n 10763: a3 = u64 [a4 + 0xe0]\n 10767: u64 [s1 + 0x118] = a3\n 10771: a0 = a1 & 0xffffffffffffffff\n 10774: u64 [s1 + 0x150] = a0\n 10778: a0 = a2 & 0xffffffffffffffff\n 10781: u64 [s1 + 0x138] = a0\n 10785: a0 = u64 [s1 + 0x130]\n 10789: a0 = a0 & a3\n 10792: u64 [s1 + 0x130] = a0\n 10796: a0 = 0x30260\n 10801: u64 [s1 + 0x110] = a0\n 10805: i32 a0 = a0 + 0\n 10807: ra = 0x12a\n 10811: ecalli 3 // 'caller'\n 10813: a2 = u64 [s1 + 0x110]\n 10817: t0 = 0x12c\n 10821: jump @806\n      : @306 [@dyn 149] (gas: 2)\n 10824: a2 = u64 [s1 + 0x110]\n 10828: t0 = 300, jump @806\n      : @307 [@dyn 150] (gas: 20)\n 10834: a2 = u64 [s1 + 0x118]\n 10838: a2 = a2 << 0x20\n 10841: a2 = a2 >> 0x20\n 10844: a1 = a1 ^ a2\n 10847: a2 = u64 [s1 + 0x120]\n 10851: a0 = a0 ^ a2\n 10854: a0 = a0 | a1\n 10857: a1 = u64 [s1 + 0x128]\n 10861: a1 = a1 ^ a3\n 10864: a0 = a0 | a1\n 10867: a0 = a0 <u 0x1\n 10870: a1 = s1 + 0x10f0\n 10874: u64 [a1 + 968] = 0\n 10878: u64 [a1 + 960] = 0\n 10882: u64 [a1 + 0x3b0] = a0\n 10886: a0 = s1 + 0x14a0\n 10890: u64 [a1 + 952] = 0\n 10894: ra = 0x12e\n 10898: t0 = 0x24e\n 10902: jump @795\n      : @308 [@dyn 151] (gas: 13)\n 10905: a4 = s1 + 0x100\n 10909: a0 = u64 [a4 + 0x40]\n 10912: a1 = u64 [a4 + 0x30]\n 10915: a0 = a0 ^ a1\n 10918: a1 = u64 [a4 + 0x58]\n 10921: a2 = u64 [a4 + 0x38]\n 10924: a1 = a1 ^ a2\n 10927: a2 = u64 [a4 + 0x48]\n 10930: a3 = u64 [a4 + 0x50]\n 10933: a2 = a2 ^ a3\n 10936: a1 = a1 | a2\n 10939: a0 = a0 | a1\n 10942: jump @310 if a0 == 0\n      : @309 (gas: 1)\n 10945: jump @452\n      : @310 (gas: 3)\n 10948: a0 = s1 + 0x12a0\n 10952: a1 = 0x40\n 10955: ra = 304, jump @2\n      : @311 [@dyn 152] (gas: 14)\n 10961: a2 = s1 + 0x10f0\n 10965: t0 = u64 [a2 + 0x1c8]\n 10969: a1 = a2 + 0x100\n 10973: a5 = u64 [a1 + 0xc0]\n 10977: a4 = u64 [a1 + 0xb8]\n 10981: a0 = u64 [a1 + 0xb0]\n 10985: a3 = a4 | t0\n 10988: a1 = a0 | a5\n 10991: a1 = a1 | a3\n 10994: a1 = a1 >> 0x20\n 10997: a3 = a3 | a5\n 11000: a3 = a3 << 0x20\n 11003: a1 = a1 | a3\n 11006: jump @313 if a1 == 0\n      : @312 (gas: 1)\n 11009: jump @499\n      : @313 (gas: 11)\n 11012: u64 [a2 + 416] = 0\n 11016: u64 [a2 + 408] = 0\n 11020: u64 [a2 + 400] = 0\n 11024: a3 = 0x8c379a000000000\n 11034: a1 = s1 + 0x1280\n 11038: u64 [a2 + 0x1a8] = a3\n 11042: u64 [s1 + 0x158] = a0\n 11046: u64 [s1 + 0x150] = a4\n 11050: u64 [s1 + 0x140] = t0\n 11054: u64 [s1 + 0x148] = a5\n 11058: ra = 306, jump @4\n      : @314 [@dyn 153] (gas: 1)\n 11064: t0 = 308, jump @800\n      : @315 [@dyn 154] (gas: 1)\n 11070: jump @317 if a0 != 0\n      : @316 (gas: 1)\n 11073: jump @499\n      : @317 (gas: 10)\n 11076: i32 a0 = a1 + 0x4\n 11079: a2 = s1 + 0x10f0\n 11083: u64 [a2 + 392] = 0\n 11087: u64 [a2 + 384] = 0\n 11091: u64 [a2 + 368] = 0x20\n 11096: a1 = s1 + 0x1260\n 11100: u64 [a2 + 376] = 0\n 11104: u64 [s1 + 0x148] = a3\n 11108: u64 [s1 + 0x140] = a4\n 11112: ra = 310, jump @4\n      : @318 [@dyn 155] (gas: 1)\n 11118: t0 = 312, jump @802\n      : @319 [@dyn 156] (gas: 1)\n 11124: jump @321 if a0 != 0\n      : @320 (gas: 1)\n 11127: jump @499\n      : @321 (gas: 8)\n 11130: i32 a0 = a1 + 0x24\n 11133: a3 = s1 + 0x10f0\n 11137: u64 [a3 + 360] = 0\n 11141: u64 [a3 + 352] = 0\n 11145: u64 [a3 + 336] = 0x13\n 11150: a1 = s1 + 0x1240\n 11154: u64 [a3 + 344] = 0\n 11158: ra = 314, jump @4\n      : @322 [@dyn 157] (gas: 1)\n 11164: t0 = 316, jump @804\n      : @323 [@dyn 158] (gas: 1)\n 11170: jump @325 if a0 != 0\n      : @324 (gas: 1)\n 11173: jump @499\n      : @325 (gas: 13)\n 11176: i32 a0 = a3 + 0x44\n 11179: a1 = u64 [0x200d0]\n 11184: a2 = u64 [0x200d8]\n 11189: a4 = s1 + 0x10f0\n 11193: a3 = a4 + 0x100\n 11197: u64 [a3 + 0x48] = a1\n 11200: u64 [a3 + 0x40] = a2\n 11203: a1 = 0x6e65720000000000\n 11213: u64 [a3 + 0x38] = a1\n 11216: a1 = s1 + 0x1220\n 11220: u64 [a4 + 304] = 0\n 11224: ra = 0x218\n 11228: jump @4\n      : @326 (gas: 8)\n 11231: u64 [a2 + 640] = 0\n 11235: u64 [a2 + 632] = 0\n 11239: u64 [a2 + 624] = 0\n 11243: u64 [a2 + 616] = 0\n 11247: a0 = s1 + 0x3000\n 11251: i32 a0 = a0 + 0xfffffffffffffb60\n 11255: ecalli 11 // 'value_transferred'\n 11257: fallthrough\n      : @327 (gas: 10)\n 11258: a3 = s1 + 0x28f8\n 11262: a4 = a3 + 0x200\n 11266: a0 = u64 [a4 + 0x78]\n 11269: a1 = u64 [a4 + 0x80]\n 11273: a2 = u64 [a4 + 0x70]\n 11276: a3 = u64 [a4 + 0x68]\n 11279: a1 = a1 | a2\n 11282: a0 = a0 | a3\n 11285: a0 = a0 | a1\n 11288: jump @329 if a0 == 0\n      : @328 (gas: 1)\n 11291: jump @500\n      : @329 (gas: 3)\n 11294: a0 = u64 [s1 + 0x158]\n 11298: a0 = i32 [a0]\n 11300: jump @331 if a0 >u 35\n      : @330 (gas: 1)\n 11304: jump @500\n      : @331 (gas: 5)\n 11307: a0 = s1 + 0x3000\n 11311: i32 a0 = a0 + 0xfffffffffffffb80\n 11315: a1 = 0x4\n 11318: ecalli 1 // 'call_data_load'\n 11320: fallthrough\n      : @332 (gas: 8)\n 11321: a3 = s1 + 0x28f8\n 11325: t2 = u64 [a3 + 0x2a0]\n 11329: a1 = u64 [a3 + 0x298]\n 11333: a5 = u64 [a3 + 0x290]\n 11337: a4 = a1 | t2\n 11340: a0 = a5 <u 0x1\n 11343: a0 = 0 if a4 != 0\n 11345: jump @334 if a0 != 0\n      : @333 (gas: 1)\n 11348: jump @501\n      : @334 (gas: 31)\n 11351: u64 [s1 + 0x148] = a4\n 11355: a2 = u64 [a3 + 0x288]\n 11359: a0 = u64 [s1 + 0x158]\n 11363: t1 = u32 [a0]\n 11365: a0 = t1 <u a2\n 11368: a3 = a5 >u 0\n 11370: a3 = a0 if a5 == 0\n 11373: a4 = -a1\n 11375: t0 = a4 - a3\n 11378: a3 = a4 <u a3\n 11381: u64 [s1 + 0x130] = a1\n 11385: a4 = a1 >u 0\n 11387: u64 [s1 + 0x138] = t2\n 11391: a4 = a4 + t2\n 11394: a4 = -a4\n 11396: a4 = a4 - a3\n 11399: a3 = -a5\n 11401: a3 = a3 - a0\n 11404: u64 [s1 + 0x158] = a2\n 11408: a1 = t1 - a2\n 11411: a1 = a1 <u 0xe4\n 11415: a1 = a1 ^ 0x1\n 11418: a2 = a3 >u 0\n 11420: a2 = a1 if a3 == 0\n 11423: a1 = a4 >s 0\n 11425: a3 = t0 >u 0\n 11427: a3 = a1 if a4 != 0\n 11430: a0 = t0 | a4\n 11433: a2 = a3 if a0 != 0\n 11436: u64 [s1 + 0x150] = a5\n 11440: jump @336 if a2 != 0\n      : @335 (gas: 1)\n 11443: jump @500\n      : @336 (gas: 8)\n 11446: a0 = 0x30260\n 11451: u64 [s1 + 0x140] = a0\n 11455: i32 a0 = a0 + 0\n 11457: ra = 0x13e\n 11461: ecalli 3 // 'caller'\n 11463: a2 = u64 [s1 + 0x140]\n 11467: t0 = 0x140\n 11471: jump @805\n      : @337 [@dyn 159] (gas: 2)\n 11474: a2 = u64 [s1 + 0x140]\n 11478: t0 = 320, jump @805\n      : @338 [@dyn 160] (gas: 9)\n 11484: a2 = s1 + 0x10f0\n 11488: u64 [a2 + 296] = 0\n 11492: a4 = a2 + 0x100\n 11496: u64 [a4 + 0x20] = a1\n 11499: u64 [a4 + 0x18] = a0\n 11502: a1 = s1 + 0x1200\n 11506: u64 [a4 + 0x10] = a3\n 11509: a0 = 0\n 11511: ra = 322, jump @4\n      : @339 [@dyn 161] (gas: 9)\n 11517: a0 = s1 + 0x10f0\n 11521: u64 [a0 + 264] = 0\n 11525: u64 [a0 + 256] = 0\n 11529: u64 [a0 + 248] = 0\n 11533: a3 = a0\n 11535: a0 = 0x20\n 11538: a1 = s1 + 0x11e0\n 11542: u64 [a3 + 240] = 0x1\n 11547: ra = 324, jump @4\n      : @340 [@dyn 162] (gas: 3)\n 11553: a1 = 0x40\n 11556: a0 = 0\n 11558: ra = 326, jump @14\n      : @341 [@dyn 163] (gas: 12)\n 11564: a1 = sp + 0xffffffffffffffe0\n 11567: a1 = a1 & 0xffffffffffffffe0\n 11570: u64 [s1 + 0x140] = a1\n 11574: sp = a1\n 11576: i32 a0 = a0 + 0\n 11578: i32 a2 = a1 + 0\n 11580: a1 = 0x40\n 11583: ra = 0x148\n 11587: ecalli 6 // 'hash_keccak_256'\n 11589: a3 = u64 [s1 + 0x140]\n 11593: t0 = 0x14a\n 11597: jump @813\n      : @342 [@dyn 164] (gas: 2)\n 11600: a3 = u64 [s1 + 0x140]\n 11604: t0 = 330, jump @813\n      : @343 [@dyn 165] (gas: 7)\n 11610: u64 [a5 + 0xc0] = a3\n 11614: u64 [a5 + 0xb8] = a2\n 11618: u64 [a5 + 0xb0] = a1\n 11622: u64 [a5 + 0xa8] = a0\n 11626: a0 = s1 + 0x11c0\n 11630: a1 = s1 + 0x2ba0\n 11634: ra = 332, jump @6\n      : @344 [@dyn 166] (gas: 10)\n 11640: a1 = s1 + 0x10f0\n 11644: a0 = u8 [a1 + 0xd0]\n 11648: u64 [a1 + 200] = 0\n 11652: u64 [a1 + 192] = 0\n 11656: u64 [a1 + 0xb0] = a0\n 11660: a0 = s1 + 0x11a0\n 11664: u64 [a1 + 184] = 0\n 11668: ra = 0x14e\n 11672: t0 = 0x26e\n 11676: jump @795\n      : @345 [@dyn 167] (gas: 10)\n 11679: a2 = 0x100000000\n 11689: a0 = 0xfffffffc\n 11699: a4 = s1 + 0x100\n 11703: a3 = u64 [a4 + 0x58]\n 11706: a0 = a3 <u a0\n 11709: a1 = u64 [a4 + 0x50]\n 11712: a0 = 0 if a1 != 0\n 11714: a1 = u64 [a4 + 0x48]\n 11717: a0 = 0 if a1 != 0\n 11719: jump @347 if a0 != 0\n      : @346 (gas: 1)\n 11722: jump @499\n      : @347 (gas: 30)\n 11725: a1 = a3 + 0x4\n 11728: u64 [s1 + 0x140] = a1\n 11732: i32 a1 = a1 + 0\n 11734: a0 = s1 + 0x3000\n 11738: i32 a0 = a0 + 0xfffffffffffffbc0\n 11742: u64 [s1 + 0x128] = a2\n 11746: ecalli 1 // 'call_data_load'\n 11748: a1 = s1 + 0x28f8\n 11752: a4 = a1 + 0x200\n 11756: a3 = u64 [a4 + 0xe0]\n 11760: a2 = u64 [a4 + 0xd8]\n 11764: a0 = u64 [a4 + 0xd0]\n 11768: a1 = u64 [a4 + 0xc8]\n 11772: u64 [s1 + 0x108] = a0\n 11776: u64 [s1 + 0xf8] = a3\n 11780: a0 = a0 | a3\n 11783: u64 [s1 + 0x110] = a1\n 11787: u64 [s1 + 0x100] = a2\n 11791: a1 = a1 | a2\n 11794: a0 = a0 | a1\n 11797: a0 = a0 >u 0\n 11799: a1 = s1 + 0x10f0\n 11803: u64 [a1 + 168] = 0\n 11807: u64 [a1 + 160] = 0\n 11811: u64 [a1 + 0x90] = a0\n 11815: a0 = s1 + 0x1180\n 11819: u64 [a1 + 152] = 0\n 11823: ra = 0x150\n 11827: t0 = 0x290\n 11831: jump @795\n      : @348 [@dyn 168] (gas: 10)\n 11834: a4 = s1 + 0x100\n 11838: a3 = u64 [a4 + 0x48]\n 11841: a2 = u64 [a4 + 0x58]\n 11844: a1 = u64 [a4 + 0x50]\n 11847: a0 = u64 [a4 + 0x28]\n 11850: a0 = a0 + 0xffffffffffffffdc\n 11853: a0 = a2 <u a0\n 11856: a0 = 0 if a1 != 0\n 11858: a0 = 0 if a3 != 0\n 11860: jump @350 if a0 != 0\n      : @349 (gas: 1)\n 11863: jump @499\n      : @350 (gas: 40)\n 11866: a0 = u64 [s1 + 0x140]\n 11870: a0 = a0 <u a2\n 11873: a4 = a1 + a0\n 11876: u64 [s1 + 0x128] = a4\n 11880: a1 = a4 <u a1\n 11883: a1 = a0 if a0 == 0\n 11886: a0 = u64 [s1 + 0x130]\n 11890: a1 = a1 + a0\n 11893: u64 [s1 + 0x120] = a1\n 11897: a0 = a1 <u a0\n 11900: a1 = u64 [s1 + 0x138]\n 11904: a0 = a0 + a1\n 11907: u64 [s1 + 0x118] = a0\n 11911: i32 a1 = a2 + 0x24\n 11914: a0 = s1 + 0x3000\n 11918: i32 a0 = a0 + 0xfffffffffffffbe0\n 11922: ecalli 1 // 'call_data_load'\n 11924: a1 = s1 + 0x28f8\n 11928: a3 = u64 [a1 + 0x300]\n 11932: a4 = a1 + 0x200\n 11936: a2 = u64 [a4 + 0xf8]\n 11940: a0 = u64 [a4 + 0xf0]\n 11944: a1 = u64 [a4 + 0xe8]\n 11948: u64 [s1 + 0x88] = a0\n 11952: u64 [s1 + 0x78] = a3\n 11955: a0 = a0 | a3\n 11958: u64 [s1 + 0x90] = a1\n 11962: u64 [s1 + 0x80] = a2\n 11966: a1 = a1 | a2\n 11969: a0 = a0 | a1\n 11972: a0 = a0 >u 0\n 11974: a1 = s1 + 0x10f0\n 11978: u64 [a1 + 136] = 0\n 11982: u64 [a1 + 128] = 0\n 11986: u64 [a1 + 0x70] = a0\n 11989: a0 = s1 + 0x1160\n 11993: u64 [a1 + 120] = 0\n 11996: ra = 0x152\n 12000: t0 = 0x2b2\n 12004: jump @795\n      : @351 [@dyn 169] (gas: 10)\n 12007: a0 = u64 [s1 + 0x158]\n 12011: a1 = a0 + 0x64\n 12014: a0 = u64 [s1 + 0x158]\n 12018: a0 = a1 <u a0\n 12021: a2 = a1\n 12023: u64 [s1 + 0xf0] = a1\n 12027: a1 = u64 [s1 + 0x150]\n 12031: a3 = a1 + a0\n 12034: u64 [s1 + 0xe8] = a3\n 12038: t0 = 340, jump @829\n      : @352 [@dyn 170] (gas: 25)\n 12044: u64 [s1 + 0xe0] = a4\n 12048: a0 = a4 <u a0\n 12051: a1 = u64 [s1 + 0x138]\n 12055: a0 = a0 + a1\n 12058: u64 [s1 + 0xd8] = a0\n 12062: a1 = s1 + 0x10f0\n 12066: u64 [a1 + 0x28] = a0\n 12069: u64 [a1 + 0x20] = a4\n 12072: u64 [a1 + 0x18] = a3\n 12075: u64 [a1 + 0x10] = a2\n 12078: a0 = u64 [s1 + 0x118]\n 12082: u64 [a1 + 0x48] = a0\n 12085: a0 = u64 [s1 + 0x120]\n 12089: u64 [a1 + 0x40] = a0\n 12092: a0 = u64 [s1 + 0x128]\n 12096: u64 [a1 + 0x38] = a0\n 12099: a4 = a1\n 12101: a0 = s1 + 0x1140\n 12105: a1 = s1 + 0x1120\n 12109: a2 = s1 + 0x1100\n 12113: a3 = u64 [s1 + 0x140]\n 12117: u64 [a4 + 0x30] = a3\n 12120: ra = 0x156\n 12124: t0 = 0x2d2\n 12128: jump @809\n      : @353 [@dyn 171] (gas: 28)\n 12131: a1 = s1 + 0x10f0\n 12135: a0 = u64 [a1 + 0x50]\n 12138: t0 = u64 [a1 + 0x68]\n 12141: a2 = u64 [a1 + 0x58]\n 12144: a3 = u64 [a1 + 0x60]\n 12147: a4 = a0 + 0x20\n 12150: a5 = a4 <u a0\n 12153: t1 = a2 + a5\n 12156: a1 = t1 <u a2\n 12159: a1 = a5 if a5 == 0\n 12162: a1 = a1 + a3\n 12165: a5 = a1 <u a3\n 12168: t2 = t0 + a5\n 12171: a5 = s1 + 0x7ff\n 12175: a5 = a5 + 0xd9\n 12179: u64 [a5 + 0x7a8] = a4\n 12183: u64 [a5 + 0x7e0] = t0\n 12187: a4 = a5 + 0x700\n 12191: u64 [a4 + 0xd8] = a3\n 12195: u64 [a4 + 0xd0] = a2\n 12199: u64 [a4 + 0xc8] = a0\n 12203: u64 [a5 + 0x7b0] = t1\n 12207: u64 [a4 + 0xb8] = a1\n 12211: a0 = s1 + 0x10c0\n 12215: a1 = s1 + 0x10a0\n 12219: a2 = s1 + 0x1080\n 12223: u64 [a5 + 0x7c0] = t2\n 12227: ra = 344, jump @622\n      : @354 [@dyn 172] (gas: 19)\n 12233: a3 = s1 + 0x10f0\n 12237: a0 = u64 [a3]\n 12239: a1 = u64 [a3 + 0x8]\n 12242: a2 = u64 [a3 + 0xfffffffffffffff8]\n 12245: a3 = u64 [a3 + 0xfffffffffffffff0]\n 12248: a1 = a1 | a2\n 12251: a0 = a0 | a3\n 12254: a0 = a0 | a1\n 12257: a0 = a0 >u 0\n 12259: a1 = s1 + 0x7ff\n 12263: a1 = a1 + 0xd9\n 12267: u64 [a1 + 1952] = 0\n 12271: u64 [a1 + 1944] = 0\n 12275: u64 [a1 + 0x788] = a0\n 12279: a0 = s1 + 0x1060\n 12283: u64 [a1 + 1936] = 0\n 12287: ra = 0x15a\n 12291: t0 = 0x2dc\n 12295: jump @795\n      : @355 [@dyn 173] (gas: 11)\n 12298: a1 = s1 + 0x7ff\n 12302: a1 = a1 + 0xd9\n 12306: a0 = u64 [s1 + 0xd8]\n 12310: a2 = a1 + 0x700\n 12314: u64 [a2 + 0x40] = a0\n 12317: a0 = u64 [s1 + 0xe0]\n 12321: u64 [a2 + 0x38] = a0\n 12324: a0 = u64 [s1 + 0xe8]\n 12328: u64 [a2 + 0x30] = a0\n 12331: a0 = u64 [s1 + 0xf0]\n 12335: t0 = 348, jump @824\n      : @356 [@dyn 174] (gas: 8)\n 12341: a0 = s1 + 0x1040\n 12345: a1 = s1 + 0x1020\n 12349: a2 = s1 + 0x1000\n 12353: a3 = u64 [s1 + 0x140]\n 12357: u64 [a4 + 0x748] = a3\n 12361: ra = 0x15e\n 12365: t0 = 0x2d2\n 12369: jump @809\n      : @357 [@dyn 175] (gas: 23)\n 12372: a4 = s1 + 0x7ff\n 12376: a4 = a4 + 0xd9\n 12380: a5 = a4 + 0x700\n 12384: a3 = u64 [a5 + 0x68]\n 12387: a0 = u64 [a5 + 0x70]\n 12390: a1 = u64 [a5 + 0x78]\n 12393: a2 = u64 [a5 + 0x80]\n 12397: a5 = a4 + 0x600\n 12401: u64 [a5 + 0xc0] = a2\n 12405: u64 [a5 + 0xb8] = a1\n 12409: u64 [a5 + 0xb0] = a0\n 12413: u64 [a5 + 0xa8] = a3\n 12417: u64 [a5 + 0xe0] = a2\n 12421: u64 [a5 + 0xd8] = a1\n 12425: u64 [a5 + 0xd0] = a0\n 12429: a0 = s1 + 0x7ff\n 12433: a0 = a0 + 0x7c1\n 12437: a1 = s1 + 0x7ff\n 12441: a1 = a1 + 0x7a1\n 12445: a2 = s1 + 0x7ff\n 12449: a2 = a2 + 0x781\n 12453: u64 [a5 + 0xc8] = a3\n 12457: ra = 352, jump @622\n      : @358 [@dyn 176] (gas: 4)\n 12463: a4 = s1 + 0x7ff\n 12467: a4 = a4 + 0xd9\n 12471: a5 = a4 + 0x700\n 12475: t0 = 354, jump @815\n      : @359 [@dyn 177] (gas: 9)\n 12481: u64 [a4 + 1696] = 0\n 12485: u64 [a4 + 1688] = 0\n 12489: u64 [a4 + 0x688] = a0\n 12493: a0 = s1 + 0x7ff\n 12497: a0 = a0 + 0x761\n 12501: u64 [a4 + 1680] = 0\n 12505: ra = 0x164\n 12509: t0 = 0x2fc\n 12513: jump @795\n      : @360 [@dyn 178] (gas: 10)\n 12516: a0 = u64 [s1 + 0x158]\n 12520: a1 = a0 + 0x84\n 12524: a0 = u64 [s1 + 0x158]\n 12528: a0 = a1 <u a0\n 12531: a2 = a1\n 12533: u64 [s1 + 0xd0] = a1\n 12537: a1 = u64 [s1 + 0x150]\n 12541: a3 = a1 + a0\n 12544: u64 [s1 + 0xc8] = a3\n 12548: t0 = 358, jump @829\n      : @361 [@dyn 179] (gas: 30)\n 12554: u64 [s1 + 0xc0] = a4\n 12558: a0 = a4 <u a0\n 12561: a1 = u64 [s1 + 0x138]\n 12565: a0 = a0 + a1\n 12568: u64 [s1 + 0xb8] = a0\n 12572: a1 = s1 + 0x7ff\n 12576: a1 = a1 + 0xd9\n 12580: a5 = a1 + 0x600\n 12584: u64 [a5 + 0x40] = a0\n 12587: u64 [a5 + 0x38] = a4\n 12590: u64 [a5 + 0x30] = a3\n 12593: u64 [a5 + 0x28] = a2\n 12596: a0 = u64 [s1 + 0x118]\n 12600: u64 [a5 + 0x60] = a0\n 12603: a0 = u64 [s1 + 0x120]\n 12607: u64 [a5 + 0x58] = a0\n 12610: a0 = u64 [s1 + 0x128]\n 12614: u64 [a5 + 0x50] = a0\n 12617: a4 = a1\n 12619: a0 = s1 + 0x7ff\n 12623: a0 = a0 + 0x741\n 12627: a1 = s1 + 0x7ff\n 12631: a1 = a1 + 0x721\n 12635: a2 = s1 + 0x7ff\n 12639: a2 = a2 + 0x701\n 12643: a3 = u64 [s1 + 0x140]\n 12647: u64 [a4 + 0x648] = a3\n 12651: ra = 0x168\n 12655: t0 = 0x2d2\n 12659: jump @809\n      : @362 [@dyn 180] (gas: 31)\n 12662: a4 = s1 + 0x7ff\n 12666: a4 = a4 + 0xd9\n 12670: a1 = a4 + 0x600\n 12674: a0 = u64 [a1 + 0x68]\n 12677: t0 = u64 [a4 + 0x680]\n 12681: a2 = u64 [a1 + 0x70]\n 12684: a3 = u64 [a1 + 0x78]\n 12687: t2 = a0 + 0x20\n 12690: a5 = t2 <u a0\n 12693: t1 = a2 + a5\n 12696: a1 = t1 <u a2\n 12699: a1 = a5 if a5 == 0\n 12702: a1 = a1 + a3\n 12705: a5 = a1 <u a3\n 12708: a5 = a5 + t0\n 12711: u64 [a4 + 0x5a8] = t2\n 12715: u64 [a4 + 0x5e0] = t0\n 12719: u64 [a4 + 0x5d8] = a3\n 12723: a3 = a4 + 0x500\n 12727: u64 [a3 + 0xd0] = a2\n 12731: u64 [a3 + 0xc8] = a0\n 12735: u64 [a4 + 0x5b0] = t1\n 12739: u64 [a3 + 0xb8] = a1\n 12743: a0 = s1 + 0x7ff\n 12747: a0 = a0 + 0x6c1\n 12751: a1 = s1 + 0x7ff\n 12755: a1 = a1 + 0x6a1\n 12759: a2 = s1 + 0x7ff\n 12763: a2 = a2 + 0x681\n 12767: u64 [a3 + 0xc0] = a5\n 12771: ra = 362, jump @622\n      : @363 [@dyn 181] (gas: 4)\n 12777: a4 = s1 + 0x7ff\n 12781: a4 = a4 + 0xd9\n 12785: a5 = a4 + 0x600\n 12789: t0 = 364, jump @815\n      : @364 [@dyn 182] (gas: 9)\n 12795: u64 [a4 + 1440] = 0\n 12799: u64 [a4 + 1432] = 0\n 12803: u64 [a4 + 0x588] = a0\n 12807: a0 = s1 + 0x7ff\n 12811: a0 = a0 + 0x661\n 12815: u64 [a4 + 1424] = 0\n 12819: ra = 0x16e\n 12823: t0 = 0x31c\n 12827: jump @795\n      : @365 [@dyn 183] (gas: 11)\n 12830: a1 = s1 + 0x7ff\n 12834: a1 = a1 + 0xd9\n 12838: a0 = u64 [s1 + 0xb8]\n 12842: a2 = a1 + 0x500\n 12846: u64 [a2 + 0x40] = a0\n 12849: a0 = u64 [s1 + 0xc0]\n 12853: u64 [a2 + 0x38] = a0\n 12856: a0 = u64 [s1 + 0xc8]\n 12860: u64 [a2 + 0x30] = a0\n 12863: a0 = u64 [s1 + 0xd0]\n 12867: t0 = 368, jump @824\n      : @366 [@dyn 184] (gas: 11)\n 12873: a0 = s1 + 0x7ff\n 12877: a0 = a0 + 0x641\n 12881: a1 = s1 + 0x7ff\n 12885: a1 = a1 + 0x621\n 12889: a2 = s1 + 0x7ff\n 12893: a2 = a2 + 0x601\n 12897: a3 = u64 [s1 + 0x140]\n 12901: u64 [a4 + 0x548] = a3\n 12905: ra = 0x172\n 12909: t0 = 0x2d2\n 12913: jump @809\n      : @367 [@dyn 185] (gas: 23)\n 12916: a4 = s1 + 0x7ff\n 12920: a4 = a4 + 0xd9\n 12924: a5 = a4 + 0x500\n 12928: a3 = u64 [a5 + 0x68]\n 12931: a0 = u64 [a5 + 0x70]\n 12934: a1 = u64 [a5 + 0x78]\n 12937: a2 = u64 [a5 + 0x80]\n 12941: a5 = a4 + 0x400\n 12945: u64 [a5 + 0xc0] = a2\n 12949: u64 [a5 + 0xb8] = a1\n 12953: u64 [a5 + 0xb0] = a0\n 12957: u64 [a5 + 0xa8] = a3\n 12961: u64 [a5 + 0xe0] = a2\n 12965: u64 [a5 + 0xd8] = a1\n 12969: u64 [a5 + 0xd0] = a0\n 12973: a0 = s1 + 0x7ff\n 12977: a0 = a0 + 0x5c1\n 12981: a1 = s1 + 0x7ff\n 12985: a1 = a1 + 0x5a1\n 12989: a2 = s1 + 0x7ff\n 12993: a2 = a2 + 0x581\n 12997: u64 [a5 + 0xc8] = a3\n 13001: ra = 372, jump @622\n      : @368 [@dyn 186] (gas: 4)\n 13007: a4 = s1 + 0x7ff\n 13011: a4 = a4 + 0xd9\n 13015: a5 = a4 + 0x500\n 13019: t0 = 374, jump @815\n      : @369 [@dyn 187] (gas: 9)\n 13025: u64 [a4 + 1184] = 0\n 13029: u64 [a4 + 1176] = 0\n 13033: u64 [a4 + 0x488] = a0\n 13037: a0 = s1 + 0x7ff\n 13041: a0 = a0 + 0x561\n 13045: u64 [a4 + 1168] = 0\n 13049: ra = 0x178\n 13053: t0 = 0x33e\n 13057: jump @795\n      : @370 [@dyn 188] (gas: 9)\n 13060: a0 = s1 + 0x28f8\n 13064: u64 [a0 + 800] = 0\n 13068: u64 [a0 + 792] = 0\n 13072: u64 [a0 + 784] = 0\n 13076: u64 [a0 + 776] = 0x2\n 13081: a0 = s1 + 0x7ff\n 13085: a0 = a0 + 0x541\n 13089: a1 = s1 + 0x2c00\n 13093: ra = 378, jump @6\n      : @371 [@dyn 189] (gas: 20)\n 13099: a4 = s1 + 0x7ff\n 13103: a4 = a4 + 0xd9\n 13107: a5 = a4 + 0x400\n 13111: a0 = u64 [a5 + 0x80]\n 13115: a1 = u64 [a5 + 0x78]\n 13118: a2 = u64 [a5 + 0x70]\n 13121: a3 = u64 [a5 + 0x68]\n 13124: u64 [s1 + 0xb0] = a0\n 13128: u64 [a5 + 0x40] = a0\n 13131: u64 [s1 + 0xa8] = a1\n 13135: u64 [a5 + 0x38] = a1\n 13138: u64 [s1 + 0xa0] = a2\n 13142: u64 [a5 + 0x30] = a2\n 13145: a0 = s1 + 0x7ff\n 13149: a0 = a0 + 0x521\n 13153: a1 = s1 + 0x7ff\n 13157: a1 = a1 + 0x501\n 13161: u64 [s1 + 0x98] = a3\n 13165: u64 [a5 + 0x28] = a3\n 13168: ra = 380, jump @728\n      : @372 [@dyn 190] (gas: 20)\n 13174: a3 = s1 + 0x7ff\n 13178: a3 = a3 + 0xd9\n 13182: a4 = a3 + 0x400\n 13186: a0 = u64 [a4 + 0x48]\n 13189: a1 = u64 [a4 + 0x50]\n 13192: a2 = u64 [a4 + 0x58]\n 13195: a3 = u64 [a4 + 0x60]\n 13198: a4 = s1 + 0x28f8\n 13202: u64 [a4 + 832] = 0\n 13206: u64 [a4 + 824] = 0\n 13210: u64 [a4 + 816] = 0\n 13214: u64 [a4 + 808] = 0x2\n 13219: a5 = a4 + 0x300\n 13223: u64 [a5 + 0x60] = a3\n 13226: u64 [a5 + 0x58] = a2\n 13229: u64 [a5 + 0x50] = a1\n 13232: u64 [a5 + 0x48] = a0\n 13235: a0 = s1 + 0x2c20\n 13239: a1 = s1 + 0x2c40\n 13243: ra = 382, jump @7\n      : @373 [@dyn 191] (gas: 9)\n 13249: a3 = s1 + 0x100\n 13253: a2 = u64 [a3 + 0x58]\n 13256: a0 = 0xffffff3c\n 13266: a0 = a2 <u a0\n 13269: a1 = u64 [a3 + 0x50]\n 13272: a0 = 0 if a1 != 0\n 13274: a1 = u64 [a3 + 0x48]\n 13277: a0 = 0 if a1 != 0\n 13279: jump @375 if a0 != 0\n      : @374 (gas: 1)\n 13282: jump @499\n      : @375 (gas: 5)\n 13285: i32 a1 = a2 + 0xc4\n 13289: a0 = s1 + 0x3000\n 13293: i32 a0 = a0 + 0xfffffffffffffc60\n 13297: ecalli 1 // 'call_data_load'\n 13299: fallthrough\n      : @376 (gas: 15)\n 13300: a0 = s1 + 0x28f8\n 13304: a5 = a0 + 0x300\n 13308: a3 = u64 [a5 + 0x80]\n 13312: a2 = u64 [a5 + 0x78]\n 13315: a1 = u64 [a5 + 0x68]\n 13318: a4 = u64 [a5 + 0x70]\n 13321: u64 [s1 + 0x50] = a2\n 13324: u64 [s1 + 0x48] = a3\n 13327: a0 = a2 | a3\n 13330: u64 [s1 + 0x58] = a1\n 13333: a1 = a1 <u 0x6\n 13336: u64 [s1 + 0x40] = a4\n 13339: a1 = 0 if a4 != 0\n 13341: a1 = 0 if a0 != 0\n 13343: jump @378 if a1 != 0\n      : @377 (gas: 1)\n 13346: jump @505\n      : @378 (gas: 4)\n 13349: a0 = s1 + 0x7ff\n 13353: a0 = a0 + 0x4e1\n 13357: a1 = 0x40\n 13360: ra = 384, jump @2\n      : @379 [@dyn 192] (gas: 16)\n 13366: a0 = s1 + 0x7ff\n 13370: a0 = a0 + 0xd9\n 13374: a2 = a0 + 0x400\n 13378: a1 = u64 [a2 + 0x20]\n 13381: u64 [s1 + 0x70] = a1\n 13384: a1 = u64 [a2 + 0x18]\n 13387: u64 [s1 + 0x68] = a1\n 13390: a1 = u64 [a2 + 0x10]\n 13393: u64 [s1 + 0x60] = a1\n 13396: a0 = u64 [a2 + 0x8]\n 13399: u64 [s1 + 0x148] = a0\n 13403: a0 = s1 + 0x3000\n 13407: i32 a0 = a0 + 0xfffffffffffffc80\n 13411: ra = 0x182\n 13415: ecalli 7 // 'now'\n 13417: fallthrough\n      : @380 [@dyn 193] (gas: 7)\n 13418: a0 = u64 [s1 + 0x70]\n 13421: a1 = u64 [s1 + 0x60]\n 13424: a0 = a0 | a1\n 13427: a1 = u64 [s1 + 0x148]\n 13431: a5 = a1\n 13433: a2 = u64 [s1 + 0x68]\n 13436: t0 = 388, jump @828\n      : @381 [@dyn 194] (gas: 1)\n 13442: jump @383 if a0 == 0\n      : @382 (gas: 1)\n 13445: jump @499\n      : @383 (gas: 1)\n 13448: t0 = 390, jump @831\n      : @384 [@dyn 195] (gas: 15)\n 13454: a0 = u64 [a4 + 0x88]\n 13458: a1 = u64 [a4 + 0x90]\n 13462: a2 = u64 [a4 + 0x98]\n 13466: a3 = u64 [a4 + 0xa0]\n 13470: a4 = s1 + 0x7ff\n 13474: a4 = a4 + 0xd9\n 13478: u64 [a4 + 0x400] = a3\n 13482: a3 = a4 + 0x300\n 13486: u64 [a3 + 0xf8] = a2\n 13490: u64 [a3 + 0xf0] = a1\n 13494: a1 = s1 + 0x7ff\n 13498: a1 = a1 + 0x4c1\n 13502: u64 [a3 + 0xe8] = a0\n 13506: a0 = a5\n 13508: ra = 392, jump @4\n      : @385 [@dyn 196] (gas: 5)\n 13514: a1 = u64 [s1 + 0x148]\n 13518: a0 = a1 + 0x20\n 13521: a1 = a0 <u a1\n 13524: a3 = u64 [s1 + 0x60]\n 13527: t0 = 394, jump @820\n      : @386 [@dyn 197] (gas: 26)\n 13533: a1 = u64 [s1 + 0x68]\n 13536: a3 = a3 + a1\n 13539: a1 = a3 <u a1\n 13542: a4 = u64 [s1 + 0x70]\n 13545: a4 = a4 + a1\n 13548: a1 = s1 + 0x7ff\n 13552: a1 = a1 + 0xd9\n 13556: a5 = a1 + 0x300\n 13560: u64 [a5 + 0xb0] = a2\n 13564: u64 [a5 + 0xa8] = a0\n 13568: a0 = u64 [s1 + 0x48]\n 13571: u64 [a5 + 0xe0] = a0\n 13575: a0 = u64 [s1 + 0x50]\n 13578: u64 [a5 + 0xd8] = a0\n 13582: a0 = u64 [s1 + 0x40]\n 13585: u64 [a5 + 0xd0] = a0\n 13589: a0 = u64 [s1 + 0x58]\n 13592: u64 [a5 + 0xc8] = a0\n 13596: u64 [a5 + 0xb8] = a3\n 13600: a2 = a1\n 13602: a0 = s1 + 0x7ff\n 13606: a0 = a0 + 0x4a1\n 13610: a1 = s1 + 0x7ff\n 13614: a1 = a1 + 0x481\n 13618: u64 [a2 + 0x3c0] = a4\n 13622: ra = 396, jump @736\n      : @387 [@dyn 198] (gas: 8)\n 13628: a0 = u64 [s1 + 0x158]\n 13632: i32 a1 = a0 + 0x44\n 13635: a0 = s1 + 0x3000\n 13639: i32 a0 = a0 + 0xfffffffffffffca0\n 13643: ra = 0x18e\n 13647: ecalli 1 // 'call_data_load'\n 13649: t0 = 0x190\n 13653: jump @831\n      : @388 [@dyn 199] (gas: 1)\n 13656: t0 = 400, jump @831\n      : @389 [@dyn 200] (gas: 37)\n 13662: a0 = u64 [a4 + 0xa8]\n 13666: a1 = u64 [a4 + 0xb0]\n 13670: a2 = u64 [a4 + 0xb8]\n 13674: a3 = u64 [a4 + 0xc0]\n 13678: a4 = s1 + 0x7ff\n 13682: a4 = a4 + 0xd9\n 13686: a5 = a4 + 0x300\n 13690: u64 [a5 + 0x60] = a3\n 13693: u64 [a5 + 0x58] = a2\n 13696: u64 [a5 + 0x50] = a1\n 13699: u64 [a5 + 0x48] = a0\n 13702: a0 = u64 [s1 + 0xb0]\n 13706: u64 [a5 + 0x80] = a0\n 13710: a0 = u64 [s1 + 0xa8]\n 13714: u64 [a5 + 0x78] = a0\n 13717: a0 = u64 [s1 + 0xa0]\n 13721: u64 [a5 + 0x70] = a0\n 13724: a0 = u64 [0x200e0]\n 13729: a1 = u64 [0x200e8]\n 13734: a2 = u64 [0x200f0]\n 13739: a3 = u64 [0x200f8]\n 13744: u64 [a5 + 0xa0] = a0\n 13748: u64 [a5 + 0x98] = a1\n 13752: u64 [a5 + 0x90] = a2\n 13756: u64 [a5 + 0x88] = a3\n 13760: a5 = a4\n 13762: a1 = 0x40\n 13765: a2 = s1 + 0x7ff\n 13769: a2 = a2 + 0x461\n 13773: a3 = s1 + 0x7ff\n 13777: a3 = a3 + 0x441\n 13781: a4 = s1 + 0x7ff\n 13785: a4 = a4 + 0x421\n 13789: a0 = u64 [s1 + 0x98]\n 13793: u64 [a5 + 0x368] = a0\n 13797: a0 = u64 [s1 + 0x148]\n 13801: ra = 402, jump @10\n      : @390 [@dyn 201] (gas: 5)\n 13807: a1 = u64 [s1 + 0x158]\n 13811: a0 = a1 + 0xa4\n 13815: a1 = a0 <u a1\n 13818: a3 = u64 [s1 + 0x150]\n 13822: t0 = 404, jump @820\n      : @391 [@dyn 202] (gas: 27)\n 13828: a1 = u64 [s1 + 0x130]\n 13832: a3 = a3 + a1\n 13835: a1 = a3 <u a1\n 13838: a4 = u64 [s1 + 0x138]\n 13842: a1 = a1 + a4\n 13845: a4 = s1 + 0x7ff\n 13849: a4 = a4 + 0xd9\n 13853: a5 = a4 + 0x200\n 13857: u64 [a5 + 0xe0] = a1\n 13861: u64 [a5 + 0xd8] = a3\n 13865: u64 [a5 + 0xd0] = a2\n 13869: u64 [a5 + 0xc8] = a0\n 13873: a0 = u64 [s1 + 0x118]\n 13877: u64 [a4 + 0x300] = a0\n 13881: a0 = u64 [s1 + 0x120]\n 13885: u64 [a5 + 0xf8] = a0\n 13889: a0 = u64 [s1 + 0x128]\n 13893: u64 [a5 + 0xf0] = a0\n 13897: a0 = s1 + 0x7ff\n 13901: a0 = a0 + 0x3e1\n 13905: a1 = s1 + 0x7ff\n 13909: a1 = a1 + 0x3c1\n 13913: a2 = s1 + 0x7ff\n 13917: a2 = a2 + 0x3a1\n 13921: a3 = u64 [s1 + 0x140]\n 13925: u64 [a5 + 0xe8] = a3\n 13929: ra = 406, jump @622\n      : @392 [@dyn 203] (gas: 23)\n 13935: a0 = s1 + 0x7ff\n 13939: a0 = a0 + 0xd9\n 13943: a2 = a0 + 0x300\n 13947: a1 = u64 [a2 + 0x8]\n 13950: u64 [s1 + 0x148] = a1\n 13954: a1 = u64 [a2 + 0x10]\n 13957: u64 [s1 + 0x138] = a1\n 13961: a1 = u64 [a2 + 0x18]\n 13964: u64 [s1 + 0x130] = a1\n 13968: a1 = u64 [a2 + 0x20]\n 13971: u64 [s1 + 0x70] = a1\n 13974: a1 = u64 [a2 + 0x28]\n 13977: u64 [s1 + 0x60] = a1\n 13980: a1 = u64 [a2 + 0x30]\n 13983: u64 [s1 + 0x58] = a1\n 13986: a1 = u64 [a2 + 0x38]\n 13989: u64 [s1 + 0x48] = a1\n 13992: a1 = u64 [a2 + 0x40]\n 13995: u64 [s1 + 0x40] = a1\n 13998: a0 = s1 + 0x7ff\n 14002: a0 = a0 + 0x381\n 14006: a1 = 0x40\n 14009: ra = 408, jump @2\n      : @393 [@dyn 204] (gas: 61)\n 14015: a1 = s1 + 0x7ff\n 14019: a1 = a1 + 0xd9\n 14023: a5 = a1 + 0x200\n 14027: a2 = u64 [a5 + 0xc0]\n 14031: u64 [s1 + 0x150] = a2\n 14035: a3 = u64 [a5 + 0xb8]\n 14039: u64 [s1 + 0x68] = a3\n 14042: a4 = u64 [a5 + 0xb0]\n 14046: u64 [s1 + 0x50] = a4\n 14049: t1 = u64 [a1 + 0x2a8]\n 14053: u64 [s1 + 0x158] = t1\n 14057: a0 = u64 [s1 + 0x40]\n 14060: u64 [a5] = a0\n 14062: a0 = u64 [s1 + 0x48]\n 14065: u64 [a1 + 0x1f8] = a0\n 14069: a0 = u64 [s1 + 0x58]\n 14072: u64 [a1 + 0x1f0] = a0\n 14076: a0 = u64 [s1 + 0x60]\n 14079: u64 [a1 + 0x1e8] = a0\n 14083: a0 = u64 [s1 + 0x70]\n 14086: u64 [a5 + 0x20] = a0\n 14089: a0 = u64 [s1 + 0x130]\n 14093: u64 [a5 + 0x18] = a0\n 14096: a0 = u64 [s1 + 0x138]\n 14100: u64 [a5 + 0x10] = a0\n 14103: a0 = u64 [s1 + 0x148]\n 14107: u64 [a5 + 0x8] = a0\n 14110: a0 = u64 [s1 + 0x78]\n 14113: u64 [a5 + 0x40] = a0\n 14116: a0 = u64 [s1 + 0x80]\n 14120: u64 [a5 + 0x38] = a0\n 14123: a0 = u64 [s1 + 0x88]\n 14127: u64 [a5 + 0x30] = a0\n 14130: a0 = u64 [s1 + 0x90]\n 14134: u64 [a5 + 0x28] = a0\n 14137: a0 = u64 [s1 + 0xf8]\n 14141: u64 [a5 + 0x60] = a0\n 14144: a0 = u64 [s1 + 0x100]\n 14148: u64 [a5 + 0x58] = a0\n 14151: a0 = u64 [s1 + 0x108]\n 14155: u64 [a5 + 0x50] = a0\n 14158: a0 = u64 [s1 + 0x110]\n 14162: u64 [a5 + 0x48] = a0\n 14165: u64 [a5 + 0x80] = a2\n 14169: u64 [a5 + 0x78] = a3\n 14172: u64 [a5 + 0x70] = a4\n 14175: t0 = a1\n 14177: a0 = s1 + 0x7ff\n 14181: a0 = a0 + 0x361\n 14185: a1 = s1 + 0x7ff\n 14189: a1 = a1 + 0x341\n 14193: a2 = s1 + 0x7ff\n 14197: a2 = a2 + 0x321\n 14201: a3 = s1 + 0x7ff\n 14205: a3 = a3 + 0x301\n 14209: a4 = s1 + 0x7ff\n 14213: a4 = a4 + 0x2e1\n 14217: a5 = s1 + 0x7ff\n 14221: a5 = a5 + 0x2c1\n 14225: u64 [t0 + 0x268] = t1\n 14229: ra = 410, jump @758\n      : @394 [@dyn 205] (gas: 6)\n 14235: a3 = u64 [s1 + 0x50]\n 14238: a2 = a3\n 14240: a0 = u64 [s1 + 0x150]\n 14244: a0 = a0 | a3\n 14247: a3 = u64 [s1 + 0x68]\n 14250: t0 = 412, jump @822\n      : @395 [@dyn 206] (gas: 1)\n 14256: jump @397 if a0 == 0\n      : @396 (gas: 1)\n 14259: jump @499\n      : @397 (gas: 39)\n 14262: a4 = a3\n 14264: a1 = s1 + 0x7ff\n 14268: a1 = a1 + 0xd9\n 14272: a5 = a1 + 0x200\n 14276: a0 = u64 [a5 + 0x90]\n 14280: a3 = u64 [a5 + 0xa0]\n 14284: u64 [s1 + 0x148] = a3\n 14288: t2 = u64 [a1 + 0x288]\n 14292: a3 = u64 [a5 + 0x98]\n 14296: ra = a0 ^ a2\n 14299: a5 = a0 <u a2\n 14302: t0 = u64 [s1 + 0x158]\n 14306: a1 = t2 <u t0\n 14309: a5 = a1 if ra == 0\n 14312: ra = a4\n 14314: a4 = a3 - a4\n 14317: t1 = a4 - a5\n 14320: a4 = a4 <u a5\n 14323: u64 [s1 + 0x138] = a4\n 14327: a3 = a3 <u ra\n 14330: a5 = u64 [s1 + 0x150]\n 14334: a4 = u64 [s1 + 0x148]\n 14338: a5 = a4 - a5\n 14341: a5 = a5 - a3\n 14344: a3 = u64 [s1 + 0x138]\n 14348: a5 = a5 - a3\n 14351: a0 = a0 - a2\n 14354: a0 = a0 - a1\n 14357: a1 = t2 - t0\n 14360: a0 = a0 | a5\n 14363: a3 = a1 | t1\n 14366: a3 = a3 | a0\n 14369: a0 = a0 | t1\n 14372: a3 = a3 >> 0x20\n 14375: a0 = a0 << 0x20\n 14378: a0 = a0 | a3\n 14381: a4 = s1 + 0x7ff\n 14385: a4 = a4 + 0xd9\n 14389: jump @399 if a0 == 0\n      : @398 (gas: 1)\n 14392: jump @499\n      : @399 (gas: 23)\n 14395: a0 = u64 [0x20100]\n 14400: a2 = u64 [0x20108]\n 14405: a5 = a4 + 0x100\n 14409: u64 [a5 + 0xe0] = a0\n 14413: u64 [a5 + 0xd8] = a2\n 14417: a0 = u64 [0x20110]\n 14422: a2 = u64 [0x20118]\n 14427: a3 = u64 [s1 + 0x98]\n 14431: u64 [a5 + 0xa8] = a3\n 14435: a3 = u64 [s1 + 0xa0]\n 14439: u64 [a5 + 0xb0] = a3\n 14443: u64 [a5 + 0xd0] = a0\n 14447: u64 [a5 + 0xc8] = a2\n 14451: a0 = u64 [s1 + 0xa8]\n 14455: u64 [a5 + 0xb8] = a0\n 14459: a2 = s1 + 0x7ff\n 14463: a2 = a2 + 0x2a1\n 14467: a3 = s1 + 0x7ff\n 14471: a3 = a3 + 0x281\n 14475: a0 = u64 [s1 + 0xb0]\n 14479: u64 [a5 + 0xc0] = a0\n 14483: a0 = u64 [s1 + 0x158]\n 14487: ra = 414, jump @8\n      : @400 [@dyn 207] (gas: 29)\n 14493: a0 = u64 [s1 + 0xd8]\n 14497: a1 = s1 + 0x7ff\n 14501: a1 = a1 + 0xd9\n 14505: a2 = a1 + 0x100\n 14509: u64 [a2 + 0x60] = a0\n 14512: a0 = u64 [s1 + 0xe0]\n 14516: u64 [a2 + 0x58] = a0\n 14519: a0 = u64 [s1 + 0xe8]\n 14523: u64 [a2 + 0x50] = a0\n 14526: a0 = u64 [s1 + 0xf0]\n 14530: u64 [a2 + 0x48] = a0\n 14533: a0 = u64 [s1 + 0x118]\n 14537: u64 [a2 + 0x80] = a0\n 14541: a0 = u64 [s1 + 0x120]\n 14545: u64 [a2 + 0x78] = a0\n 14548: a0 = u64 [s1 + 0x128]\n 14552: u64 [a2 + 0x70] = a0\n 14555: a4 = a1\n 14557: a0 = s1 + 0x7ff\n 14561: a0 = a0 + 0x261\n 14565: a1 = s1 + 0x7ff\n 14569: a1 = a1 + 0x241\n 14573: a2 = s1 + 0x7ff\n 14577: a2 = a2 + 0x221\n 14581: a3 = u64 [s1 + 0x140]\n 14585: u64 [a4 + 0x168] = a3\n 14589: ra = 0x1a0\n 14593: t0 = 0x2d2\n 14597: jump @809\n      : @401 [@dyn 208] (gas: 30)\n 14600: a4 = s1 + 0x7ff\n 14604: a4 = a4 + 0xd9\n 14608: a1 = a4 + 0x100\n 14612: a0 = u64 [a1 + 0x88]\n 14616: t0 = u64 [a4 + 0x1a0]\n 14620: a2 = u64 [a1 + 0x90]\n 14624: a3 = u64 [a1 + 0x98]\n 14628: t2 = a0 + 0x20\n 14631: a5 = t2 <u a0\n 14634: t1 = a2 + a5\n 14637: a1 = t1 <u a2\n 14640: a1 = a5 if a5 == 0\n 14643: a1 = a1 + a3\n 14646: a5 = a1 <u a3\n 14649: a5 = a5 + t0\n 14652: u64 [a4 + 0xc8] = t2\n 14656: u64 [a4 + 0x100] = t0\n 14660: u64 [a4 + 0xf8] = a3\n 14664: u64 [a4 + 0xf0] = a2\n 14668: u64 [a4 + 0xe8] = a0\n 14672: u64 [a4 + 0xd0] = t1\n 14676: u64 [a4 + 0xd8] = a1\n 14680: a0 = s1 + 0x7ff\n 14684: a0 = a0 + 0x1e1\n 14688: a1 = s1 + 0x7ff\n 14692: a1 = a1 + 0x1c1\n 14696: a2 = s1 + 0x7ff\n 14700: a2 = a2 + 0x1a1\n 14704: u64 [a4 + 0xe0] = a5\n 14708: ra = 418, jump @622\n      : @402 [@dyn 209] (gas: 45)\n 14714: a1 = s1 + 0x7ff\n 14718: a1 = a1 + 0xd9\n 14722: a2 = a1 + 0x100\n 14726: a0 = u64 [a2 + 0x8]\n 14729: u64 [s1 + 0x148] = a0\n 14733: a0 = u64 [a2 + 0x10]\n 14736: u64 [s1 + 0x138] = a0\n 14740: a0 = u64 [a2 + 0x18]\n 14743: u64 [s1 + 0x130] = a0\n 14747: a0 = u64 [a2 + 0x20]\n 14750: u64 [s1 + 0x110] = a0\n 14754: a0 = u64 [a2 + 0x28]\n 14757: u64 [s1 + 0x108] = a0\n 14761: a0 = u64 [a2 + 0x30]\n 14764: u64 [s1 + 0x100] = a0\n 14768: a0 = u64 [a2 + 0x38]\n 14771: u64 [s1 + 0xf8] = a0\n 14775: a0 = u64 [a2 + 0x40]\n 14778: u64 [s1 + 0x90] = a0\n 14782: a0 = u64 [s1 + 0xd8]\n 14786: u64 [a1 + 0x80] = a0\n 14790: a0 = u64 [s1 + 0xe0]\n 14794: u64 [a1 + 0x78] = a0\n 14797: a0 = u64 [s1 + 0xe8]\n 14801: u64 [a1 + 0x70] = a0\n 14804: a0 = u64 [s1 + 0xf0]\n 14808: u64 [a1 + 0x68] = a0\n 14811: a0 = u64 [s1 + 0x118]\n 14815: u64 [a1 + 0xa0] = a0\n 14819: a0 = u64 [s1 + 0x120]\n 14823: u64 [a1 + 0x98] = a0\n 14827: a0 = u64 [s1 + 0x128]\n 14831: u64 [a1 + 0x90] = a0\n 14835: a4 = a1\n 14837: a0 = s1 + 0x7ff\n 14841: a0 = a0 + 0x181\n 14845: a1 = s1 + 0x7ff\n 14849: a1 = a1 + 0x161\n 14853: a2 = s1 + 0x7ff\n 14857: a2 = a2 + 0x141\n 14861: a3 = u64 [s1 + 0x140]\n 14865: u64 [a4 + 0x88] = a3\n 14869: ra = 0x1a4\n 14873: t0 = 0x2d2\n 14877: jump @809\n      : @403 [@dyn 210] (gas: 23)\n 14880: a4 = s1 + 0x7ff\n 14884: a4 = a4 + 0xd9\n 14888: a3 = u64 [a4 + 0xa8]\n 14892: a0 = u64 [a4 + 0xb0]\n 14896: a1 = u64 [a4 + 0xb8]\n 14900: a2 = u64 [a4 + 0xc0]\n 14904: u64 [a4] = a2\n 14906: u64 [a4 + 0xfffffffffffffff8] = a1\n 14909: a5 = s1 + 0x1000\n 14913: u64 [a5 + 0xfffffffffffff8c8] = a0\n 14917: a5 = s1 + 0x1000\n 14921: u64 [a5 + 0xfffffffffffff8c0] = a3\n 14925: u64 [a4 + 0x20] = a2\n 14928: u64 [a4 + 0x18] = a1\n 14931: u64 [a4 + 0x10] = a0\n 14934: a0 = s1 + 0x7ff\n 14938: a0 = a0 + 0x101\n 14942: a1 = s1 + 0x7ff\n 14946: a1 = a1 + 0xe1\n 14950: a2 = s1 + 0x7ff\n 14954: a2 = a2 + 0xc1\n 14958: u64 [a4 + 0x8] = a3\n 14961: ra = 422, jump @622\n      : @404 [@dyn 211] (gas: 51)\n 14967: a1 = s1 + 0x7ff\n 14971: a1 = a1 + 0xd9\n 14975: a0 = u64 [a1 + 0x28]\n 14978: u64 [s1 + 0xf0] = a0\n 14982: a0 = u64 [a1 + 0x30]\n 14985: u64 [s1 + 0xe8] = a0\n 14989: a0 = u64 [a1 + 0x38]\n 14992: u64 [s1 + 0xe0] = a0\n 14996: a0 = u64 [a1 + 0x40]\n 14999: u64 [s1 + 0xd8] = a0\n 15003: a0 = u64 [a1 + 0x48]\n 15006: u64 [s1 + 0x88] = a0\n 15010: a0 = u64 [a1 + 0x50]\n 15013: u64 [s1 + 0x80] = a0\n 15017: a0 = u64 [a1 + 0x58]\n 15020: u64 [s1 + 0x78] = a0\n 15023: a0 = u64 [a1 + 0x60]\n 15026: u64 [s1 + 0x70] = a0\n 15029: a0 = u64 [s1 + 0xb8]\n 15033: a1 = s1 + 0x1000\n 15037: u64 [a1 + 0xfffffffffffff878] = a0\n 15041: a0 = u64 [s1 + 0xc0]\n 15045: a1 = s1 + 0x1000\n 15049: u64 [a1 + 0xfffffffffffff870] = a0\n 15053: a0 = u64 [s1 + 0xc8]\n 15057: a1 = s1 + 0x1000\n 15061: u64 [a1 + 0xfffffffffffff868] = a0\n 15065: a0 = u64 [s1 + 0xd0]\n 15069: a1 = s1 + 0x1000\n 15073: u64 [a1 + 0xfffffffffffff860] = a0\n 15077: a0 = u64 [s1 + 0x118]\n 15081: a1 = s1 + 0x1000\n 15085: u64 [a1 + 0xfffffffffffff898] = a0\n 15089: a0 = u64 [s1 + 0x120]\n 15093: a1 = s1 + 0x1000\n 15097: u64 [a1 + 0xfffffffffffff890] = a0\n 15101: a0 = u64 [s1 + 0x128]\n 15105: a1 = s1 + 0x1000\n 15109: u64 [a1 + 0xfffffffffffff888] = a0\n 15113: a0 = s1 + 0x7ff\n 15117: a0 = a0 + 0xa1\n 15121: a1 = s1 + 0x7ff\n 15125: a1 = a1 + 0x81\n 15129: a2 = s1 + 0x7ff\n 15133: a2 = a2 + 0x61\n 15136: a3 = u64 [s1 + 0x140]\n 15140: a4 = s1 + 0x1000\n 15144: u64 [a4 + 0xfffffffffffff880] = a3\n 15148: ra = 0x1a8\n 15152: t0 = 0x2d2\n 15156: jump @809\n      : @405 [@dyn 212] (gas: 34)\n 15159: a0 = s1 + 0x1000\n 15163: a0 = u64 [a0 + 0xfffffffffffff8a0]\n 15167: a1 = s1 + 0x1000\n 15171: t0 = u64 [a1 + 0xfffffffffffff8b8]\n 15175: a1 = s1 + 0x1000\n 15179: a2 = u64 [a1 + 0xfffffffffffff8a8]\n 15183: a1 = s1 + 0x1000\n 15187: a3 = u64 [a1 + 0xfffffffffffff8b0]\n 15191: a4 = a0 + 0x20\n 15194: a5 = a4 <u a0\n 15197: t1 = a2 + a5\n 15200: a1 = t1 <u a2\n 15203: a1 = a5 if a5 == 0\n 15206: a1 = a1 + a3\n 15209: a5 = a1 <u a3\n 15212: a5 = a5 + t0\n 15215: u64 [s1 + 0x7e0] = a4\n 15219: a4 = s1 + 0x1000\n 15223: u64 [a4 + 0xfffffffffffff818] = t0\n 15227: a4 = s1 + 0x1000\n 15231: u64 [a4 + 0xfffffffffffff810] = a3\n 15235: a3 = s1 + 0x1000\n 15239: u64 [a3 + 0xfffffffffffff808] = a2\n 15243: a2 = s1 + 0x1000\n 15247: u64 [a2 + 0xfffffffffffff800] = a0\n 15251: u64 [s1 + 0x7e8] = t1\n 15255: u64 [s1 + 0x7f0] = a1\n 15259: a0 = s1 + 0x7ff\n 15263: a0 = a0 + 0x21\n 15266: a1 = s1 + 0x7ff\n 15270: a1 = a1 + 0x1\n 15273: a2 = s1 + 0x7e0\n 15277: u64 [s1 + 0x7f8] = a5\n 15281: ra = 426, jump @622\n      : @406 [@dyn 213] (gas: 46)\n 15287: a0 = s1 + 0x1000\n 15291: a0 = u64 [a0 + 0xfffffffffffff820]\n 15295: u64 [s1 + 0x68] = a0\n 15298: a0 = s1 + 0x1000\n 15302: a0 = u64 [a0 + 0xfffffffffffff828]\n 15306: u64 [s1 + 0x60] = a0\n 15309: a0 = s1 + 0x1000\n 15313: a0 = u64 [a0 + 0xfffffffffffff830]\n 15317: u64 [s1 + 0x58] = a0\n 15320: a0 = s1 + 0x1000\n 15324: a0 = u64 [a0 + 0xfffffffffffff838]\n 15328: u64 [s1 + 0x50] = a0\n 15331: a0 = s1 + 0x1000\n 15335: a0 = u64 [a0 + 0xfffffffffffff840]\n 15339: u64 [s1 + 0x48] = a0\n 15342: a0 = s1 + 0x1000\n 15346: a0 = u64 [a0 + 0xfffffffffffff848]\n 15350: u64 [s1 + 0x40] = a0\n 15353: a0 = s1 + 0x1000\n 15357: a0 = u64 [a0 + 0xfffffffffffff850]\n 15361: u64 [s1 + 0x38] = a0\n 15364: a0 = s1 + 0x1000\n 15368: a0 = u64 [a0 + 0xfffffffffffff858]\n 15372: u64 [s1 + 0x30] = a0\n 15375: a0 = u64 [s1 + 0xb8]\n 15379: u64 [s1 + 0x798] = a0\n 15383: a0 = u64 [s1 + 0xc0]\n 15387: u64 [s1 + 0x790] = a0\n 15391: a0 = u64 [s1 + 0xc8]\n 15395: u64 [s1 + 0x788] = a0\n 15399: a0 = u64 [s1 + 0xd0]\n 15403: u64 [s1 + 0x780] = a0\n 15407: a0 = u64 [s1 + 0x118]\n 15411: u64 [s1 + 0x7b8] = a0\n 15415: a0 = u64 [s1 + 0x120]\n 15419: u64 [s1 + 0x7b0] = a0\n 15423: a0 = u64 [s1 + 0x128]\n 15427: u64 [s1 + 0x7a8] = a0\n 15431: a0 = s1 + 0x7c0\n 15435: a1 = s1 + 0x7a0\n 15439: a2 = s1 + 0x780\n 15443: a3 = u64 [s1 + 0x140]\n 15447: u64 [s1 + 0x7a0] = a3\n 15451: ra = 0x1ac\n 15455: t0 = 0x2d2\n 15459: jump @809\n      : @407 [@dyn 214] (gas: 16)\n 15462: a3 = u64 [s1 + 0x7c0]\n 15466: a0 = u64 [s1 + 0x7c8]\n 15470: a1 = u64 [s1 + 0x7d0]\n 15474: a2 = u64 [s1 + 0x7d8]\n 15478: u64 [s1 + 0x718] = a2\n 15482: u64 [s1 + 0x710] = a1\n 15486: u64 [s1 + 0x708] = a0\n 15490: u64 [s1 + 0x700] = a3\n 15494: u64 [s1 + 0x738] = a2\n 15498: u64 [s1 + 0x730] = a1\n 15502: u64 [s1 + 0x728] = a0\n 15506: a0 = s1 + 0x740\n 15510: a1 = s1 + 0x720\n 15514: a2 = s1 + 0x700\n 15518: u64 [s1 + 0x720] = a3\n 15522: ra = 430, jump @622\n      : @408 [@dyn 215] (gas: 20)\n 15528: a1 = s1 + 0x700\n 15532: a0 = u64 [a1 + 0x40]\n 15535: u64 [s1 + 0x140] = a0\n 15539: a0 = u64 [a1 + 0x48]\n 15542: u64 [s1 + 0x128] = a0\n 15546: a0 = u64 [a1 + 0x50]\n 15549: u64 [s1 + 0x120] = a0\n 15553: a0 = u64 [a1 + 0x58]\n 15556: u64 [s1 + 0x118] = a0\n 15560: a0 = u64 [a1 + 0x60]\n 15563: u64 [s1 + 0xd0] = a0\n 15567: a0 = u64 [a1 + 0x68]\n 15570: u64 [s1 + 0xc8] = a0\n 15574: a0 = u64 [a1 + 0x70]\n 15577: u64 [s1 + 0xc0] = a0\n 15581: a0 = u64 [a1 + 0x78]\n 15584: u64 [s1 + 0xb8] = a0\n 15588: a0 = s1 + 0x6e0\n 15592: a1 = 0x40\n 15595: ra = 432, jump @2\n      : @409 [@dyn 216] (gas: 94)\n 15601: a4 = s1 + 0x600\n 15605: a2 = u64 [a4 + 0xf8]\n 15609: u64 [s1 + 0x150] = a2\n 15613: a1 = u64 [a4 + 0xf0]\n 15617: u64 [s1 + 0x28] = a1\n 15620: a3 = u64 [a4 + 0xe8]\n 15624: u64 [s1 + 0x20] = a3\n 15627: t0 = u64 [s1 + 0x6e0]\n 15631: u64 [s1 + 0x158] = t0\n 15635: sp = sp + 0xffffffffffffffe0\n 15638: a0 = s1 + 0x5a0\n 15642: u64 [sp + 0x18] = a0\n 15645: a0 = s1 + 0x5c0\n 15649: u64 [sp + 0x10] = a0\n 15652: a0 = s1 + 0x5e0\n 15656: u64 [sp + 0x8] = a0\n 15659: a0 = s1 + 0x600\n 15663: u64 [sp] = a0\n 15665: a0 = u64 [s1 + 0xb8]\n 15669: a5 = s1 + 0x500\n 15673: u64 [a5 + 0xb8] = a0\n 15677: a0 = u64 [s1 + 0xc0]\n 15681: u64 [a5 + 0xb0] = a0\n 15685: a0 = u64 [s1 + 0xc8]\n 15689: u64 [a5 + 0xa8] = a0\n 15693: a0 = u64 [s1 + 0xd0]\n 15697: u64 [a5 + 0xa0] = a0\n 15701: a0 = u64 [s1 + 0x118]\n 15705: u64 [a5 + 0xd8] = a0\n 15709: a0 = u64 [s1 + 0x120]\n 15713: u64 [a5 + 0xd0] = a0\n 15717: a0 = u64 [s1 + 0x128]\n 15721: u64 [a5 + 0xc8] = a0\n 15725: a0 = u64 [s1 + 0x140]\n 15729: u64 [a5 + 0xc0] = a0\n 15733: a0 = u64 [s1 + 0x30]\n 15736: u64 [a5 + 0xf8] = a0\n 15740: a0 = u64 [s1 + 0x38]\n 15743: u64 [a5 + 0xf0] = a0\n 15747: a0 = u64 [s1 + 0x40]\n 15750: u64 [a5 + 0xe8] = a0\n 15754: a0 = u64 [s1 + 0x48]\n 15757: u64 [a5 + 0xe0] = a0\n 15761: a0 = u64 [s1 + 0x50]\n 15764: u64 [a4 + 0x18] = a0\n 15767: a0 = u64 [s1 + 0x58]\n 15770: u64 [a4 + 0x10] = a0\n 15773: a0 = u64 [s1 + 0x60]\n 15776: u64 [a4 + 0x8] = a0\n 15779: a0 = u64 [s1 + 0x68]\n 15782: u64 [a4] = a0\n 15784: a0 = u64 [s1 + 0x70]\n 15787: u64 [a4 + 0x38] = a0\n 15790: a0 = u64 [s1 + 0x78]\n 15793: u64 [a4 + 0x30] = a0\n 15796: a0 = u64 [s1 + 0x80]\n 15800: u64 [a4 + 0x28] = a0\n 15803: a0 = u64 [s1 + 0x88]\n 15807: u64 [a4 + 0x20] = a0\n 15810: a0 = u64 [s1 + 0xd8]\n 15814: u64 [a4 + 0x58] = a0\n 15817: a0 = u64 [s1 + 0xe0]\n 15821: u64 [a4 + 0x50] = a0\n 15824: a0 = u64 [s1 + 0xe8]\n 15828: u64 [a4 + 0x48] = a0\n 15831: a0 = u64 [s1 + 0xf0]\n 15835: u64 [a4 + 0x40] = a0\n 15838: a0 = u64 [s1 + 0x90]\n 15842: u64 [a4 + 0x78] = a0\n 15845: a0 = u64 [s1 + 0xf8]\n 15849: u64 [a4 + 0x70] = a0\n 15852: a0 = u64 [s1 + 0x100]\n 15856: u64 [a4 + 0x68] = a0\n 15859: a0 = u64 [s1 + 0x108]\n 15863: u64 [a4 + 0x60] = a0\n 15866: a0 = u64 [s1 + 0x110]\n 15870: u64 [a4 + 0x98] = a0\n 15874: a0 = u64 [s1 + 0x130]\n 15878: u64 [a4 + 0x90] = a0\n 15882: a0 = u64 [s1 + 0x138]\n 15886: u64 [a4 + 0x88] = a0\n 15890: a0 = u64 [s1 + 0x148]\n 15894: u64 [a4 + 0x80] = a0\n 15898: u64 [a4 + 0xb8] = a2\n 15902: u64 [a4 + 0xb0] = a1\n 15906: u64 [a4 + 0xa8] = a3\n 15910: a0 = s1 + 0x6c0\n 15914: a1 = s1 + 0x6a0\n 15918: a2 = s1 + 0x680\n 15922: a3 = s1 + 0x660\n 15926: a4 = s1 + 0x640\n 15930: a5 = s1 + 0x620\n 15934: u64 [s1 + 0x6a0] = t0\n 15938: ra = 434, jump @768\n      : @410 [@dyn 217] (gas: 6)\n 15944: a4 = u64 [s1 + 0x20]\n 15947: sp = sp + 0x20\n 15950: a0 = u64 [s1 + 0x150]\n 15954: a0 = a0 | a4\n 15957: a3 = u64 [s1 + 0x28]\n 15960: t0 = 436, jump @822\n      : @411 [@dyn 218] (gas: 1)\n 15966: jump @499 if a0 != 0\n      : @412 (gas: 34)\n 15970: t0 = a3\n 15972: a2 = s1 + 0x600\n 15976: a0 = u64 [a2 + 0xc8]\n 15980: a1 = u64 [a2 + 0xd8]\n 15984: u64 [s1 + 0x148] = a1\n 15988: t2 = u64 [s1 + 0x6c0]\n 15992: a3 = u64 [a2 + 0xd0]\n 15996: ra = a0 ^ a4\n 15999: a5 = a0 <u a4\n 16002: t1 = u64 [s1 + 0x158]\n 16006: a1 = t2 <u t1\n 16009: a5 = a1 if ra == 0\n 16012: a2 = a3 - t0\n 16015: ra = a2 - a5\n 16018: a2 = a2 <u a5\n 16021: u64 [s1 + 0x140] = a2\n 16025: a3 = a3 <u t0\n 16028: a5 = u64 [s1 + 0x150]\n 16032: a2 = u64 [s1 + 0x148]\n 16036: a5 = a2 - a5\n 16039: a5 = a5 - a3\n 16042: a2 = u64 [s1 + 0x140]\n 16046: a5 = a5 - a2\n 16049: a0 = a0 - a4\n 16052: a0 = a0 - a1\n 16055: a1 = t2 - t1\n 16058: a0 = a0 | a5\n 16061: a3 = a1 | ra\n 16064: a3 = a3 | a0\n 16067: a0 = a0 | ra\n 16070: a3 = a3 >> 0x20\n 16073: a0 = a0 << 0x20\n 16076: a0 = a0 | a3\n 16079: jump @499 if a0 != 0\n      : @413 (gas: 20)\n 16083: a0 = u64 [s1 + 0x98]\n 16087: u64 [s1 + 0x560] = a0\n 16091: a0 = u64 [s1 + 0xa0]\n 16095: u64 [s1 + 0x568] = a0\n 16099: a0 = u64 [0x20120]\n 16104: a2 = u64 [0x20128]\n 16109: a3 = u64 [0x20130]\n 16114: a4 = u64 [0x20138]\n 16119: u64 [s1 + 0x598] = a0\n 16123: u64 [s1 + 0x590] = a2\n 16127: u64 [s1 + 0x588] = a3\n 16131: u64 [s1 + 0x580] = a4\n 16135: a0 = u64 [s1 + 0xa8]\n 16139: u64 [s1 + 0x570] = a0\n 16143: a2 = s1 + 0x580\n 16147: a3 = s1 + 0x560\n 16151: a0 = u64 [s1 + 0xb0]\n 16155: u64 [s1 + 0x578] = a0\n 16159: a0 = u64 [s1 + 0x158]\n 16163: ra = 438, jump @8\n      : @414 [@dyn 219] (gas: 3)\n 16169: a0 = s1 + 0x540\n 16173: a1 = 0x40\n 16176: ra = 440, jump @2\n      : @415 [@dyn 220] (gas: 13)\n 16182: a4 = s1 + 0x500\n 16186: a0 = u64 [a4 + 0x58]\n 16189: a1 = u64 [a4 + 0x50]\n 16192: a2 = u64 [a4 + 0x48]\n 16195: a3 = u64 [a4 + 0x40]\n 16198: a0 = a0 | a2\n 16201: a2 = a3 | a1\n 16204: a2 = a2 | a0\n 16207: a2 = a2 >> 0x20\n 16210: a0 = a0 | a1\n 16213: a0 = a0 << 0x20\n 16216: a0 = a0 | a2\n 16219: jump @499 if a0 != 0\n      : @416 (gas: 14)\n 16223: a0 = u64 [s1 + 0x98]\n 16227: a2 = s1 + 0x500\n 16231: u64 [a2 + 0x20] = a0\n 16234: a0 = u64 [s1 + 0xa0]\n 16238: u64 [a2 + 0x28] = a0\n 16241: a0 = u64 [s1 + 0xa8]\n 16245: u64 [a2 + 0x30] = a0\n 16248: a1 = s1 + 0x520\n 16252: a0 = u64 [s1 + 0xb0]\n 16256: u64 [a2 + 0x38] = a0\n 16259: a0 = a3\n 16261: u64 [s1 + 0x158] = a3\n 16265: ra = 0x11c\n 16269: jump @4\n      : @417 (gas: 13)\n 16272: a1 = 0xffffffff\n 16282: a0 = u64 [s1 + 0x140]\n 16286: t1 = a0 & 0xffffffffffffffff\n 16289: t0 = u64 [s1 + 0x158]\n 16293: a1 = t0 & a1\n 16296: a0 = u64 [s1 + 0x148]\n 16300: a0 = a0 & 0xffffffffffffffff\n 16303: a0 = a0 ^ a3\n 16306: a1 = a1 ^ a5\n 16309: a2 = a4 ^ t1\n 16312: a0 = a0 | a2\n 16315: a0 = a0 | a1\n 16318: jump @506 if a0 != 0\n      : @418 (gas: 3)\n 16322: a0 = s1 + 0x2940\n 16326: a1 = 0x40\n 16329: ra = 442, jump @2\n      : @419 [@dyn 221] (gas: 13)\n 16335: a2 = s1 + 0x28f8\n 16339: t0 = u64 [a2 + 0x60]\n 16342: a5 = u64 [a2 + 0x58]\n 16345: a4 = u64 [a2 + 0x50]\n 16348: a0 = u64 [a2 + 0x48]\n 16351: a3 = a4 | t0\n 16354: a1 = a0 | a5\n 16357: a1 = a1 | a3\n 16360: a1 = a1 >> 0x20\n 16363: a3 = a3 | a5\n 16366: a3 = a3 << 0x20\n 16369: a1 = a1 | a3\n 16372: jump @499 if a1 != 0\n      : @420 (gas: 11)\n 16376: u64 [a2 + 56] = 0\n 16379: u64 [a2 + 48] = 0\n 16382: u64 [a2 + 40] = 0\n 16385: a3 = 0x8c379a000000000\n 16395: a1 = s1 + 0x2920\n 16399: u64 [a2 + 0x40] = a3\n 16402: u64 [s1 + 0x158] = a0\n 16406: u64 [s1 + 0x150] = a4\n 16410: u64 [s1 + 0x140] = t0\n 16414: u64 [s1 + 0x148] = a5\n 16418: ra = 444, jump @4\n      : @421 [@dyn 222] (gas: 1)\n 16424: t0 = 446, jump @800\n      : @422 [@dyn 223] (gas: 1)\n 16430: jump @499 if a0 == 0\n      : @423 (gas: 11)\n 16434: i32 a0 = a1 + 0x4\n 16437: a2 = s1 + 0x28f8\n 16441: a5 = 0\n 16443: u64 [a2 + 32] = 0\n 16446: u64 [a2 + 24] = 0\n 16449: u64 [a2 + 8] = 0x20\n 16453: a1 = s1 + 0x2900\n 16457: u64 [a2 + 16] = 0\n 16460: u64 [s1 + 0x148] = a3\n 16464: u64 [s1 + 0x140] = a4\n 16468: ra = 448, jump @4\n      : @424 [@dyn 224] (gas: 1)\n 16474: t0 = 450, jump @802\n      : @425 [@dyn 225] (gas: 1)\n 16480: jump @499 if a0 == 0\n      : @426 (gas: 8)\n 16484: i32 a0 = a1 + 0x24\n 16487: a4 = s1 + 0x28f8\n 16491: u64 [a4 + 0] = 0\n 16493: u64 [a4 + 4294967288] = 0\n 16496: u64 [a4 + 4294967272] = 0x1f\n 16500: a1 = s1 + 0x28e0\n 16504: u64 [a4 + 4294967280] = 0\n 16507: ra = 452, jump @4\n      : @427 [@dyn 226] (gas: 1)\n 16513: t0 = 454, jump @804\n      : @428 [@dyn 227] (gas: 1)\n 16519: jump @499 if a0 == 0\n      : @429 (gas: 14)\n 16523: i32 a0 = a3 + 0x44\n 16526: a1 = u64 [0x20000]\n 16531: a4 = s1 + 0x20f0\n 16535: a5 = a4 + 0x700\n 16539: u64 [a5 + 0xe8] = a1\n 16543: a1 = u64 [0x20008]\n 16548: a2 = u64 [0x20010]\n 16553: a3 = u64 [0x20018]\n 16558: u64 [a5 + 0xe0] = a1\n 16562: u64 [a5 + 0xd8] = a2\n 16566: a1 = s1 + 0x28c0\n 16570: u64 [a5 + 0xd0] = a3\n 16574: ra = 0x218\n 16578: jump @4\n      : @430 (gas: 10)\n 16581: u64 [s1 + 984] = 0\n 16585: a0 = u64 [s1 + 0x158]\n 16589: u64 [s1 + 0x3c0] = a0\n 16593: a0 = u64 [s1 + 0x148]\n 16597: u64 [s1 + 0x3c8] = a0\n 16601: a1 = s1 + 0x3c0\n 16605: a0 = u64 [s1 + 0x140]\n 16609: u64 [s1 + 0x3d0] = a0\n 16613: a0 = 0\n 16615: ra = 456, jump @4\n      : @431 [@dyn 228] (gas: 7)\n 16621: u64 [s1 + 952] = 0\n 16625: u64 [s1 + 944] = 0\n 16629: u64 [s1 + 936] = 0\n 16633: a0 = 0x20\n 16636: a1 = s1 + 0x3a0\n 16640: u64 [s1 + 928] = 0x1\n 16645: ra = 458, jump @4\n      : @432 [@dyn 229] (gas: 3)\n 16651: a1 = 0x40\n 16654: a0 = 0\n 16656: ra = 460, jump @14\n      : @433 [@dyn 230] (gas: 1)\n 16662: t0 = 462, jump @811\n      : @434 [@dyn 231] (gas: 5)\n 16668: ra = 0x1d0\n 16672: ecalli 6 // 'hash_keccak_256'\n 16674: a3 = u64 [s1 + 0x150]\n 16678: t0 = 0x1d2\n 16682: jump @807\n      : @435 [@dyn 232] (gas: 2)\n 16685: a3 = u64 [s1 + 0x150]\n 16689: t0 = 466, jump @807\n      : @436 [@dyn 233] (gas: 8)\n 16695: a5 = a4 + 0x100\n 16699: u64 [a5 + 0xa0] = a3\n 16703: u64 [a5 + 0x98] = a2\n 16707: u64 [a5 + 0x90] = a1\n 16711: u64 [a5 + 0x88] = a0\n 16715: a0 = s1 + 0x380\n 16719: a1 = s1 + 0x2a80\n 16723: ra = 468, jump @6\n      : @437 [@dyn 234] (gas: 2)\n 16729: a0 = u8 [s1 + 0x380]\n 16733: jump @472 if a0 != 0\n      : @438 (gas: 10)\n 16737: u64 [s1 + 728] = 0\n 16741: a0 = u64 [s1 + 0x158]\n 16745: u64 [s1 + 0x2c0] = a0\n 16749: a0 = u64 [s1 + 0x148]\n 16753: u64 [s1 + 0x2c8] = a0\n 16757: a1 = s1 + 0x2c0\n 16761: a0 = u64 [s1 + 0x140]\n 16765: u64 [s1 + 0x2d0] = a0\n 16769: a0 = 0\n 16771: ra = 470, jump @4\n      : @439 [@dyn 235] (gas: 7)\n 16777: u64 [s1 + 696] = 0\n 16781: u64 [s1 + 688] = 0\n 16785: u64 [s1 + 672] = 0x1\n 16790: a0 = 0x20\n 16793: a1 = s1 + 0x2a0\n 16797: u64 [s1 + 680] = 0\n 16801: ra = 472, jump @4\n      : @440 [@dyn 236] (gas: 7)\n 16807: a0 = sp + 0xffffffffffffffe0\n 16810: a0 = a0 & 0xffffffffffffffe0\n 16813: u64 [s1 + 0x150] = a0\n 16817: sp = a0\n 16819: a1 = 0x40\n 16822: a0 = 0\n 16824: ra = 474, jump @14\n      : @441 [@dyn 237] (gas: 1)\n 16830: t0 = 476, jump @812\n      : @442 [@dyn 238] (gas: 4)\n 16836: ra = 0x1de\n 16840: ecalli 6 // 'hash_keccak_256'\n 16842: t0 = 0x1e0\n 16846: jump @808\n      : @443 [@dyn 239] (gas: 1)\n 16849: t0 = 480, jump @808\n      : @444 [@dyn 240] (gas: 2)\n 16855: a0 = s1 + 0x280\n 16859: ra = 482, jump @6\n      : @445 [@dyn 241] (gas: 15)\n 16865: a0 = u64 [s1 + 0x280]\n 16869: a1 = u64 [s1 + 0x288]\n 16873: a2 = u64 [s1 + 0x298]\n 16877: a3 = u64 [s1 + 0x290]\n 16881: a0 = a0 & 0xffffffffffffff00\n 16885: a0 = a0 | 0x1\n 16888: a4 = s1 + 0x28f8\n 16892: a5 = a4 + 0x100\n 16896: u64 [a5 + 0xc0] = a2\n 16900: u64 [a5 + 0xb8] = a3\n 16904: u64 [a5 + 0xb0] = a1\n 16908: u64 [a5 + 0xa8] = a0\n 16912: a1 = s1 + 0x2aa0\n 16916: a0 = u64 [s1 + 0x150]\n 16920: ra = 484, jump @7\n      : @446 [@dyn 242] (gas: 3)\n 16926: a0 = s1 + 0x260\n 16930: a1 = 0x40\n 16933: ra = 486, jump @2\n      : @447 [@dyn 243] (gas: 14)\n 16939: a1 = s1 + 0x200\n 16943: a0 = u64 [a1 + 0x78]\n 16946: u64 [s1 + 0x138] = a0\n 16950: a0 = u64 [a1 + 0x70]\n 16953: u64 [s1 + 0x130] = a0\n 16957: a0 = u64 [a1 + 0x68]\n 16960: u64 [s1 + 0x128] = a0\n 16964: a0 = u64 [a1 + 0x60]\n 16967: u64 [s1 + 0x150] = a0\n 16971: a0 = s1 + 0x3000\n 16975: i32 a0 = a0 + 0xfffffffffffffac0\n 16979: ra = 0x1e8\n 16983: ecalli 7 // 'now'\n 16985: fallthrough\n      : @448 [@dyn 244] (gas: 8)\n 16986: a3 = s1 + 0x100\n 16990: a0 = u64 [a3 + 0x38]\n 16993: a1 = u64 [a3 + 0x28]\n 16996: a0 = a0 | a1\n 16999: a1 = u64 [a3 + 0x50]\n 17002: a4 = a1\n 17004: a2 = u64 [a3 + 0x30]\n 17007: t0 = 490, jump @828\n      : @449 [@dyn 245] (gas: 1)\n 17013: jump @499 if a0 != 0\n      : @450 (gas: 13)\n 17017: a3 = s1 + 0x28f8\n 17021: a5 = a3 + 0x100\n 17025: a0 = u64 [a5 + 0xc8]\n 17029: a1 = u64 [a5 + 0xd0]\n 17033: a2 = u64 [a5 + 0xd8]\n 17037: a3 = u64 [a5 + 0xe0]\n 17041: u64 [s1 + 0x258] = a3\n 17045: u64 [s1 + 0x250] = a2\n 17049: u64 [s1 + 0x248] = a1\n 17053: a1 = s1 + 0x240\n 17057: u64 [s1 + 0x240] = a0\n 17061: a0 = a4\n 17063: ra = 492, jump @4\n      : @451 [@dyn 246] (gas: 23)\n 17069: u64 [s1 + 536] = 0\n 17073: a4 = s1 + 0x100\n 17077: a0 = u64 [a4 + 0x40]\n 17080: a5 = s1 + 0x200\n 17084: u64 [a5 + 0x10] = a0\n 17087: a0 = u64 [a4 + 0x48]\n 17090: u64 [a5 + 0x8] = a0\n 17093: a0 = u64 [0x20150]\n 17098: a1 = u64 [0x20158]\n 17103: a2 = u64 [0x20160]\n 17108: a3 = u64 [a4 + 0x58]\n 17111: u64 [a5] = a3\n 17113: u64 [a5 + 0x38] = a0\n 17116: u64 [a5 + 0x30] = a1\n 17119: u64 [a5 + 0x28] = a2\n 17122: a0 = u64 [0x20168]\n 17127: a1 = 0x20\n 17130: a2 = s1 + 0x220\n 17134: a3 = s1 + 0x200\n 17138: u64 [a5 + 0x20] = a0\n 17141: a0 = u64 [s1 + 0x150]\n 17145: ra = 0x24a\n 17149: jump @8\n      : @452 (gas: 12)\n 17152: a2 = s1 + 0x10f0\n 17156: u64 [a2 + 936] = 0\n 17160: a0 = u64 [s1 + 0x158]\n 17164: a3 = a2 + 0x300\n 17168: u64 [a3 + 0x90] = a0\n 17172: a0 = u64 [s1 + 0x148]\n 17176: u64 [a3 + 0x98] = a0\n 17180: a1 = s1 + 0x1480\n 17184: a0 = u64 [s1 + 0x140]\n 17188: u64 [a3 + 0xa0] = a0\n 17192: a0 = 0\n 17194: ra = 494, jump @4\n      : @453 [@dyn 247] (gas: 9)\n 17200: a0 = s1 + 0x10f0\n 17204: u64 [a0 + 904] = 0\n 17208: u64 [a0 + 896] = 0\n 17212: u64 [a0 + 888] = 0\n 17216: a3 = a0\n 17218: a0 = 0x20\n 17221: a1 = s1 + 0x1460\n 17225: u64 [a3 + 880] = 0x1\n 17230: ra = 496, jump @4\n      : @454 [@dyn 248] (gas: 3)\n 17236: a1 = 0x40\n 17239: a0 = 0\n 17241: ra = 498, jump @14\n      : @455 [@dyn 249] (gas: 1)\n 17247: t0 = 500, jump @811\n      : @456 [@dyn 250] (gas: 5)\n 17253: ra = 0x1f6\n 17257: ecalli 6 // 'hash_keccak_256'\n 17259: a3 = u64 [s1 + 0x150]\n 17263: t0 = 0x1f8\n 17267: jump @807\n      : @457 [@dyn 251] (gas: 2)\n 17270: a3 = u64 [s1 + 0x150]\n 17274: t0 = 504, jump @807\n      : @458 [@dyn 252] (gas: 8)\n 17280: a5 = a4 + 0x400\n 17284: u64 [a5 + 0x20] = a3\n 17287: u64 [a5 + 0x18] = a2\n 17290: u64 [a5 + 0x10] = a1\n 17293: u64 [a5 + 0x8] = a0\n 17296: a0 = s1 + 0x1440\n 17300: a1 = s1 + 0x2d00\n 17304: ra = 506, jump @6\n      : @459 [@dyn 253] (gas: 3)\n 17310: a2 = s1 + 0x10f0\n 17314: a0 = u8 [a2 + 0x350]\n 17318: jump @487 if a0 != 0\n      : @460 (gas: 3)\n 17322: a0 = s1 + 0x1340\n 17326: a1 = 0x40\n 17329: ra = 508, jump @2\n      : @461 [@dyn 254] (gas: 14)\n 17335: a2 = s1 + 0x10f0\n 17339: t0 = u64 [a2 + 0x268]\n 17343: a1 = a2 + 0x200\n 17347: a5 = u64 [a1 + 0x60]\n 17350: a4 = u64 [a1 + 0x58]\n 17353: a0 = u64 [a1 + 0x50]\n 17356: a3 = a4 | t0\n 17359: a1 = a0 | a5\n 17362: a1 = a1 | a3\n 17365: a1 = a1 >> 0x20\n 17368: a3 = a3 | a5\n 17371: a3 = a3 << 0x20\n 17374: a1 = a1 | a3\n 17377: jump @499 if a1 != 0\n      : @462 (gas: 11)\n 17381: u64 [a2 + 576] = 0\n 17385: u64 [a2 + 568] = 0\n 17389: u64 [a2 + 560] = 0\n 17393: a3 = 0x8c379a000000000\n 17403: a1 = s1 + 0x1320\n 17407: u64 [a2 + 0x248] = a3\n 17411: u64 [s1 + 0x158] = a0\n 17415: u64 [s1 + 0x150] = a4\n 17419: u64 [s1 + 0x140] = t0\n 17423: u64 [s1 + 0x148] = a5\n 17427: ra = 510, jump @4\n      : @463 [@dyn 255] (gas: 1)\n 17433: t0 = 512, jump @800\n      : @464 [@dyn 256] (gas: 1)\n 17439: jump @499 if a0 == 0\n      : @465 (gas: 10)\n 17443: i32 a0 = a1 + 0x4\n 17446: a2 = s1 + 0x10f0\n 17450: u64 [a2 + 552] = 0\n 17454: u64 [a2 + 544] = 0\n 17458: u64 [a2 + 528] = 0x20\n 17463: a1 = s1 + 0x1300\n 17467: u64 [a2 + 536] = 0\n 17471: u64 [s1 + 0x148] = a3\n 17475: u64 [s1 + 0x140] = a4\n 17479: ra = 514, jump @4\n      : @466 [@dyn 257] (gas: 1)\n 17485: t0 = 516, jump @802\n      : @467 [@dyn 258] (gas: 1)\n 17491: jump @499 if a0 == 0\n      : @468 (gas: 8)\n 17495: i32 a0 = a1 + 0x24\n 17498: a3 = s1 + 0x10f0\n 17502: u64 [a3 + 520] = 0\n 17506: u64 [a3 + 512] = 0\n 17510: u64 [a3 + 496] = 0x17\n 17515: a1 = s1 + 0x12e0\n 17519: u64 [a3 + 504] = 0\n 17523: ra = 518, jump @4\n      : @469 [@dyn 259] (gas: 1)\n 17529: t0 = 520, jump @804\n      : @470 [@dyn 260] (gas: 1)\n 17535: jump @499 if a0 == 0\n      : @471 (gas: 13)\n 17539: i32 a0 = a3 + 0x44\n 17542: a1 = u64 [0x200b8]\n 17547: a2 = u64 [0x200c0]\n 17552: a3 = u64 [0x200c8]\n 17557: a4 = s1 + 0x10f0\n 17561: a5 = a4 + 0x100\n 17565: u64 [a5 + 0xe8] = a1\n 17569: u64 [a5 + 0xe0] = a2\n 17573: u64 [a5 + 0xd8] = a3\n 17577: a1 = s1 + 0x12c0\n 17581: u64 [a4 + 464] = 0\n 17585: ra = 0x218\n 17589: jump @4\n      : @472 (gas: 3)\n 17592: a0 = s1 + 0x360\n 17596: a1 = 0x40\n 17599: ra = 522, jump @2\n      : @473 [@dyn 261] (gas: 13)\n 17605: a1 = s1 + 0x300\n 17609: a4 = u64 [a1 + 0x78]\n 17612: a5 = u64 [a1 + 0x70]\n 17615: a3 = u64 [a1 + 0x68]\n 17618: a0 = u64 [a1 + 0x60]\n 17621: a2 = a3 | a4\n 17624: a1 = a0 | a5\n 17627: a1 = a1 | a2\n 17630: a1 = a1 >> 0x20\n 17633: a2 = a2 | a5\n 17636: a2 = a2 << 0x20\n 17639: a1 = a1 | a2\n 17642: jump @499 if a1 != 0\n      : @474 (gas: 11)\n 17646: u64 [s1 + 848] = 0\n 17650: u64 [s1 + 840] = 0\n 17654: u64 [s1 + 832] = 0\n 17658: a2 = 0x8c379a000000000\n 17668: a1 = s1 + 0x340\n 17672: u64 [s1 + 0x358] = a2\n 17676: u64 [s1 + 0x158] = a0\n 17680: u64 [s1 + 0x150] = a3\n 17684: u64 [s1 + 0x148] = a4\n 17688: u64 [s1 + 0x140] = a5\n 17692: ra = 524, jump @4\n      : @475 [@dyn 262] (gas: 6)\n 17698: a5 = s1 + 0x100\n 17702: a1 = u64 [a5 + 0x58]\n 17705: a0 = u64 [a5 + 0x48]\n 17708: a3 = u64 [a5 + 0x40]\n 17711: a3 = a3 | a0\n 17714: t0 = 526, jump @801\n      : @476 [@dyn 263] (gas: 1)\n 17720: jump @499 if a0 == 0\n      : @477 (gas: 9)\n 17724: i32 a0 = a1 + 0x4\n 17727: u64 [s1 + 824] = 0\n 17731: u64 [s1 + 816] = 0\n 17735: u64 [s1 + 800] = 0x20\n 17740: a1 = s1 + 0x320\n 17744: u64 [s1 + 808] = 0\n 17748: u64 [s1 + 0x148] = a3\n 17752: u64 [s1 + 0x140] = a4\n 17756: ra = 528, jump @4\n      : @478 [@dyn 264] (gas: 1)\n 17762: t0 = 530, jump @802\n      : @479 [@dyn 265] (gas: 1)\n 17768: jump @499 if a0 == 0\n      : @480 (gas: 7)\n 17772: i32 a0 = a1 + 0x24\n 17775: u64 [s1 + 792] = 0\n 17779: u64 [s1 + 784] = 0\n 17783: u64 [s1 + 768] = 0x1b\n 17788: a1 = s1 + 0x300\n 17792: u64 [s1 + 776] = 0\n 17796: ra = 532, jump @4\n      : @481 [@dyn 266] (gas: 1)\n 17802: t0 = 534, jump @814\n      : @482 [@dyn 267] (gas: 1)\n 17808: jump @499 if a0 == 0\n      : @483 (gas: 12)\n 17812: i32 a0 = a2 + 0x44\n 17815: a1 = u64 [0x200b8]\n 17820: a2 = u64 [0x20140]\n 17825: a3 = u64 [0x20148]\n 17830: a4 = s1 + 0x200\n 17834: u64 [a4 + 0xf8] = a1\n 17838: u64 [a4 + 0xf0] = a2\n 17842: u64 [a4 + 0xe8] = a3\n 17846: a2 = 0x7a65640000000000\n 17856: a1 = s1 + 0x2e0\n 17860: u64 [a4 + 0xe0] = a2\n 17864: ra = 536, jump @4\n      : @484 [@dyn 268] (gas: 3)\n 17870: a1 = 0x64\n 17873: a0 = u64 [s1 + 0x158]\n 17877: ra = 538, jump @14\n      : @485 [@dyn 269] (gas: 1)\n 17883: t0 = 540, jump @818\n      : @486 [@dyn 270] (gas: 2)\n 17889: ecalli 8 // 'seal_return'\n 17891: fallthrough\n      : @487 (gas: 11)\n 17892: u64 [a2 + 840] = 0\n 17896: a0 = u64 [s1 + 0x158]\n 17900: a3 = a2 + 0x300\n 17904: u64 [a3 + 0x30] = a0\n 17907: a0 = u64 [s1 + 0x148]\n 17911: u64 [a3 + 0x38] = a0\n 17914: a1 = s1 + 0x1420\n 17918: a0 = u64 [s1 + 0x140]\n 17922: u64 [a3 + 0x40] = a0\n 17925: a0 = 0\n 17927: ra = 542, jump @4\n      : @488 [@dyn 271] (gas: 8)\n 17933: a2 = s1 + 0x10f0\n 17937: u64 [a2 + 808] = 0\n 17941: u64 [a2 + 800] = 0\n 17945: u64 [a2 + 784] = 0x1\n 17950: a0 = 0x20\n 17953: a1 = s1 + 0x1400\n 17957: u64 [a2 + 792] = 0\n 17961: ra = 544, jump @4\n      : @489 [@dyn 272] (gas: 7)\n 17967: a0 = sp + 0xffffffffffffffe0\n 17970: a0 = a0 & 0xffffffffffffffe0\n 17973: u64 [s1 + 0x150] = a0\n 17977: sp = a0\n 17979: a1 = 0x40\n 17982: a0 = 0\n 17984: ra = 546, jump @14\n      : @490 [@dyn 273] (gas: 1)\n 17990: t0 = 548, jump @812\n      : @491 [@dyn 274] (gas: 4)\n 17996: ra = 0x226\n 18000: ecalli 6 // 'hash_keccak_256'\n 18002: t0 = 0x228\n 18006: jump @808\n      : @492 [@dyn 275] (gas: 1)\n 18009: t0 = 552, jump @808\n      : @493 [@dyn 276] (gas: 2)\n 18015: a0 = s1 + 0x13e0\n 18019: ra = 554, jump @6\n      : @494 [@dyn 277] (gas: 15)\n 18025: a3 = s1 + 0x10f0\n 18029: a0 = u64 [a3 + 0x2f0]\n 18033: a1 = u64 [a3 + 0x308]\n 18037: a2 = u64 [a3 + 0x300]\n 18041: a3 = u64 [a3 + 0x2f8]\n 18045: a0 = a0 & 0xffffffffffffff00\n 18049: a4 = s1 + 0x28f8\n 18053: a5 = a4 + 0x400\n 18057: u64 [a5 + 0x40] = a1\n 18060: u64 [a5 + 0x38] = a2\n 18063: u64 [a5 + 0x30] = a3\n 18066: u64 [a5 + 0x28] = a0\n 18069: a1 = s1 + 0x2d20\n 18073: a0 = u64 [s1 + 0x150]\n 18077: ra = 556, jump @7\n      : @495 [@dyn 278] (gas: 3)\n 18083: a0 = s1 + 0x13c0\n 18087: a1 = 0x40\n 18090: ra = 558, jump @2\n      : @496 [@dyn 279] (gas: 15)\n 18096: a0 = s1 + 0x10f0\n 18100: a2 = a0 + 0x200\n 18104: a1 = u64 [a2 + 0xe8]\n 18108: u64 [s1 + 0x138] = a1\n 18112: a1 = u64 [a2 + 0xe0]\n 18116: u64 [s1 + 0x130] = a1\n 18120: a1 = u64 [a2 + 0xd8]\n 18124: u64 [s1 + 0x128] = a1\n 18128: a0 = u64 [a2 + 0xd0]\n 18132: u64 [s1 + 0x150] = a0\n 18136: a0 = s1 + 0x3000\n 18140: i32 a0 = a0 + 0xfffffffffffffd40\n 18144: ra = 0x230\n 18148: ecalli 7 // 'now'\n 18150: fallthrough\n      : @497 [@dyn 280] (gas: 8)\n 18151: a3 = s1 + 0x100\n 18155: a0 = u64 [a3 + 0x38]\n 18158: a1 = u64 [a3 + 0x28]\n 18161: a0 = a0 | a1\n 18164: a1 = u64 [a3 + 0x50]\n 18167: a5 = a1\n 18169: a2 = u64 [a3 + 0x30]\n 18172: t0 = 562, jump @828\n      : @498 [@dyn 281] (gas: 1)\n 18178: jump @516 if a0 == 0\n      : @499 (gas: 1)\n 18182: trap\n      : @500 (gas: 4)\n 18183: a0 = 0\n 18185: a1 = 0\n 18187: ra = 0x234\n 18191: jump @14\n      : @501 (gas: 2)\n 18194: a1 = 0\n 18196: ra = 564, jump @14\n      : @502 [@dyn 282] (gas: 3)\n 18202: i32 a1 = a0 + 0\n 18204: a0 = 0x1\n 18207: jump @504\n      : @503 (gas: 4)\n 18209: a1 = 0x20260\n 18214: i32 a1 = a1 + 0\n 18216: a0 = 0x1\n 18219: fallthrough\n      : @504 (gas: 5)\n 18220: a2 = 0\n 18222: ecalli 8 // 'seal_return'\n 18224: a0 = 0\n 18226: ra = 0x234\n 18230: jump @14\n      : @505 (gas: 3)\n 18233: a0 = 0\n 18235: ra = 0x234\n 18239: jump @14\n      : @506 (gas: 16)\n 18242: a0 = t0 >> 0x20\n 18245: a0 = a0 << 0x20\n 18248: a1 = u64 [s1 + 0x118]\n 18252: a0 = a0 | a1\n 18255: a1 = u64 [s1 + 0x110]\n 18259: a2 = u64 [s1 + 0x108]\n 18263: a1 = a1 | a2\n 18266: a2 = s1 + 0x28f8\n 18270: a5 = a2 + 0x600\n 18274: u64 [a5 + 0xc8] = a3\n 18278: u64 [a5 + 0xd0] = a4\n 18282: u64 [a5 + 0xe0] = a1\n 18286: u64 [a5 + 0xd8] = a0\n 18290: a1 = s1 + 0x2fc0\n 18294: a0 = u64 [s1 + 0x150]\n 18298: ra = 566, jump @7\n      : @507 [@dyn 283] (gas: 11)\n 18304: a0 = s1 + 0x28f8\n 18308: u64 [a0 + 192] = 0\n 18312: a1 = u64 [s1 + 0x128]\n 18316: u64 [a0 + 0xb8] = a1\n 18320: a1 = u64 [s1 + 0x138]\n 18324: u64 [a0 + 0xb0] = a1\n 18328: a1 = s1 + 0x29a0\n 18332: a2 = u64 [s1 + 0x130]\n 18336: u64 [a0 + 0xa8] = a2\n 18340: a0 = 0\n 18342: ra = 568, jump @4\n      : @508 [@dyn 284] (gas: 8)\n 18348: a2 = s1 + 0x28f8\n 18352: u64 [a2 + 160] = 0\n 18356: u64 [a2 + 152] = 0\n 18360: u64 [a2 + 136] = 0x1\n 18365: a0 = 0x20\n 18368: a1 = s1 + 0x2980\n 18372: u64 [a2 + 144] = 0\n 18376: ra = 570, jump @4\n      : @509 [@dyn 285] (gas: 7)\n 18382: a0 = sp + 0xffffffffffffffe0\n 18385: a0 = a0 & 0xffffffffffffffe0\n 18388: u64 [s1 + 0x158] = a0\n 18392: sp = a0\n 18394: a1 = 0x40\n 18397: a0 = 0\n 18399: ra = 572, jump @14\n      : @510 [@dyn 286] (gas: 1)\n 18405: t0 = 574, jump @811\n      : @511 [@dyn 287] (gas: 5)\n 18411: ra = 0x240\n 18415: ecalli 6 // 'hash_keccak_256'\n 18417: a3 = u64 [s1 + 0x150]\n 18421: t0 = 0x242\n 18425: jump @823\n      : @512 [@dyn 288] (gas: 2)\n 18428: a3 = u64 [s1 + 0x150]\n 18432: t0 = 578, jump @823\n      : @513 [@dyn 289] (gas: 7)\n 18438: a1 = u64 [s1 + 0x158]\n 18442: u64 [a1 + 0x18] = a3\n 18445: u64 [a1 + 0x10] = a2\n 18448: u64 [a1 + 0x8] = a4\n 18451: u64 [a1] = a0\n 18453: a0 = s1 + 0x2960\n 18457: ra = 580, jump @6\n      : @514 [@dyn 290] (gas: 15)\n 18463: a4 = s1 + 0x28f8\n 18467: a0 = u64 [a4 + 0x68]\n 18470: a1 = u64 [a4 + 0x70]\n 18473: a2 = u64 [a4 + 0x80]\n 18477: a3 = u64 [a4 + 0x78]\n 18480: a0 = a0 & 0xffffffffffffff00\n 18484: a0 = a0 | 0x1\n 18487: u64 [a4 + 0x700] = a2\n 18491: a2 = a4 + 0x600\n 18495: u64 [a2 + 0xf8] = a3\n 18499: u64 [a2 + 0xf0] = a1\n 18503: u64 [a2 + 0xe8] = a0\n 18507: a1 = s1 + 0x2fe0\n 18511: a0 = u64 [s1 + 0x158]\n 18515: ra = 582, jump @7\n      : @515 [@dyn 291] (gas: 1)\n 18521: jump @518\n      : @516 (gas: 15)\n 18524: a3 = s1 + 0x28f8\n 18528: a4 = a3 + 0x400\n 18532: a0 = u64 [a4 + 0x48]\n 18535: a1 = u64 [a4 + 0x50]\n 18538: a2 = u64 [a4 + 0x58]\n 18541: a3 = u64 [a4 + 0x60]\n 18544: a4 = s1 + 0x10f0\n 18548: u64 [a4 + 0x2c8] = a3\n 18552: a3 = a4 + 0x200\n 18556: u64 [a3 + 0xc0] = a2\n 18560: u64 [a3 + 0xb8] = a1\n 18564: a1 = s1 + 0x13a0\n 18568: u64 [a3 + 0xb0] = a0\n 18572: a0 = a5\n 18574: ra = 584, jump @4\n      : @517 [@dyn 292] (gas: 23)\n 18580: a2 = s1 + 0x100\n 18584: a0 = u64 [a2 + 0x40]\n 18587: a4 = s1 + 0x10f0\n 18591: a5 = a4 + 0x200\n 18595: u64 [a5 + 0x80] = a0\n 18599: a0 = u64 [a2 + 0x48]\n 18602: u64 [a5 + 0x78] = a0\n 18605: a0 = u64 [a2 + 0x58]\n 18608: u64 [a5 + 0x70] = a0\n 18611: a0 = u64 [0x20098]\n 18616: a1 = u64 [0x200a0]\n 18621: a2 = u64 [0x200a8]\n 18626: a3 = u64 [0x200b0]\n 18631: u64 [a5 + 0xa8] = a0\n 18635: u64 [a5 + 0xa0] = a1\n 18639: u64 [a5 + 0x98] = a2\n 18643: u64 [a5 + 0x90] = a3\n 18647: a1 = 0x20\n 18650: a2 = s1 + 0x1380\n 18654: a3 = s1 + 0x1360\n 18658: u64 [a4 + 648] = 0\n 18662: a0 = u64 [s1 + 0x150]\n 18666: ra = 586, jump @8\n      : @518 [@dyn 293] (gas: 3)\n 18672: a0 = 0\n 18674: a1 = 0\n 18676: ra = 588, jump @14\n      : @519 [@dyn 294] (gas: 3)\n 18682: i32 a1 = a0 + 0\n 18684: a0 = 0\n 18686: jump @504\n      : @520 [@dyn 295] (gas: 1)\n 18689: jump @523 if a0 == 0\n      : @521 (gas: 1)\n 18692: t0 = 592, jump @810\n      : @522 [@dyn 296] (gas: 1)\n 18698: ret\n      : @523 (gas: 3)\n 18700: a0 = sp + 0xa0\n 18704: a1 = 0x40\n 18707: ra = 594, jump @2\n      : @524 [@dyn 297] (gas: 1)\n 18713: t0 = 596, jump @794\n      : @525 [@dyn 298] (gas: 1)\n 18719: jump @537 if a0 != 0\n      : @526 (gas: 1)\n 18722: t0 = 598, jump @798\n      : @527 [@dyn 299] (gas: 1)\n 18728: ra = 600, jump @4\n      : @528 [@dyn 300] (gas: 1)\n 18734: t0 = 602, jump @793\n      : @529 [@dyn 301] (gas: 1)\n 18740: jump @537 if a0 == 0\n      : @530 (gas: 1)\n 18743: t0 = 604, jump @803\n      : @531 [@dyn 302] (gas: 1)\n 18749: ra = 606, jump @4\n      : @532 [@dyn 303] (gas: 1)\n 18755: t0 = 608, jump @797\n      : @533 [@dyn 304] (gas: 1)\n 18761: jump @537 if a0 == 0\n      : @534 (gas: 8)\n 18764: s1 = u64 [sp + 0x18]\n 18767: i32 a0 = s1 + 0x24\n 18770: u64 [sp + 88] = 0\n 18773: u64 [sp + 80] = 0\n 18776: u64 [sp + 64] = 0x1a\n 18780: a1 = sp + 0x40\n 18783: u64 [sp + 72] = 0\n 18786: ra = 610, jump @4\n      : @535 [@dyn 305] (gas: 1)\n 18792: t0 = 612, jump @796\n      : @536 [@dyn 306] (gas: 1)\n 18798: jump @538 if a0 != 0\n      : @537 (gas: 1)\n 18801: trap\n      : @538 (gas: 12)\n 18802: s1 = u64 [sp + 0x18]\n 18805: i32 a0 = s1 + 0x44\n 18808: a1 = u64 [0x20180]\n 18813: a2 = u64 [0x20188]\n 18818: a3 = u64 [0x20190]\n 18823: u64 [sp + 0x38] = a1\n 18826: u64 [sp + 0x30] = a2\n 18829: u64 [sp + 0x28] = a3\n 18832: a2 = 0x6c79000000000000\n 18842: a1 = sp + 0x20\n 18845: u64 [sp + 0x20] = a2\n 18848: ra = 614, jump @4\n      : @539 [@dyn 307] (gas: 3)\n 18854: a1 = 0x64\n 18857: a0 = s1\n 18859: ra = 616, jump @14\n      : @540 [@dyn 308] (gas: 1)\n 18865: t0 = 618, jump @818\n      : @541 [@dyn 309] (gas: 4)\n 18871: ra = 0x26c\n 18875: ecalli 8 // 'seal_return'\n 18877: t0 = 0x26e\n 18881: jump @795\n      : @542 [@dyn 310] (gas: 1)\n 18884: t0 = 622, jump @795\n      : @543 [@dyn 311] (gas: 1)\n 18890: jump @546 if a0 == 0\n      : @544 (gas: 1)\n 18893: t0 = 624, jump @810\n      : @545 [@dyn 312] (gas: 1)\n 18899: ret\n      : @546 (gas: 3)\n 18901: a0 = sp + 0xa0\n 18905: a1 = 0x40\n 18908: ra = 626, jump @2\n      : @547 [@dyn 313] (gas: 1)\n 18914: t0 = 628, jump @794\n      : @548 [@dyn 314] (gas: 1)\n 18920: jump @561 if a0 != 0\n      : @549 (gas: 1)\n 18923: t0 = 630, jump @798\n      : @550 [@dyn 315] (gas: 1)\n 18929: ra = 632, jump @4\n      : @551 [@dyn 316] (gas: 1)\n 18935: t0 = 634, jump @793\n      : @552 [@dyn 317] (gas: 1)\n 18941: jump @561 if a0 == 0\n      : @553 (gas: 1)\n 18944: t0 = 636, jump @803\n      : @554 [@dyn 318] (gas: 1)\n 18950: ra = 638, jump @4\n      : @555 [@dyn 319] (gas: 1)\n 18956: t0 = 640, jump @797\n      : @556 [@dyn 320] (gas: 1)\n 18962: jump @561 if a0 == 0\n      : @557 (gas: 1)\n 18965: t0 = 642, jump @817\n      : @558 [@dyn 321] (gas: 1)\n 18971: ra = 644, jump @4\n      : @559 [@dyn 322] (gas: 1)\n 18977: t0 = 646, jump @796\n      : @560 [@dyn 323] (gas: 1)\n 18983: jump @562 if a0 != 0\n      : @561 (gas: 1)\n 18986: trap\n      : @562 (gas: 12)\n 18987: s1 = u64 [sp + 0x18]\n 18990: i32 a0 = s1 + 0x44\n 18993: a1 = u64 [0x20198]\n 18998: a2 = u64 [0x201a0]\n 19003: a3 = u64 [0x201a8]\n 19008: u64 [sp + 0x38] = a1\n 19011: u64 [sp + 0x30] = a2\n 19014: u64 [sp + 0x28] = a3\n 19017: a2 = 0x206f6e6c79000000\n 19027: a1 = sp + 0x20\n 19030: u64 [sp + 0x20] = a2\n 19033: ra = 648, jump @4\n      : @563 [@dyn 324] (gas: 3)\n 19039: a1 = 0x64\n 19042: a0 = s1\n 19044: ra = 650, jump @14\n      : @564 [@dyn 325] (gas: 1)\n 19050: t0 = 652, jump @818\n      : @565 [@dyn 326] (gas: 4)\n 19056: ra = 0x28e\n 19060: ecalli 8 // 'seal_return'\n 19062: t0 = 0x290\n 19066: jump @795\n      : @566 [@dyn 327] (gas: 1)\n 19069: t0 = 656, jump @795\n      : @567 [@dyn 328] (gas: 1)\n 19075: jump @570 if a0 == 0\n      : @568 (gas: 1)\n 19078: t0 = 658, jump @810\n      : @569 [@dyn 329] (gas: 1)\n 19084: ret\n      : @570 (gas: 3)\n 19086: a0 = sp + 0xa0\n 19090: a1 = 0x40\n 19093: ra = 660, jump @2\n      : @571 [@dyn 330] (gas: 1)\n 19099: t0 = 662, jump @794\n      : @572 [@dyn 331] (gas: 1)\n 19105: jump @585 if a0 != 0\n      : @573 (gas: 1)\n 19108: t0 = 664, jump @798\n      : @574 [@dyn 332] (gas: 1)\n 19114: ra = 666, jump @4\n      : @575 [@dyn 333] (gas: 1)\n 19120: t0 = 668, jump @793\n      : @576 [@dyn 334] (gas: 1)\n 19126: jump @585 if a0 == 0\n      : @577 (gas: 1)\n 19129: t0 = 670, jump @803\n      : @578 [@dyn 335] (gas: 1)\n 19135: ra = 672, jump @4\n      : @579 [@dyn 336] (gas: 1)\n 19141: t0 = 674, jump @797\n      : @580 [@dyn 337] (gas: 1)\n 19147: jump @585 if a0 == 0\n      : @581 (gas: 1)\n 19150: t0 = 676, jump @817\n      : @582 [@dyn 338] (gas: 1)\n 19156: ra = 678, jump @4\n      : @583 [@dyn 339] (gas: 1)\n 19162: t0 = 680, jump @796\n      : @584 [@dyn 340] (gas: 1)\n 19168: jump @586 if a0 != 0\n      : @585 (gas: 1)\n 19171: trap\n      : @586 (gas: 12)\n 19172: s1 = u64 [sp + 0x18]\n 19175: i32 a0 = s1 + 0x44\n 19178: a1 = u64 [0x201b0]\n 19183: a2 = u64 [0x201b8]\n 19188: a3 = u64 [0x201c0]\n 19193: u64 [sp + 0x38] = a1\n 19196: u64 [sp + 0x30] = a2\n 19199: u64 [sp + 0x28] = a3\n 19202: a2 = 0x68616e2030000000\n 19212: a1 = sp + 0x20\n 19215: u64 [sp + 0x20] = a2\n 19218: ra = 682, jump @4\n      : @587 [@dyn 341] (gas: 3)\n 19224: a1 = 0x64\n 19227: a0 = s1\n 19229: ra = 684, jump @14\n      : @588 [@dyn 342] (gas: 1)\n 19235: t0 = 686, jump @818\n      : @589 [@dyn 343] (gas: 4)\n 19241: ra = 0x2b0\n 19245: ecalli 8 // 'seal_return'\n 19247: t0 = 0x2b2\n 19251: jump @795\n      : @590 [@dyn 344] (gas: 1)\n 19254: t0 = 690, jump @795\n      : @591 [@dyn 345] (gas: 1)\n 19260: jump @594 if a0 == 0\n      : @592 (gas: 1)\n 19263: t0 = 692, jump @810\n      : @593 [@dyn 346] (gas: 1)\n 19269: ret\n      : @594 (gas: 3)\n 19271: a0 = sp + 0xa0\n 19275: a1 = 0x40\n 19278: ra = 694, jump @2\n      : @595 [@dyn 347] (gas: 1)\n 19284: t0 = 696, jump @794\n      : @596 [@dyn 348] (gas: 1)\n 19290: jump @608 if a0 != 0\n      : @597 (gas: 1)\n 19293: t0 = 698, jump @798\n      : @598 [@dyn 349] (gas: 1)\n 19299: ra = 700, jump @4\n      : @599 [@dyn 350] (gas: 1)\n 19305: t0 = 702, jump @793\n      : @600 [@dyn 351] (gas: 1)\n 19311: jump @608 if a0 == 0\n      : @601 (gas: 1)\n 19314: t0 = 704, jump @803\n      : @602 [@dyn 352] (gas: 1)\n 19320: ra = 706, jump @4\n      : @603 [@dyn 353] (gas: 1)\n 19326: t0 = 708, jump @797\n      : @604 [@dyn 354] (gas: 1)\n 19332: jump @608 if a0 == 0\n      : @605 (gas: 8)\n 19335: s1 = u64 [sp + 0x18]\n 19338: i32 a0 = s1 + 0x24\n 19341: u64 [sp + 88] = 0\n 19344: u64 [sp + 80] = 0\n 19347: u64 [sp + 64] = 0x1c\n 19351: a1 = sp + 0x40\n 19354: u64 [sp + 72] = 0\n 19357: ra = 710, jump @4\n      : @606 [@dyn 355] (gas: 1)\n 19363: t0 = 712, jump @796\n      : @607 [@dyn 356] (gas: 1)\n 19369: jump @609 if a0 != 0\n      : @608 (gas: 1)\n 19372: trap\n      : @609 (gas: 12)\n 19373: s1 = u64 [sp + 0x18]\n 19376: i32 a0 = s1 + 0x44\n 19379: a1 = u64 [0x201c8]\n 19384: a2 = u64 [0x201d0]\n 19389: a3 = u64 [0x201d8]\n 19394: u64 [sp + 0x38] = a1\n 19397: u64 [sp + 0x30] = a2\n 19400: u64 [sp + 0x28] = a3\n 19403: a2 = 0x616e203000000000\n 19413: a1 = sp + 0x20\n 19416: u64 [sp + 0x20] = a2\n 19419: ra = 714, jump @4\n      : @610 [@dyn 357] (gas: 3)\n 19425: a1 = 0x64\n 19428: a0 = s1\n 19430: ra = 716, jump @14\n      : @611 [@dyn 358] (gas: 1)\n 19436: t0 = 718, jump @818\n      : @612 [@dyn 359] (gas: 4)\n 19442: ra = 0x2d0\n 19446: ecalli 8 // 'seal_return'\n 19448: t0 = 0x2d2\n 19452: jump @809\n      : @613 [@dyn 360] (gas: 1)\n 19455: t0 = 722, jump @809\n      : @614 [@dyn 361] (gas: 1)\n 19461: jump @620 if a3 != 0\n      : @615 (gas: 1)\n 19465: t0 = 724, jump @826\n      : @616 [@dyn 362] (gas: 2)\n 19471: ecalli 1 // 'call_data_load'\n 19473: fallthrough\n      : @617 (gas: 46)\n 19474: ra = u64 [sp + 0x18]\n 19477: t2 = u64 [sp + 0x20]\n 19480: a2 = u32 [0x20248]\n 19485: t0 = u64 [sp + 0x58]\n 19488: t1 = u64 [sp + 0x50]\n 19491: a1 = u64 [sp + 0x38]\n 19494: a3 = a2 <u a1\n 19497: a4 = s1 >u 0\n 19499: a4 = a3 if s1 == 0\n 19502: a0 = -ra\n 19504: u64 [sp + 0x28] = s1\n 19507: a5 = s1 + a3\n 19510: s1 = -a5\n 19512: a2 = a2 - a1\n 19515: a3 = a2 + 0xffffffffffffffc1\n 19518: a2 = a3 <u a2\n 19521: a5 = a5 ^ 0xffffffffffffffff\n 19524: a5 = a5 + a2\n 19527: a1 = a5 ^ s1\n 19530: s1 = a5 <u s1\n 19533: s1 = a2 if a1 == 0\n 19536: a1 = a0 <u a4\n 19539: a2 = ra >u 0\n 19541: a2 = a2 + t2\n 19544: a1 = a1 + a2\n 19547: a2 = u64 [sp + 0x48]\n 19550: a0 = a0 - a4\n 19553: a4 = a0 <u 0x1\n 19556: a1 = a1 + a4\n 19559: a4 = u64 [sp + 0x40]\n 19562: a0 = a0 + 0xffffffffffffffff\n 19565: s1 = s1 + a0\n 19568: a0 = s1 <u a0\n 19571: a0 = a0 - a1\n 19574: a1 = a2 ^ a5\n 19577: a5 = a2 <u a5\n 19580: a3 = a4 <u a3\n 19583: a3 = a5 if a1 != 0\n 19586: a1 = t1 <u s1\n 19589: a5 = t0 ^ a0\n 19592: a0 = t0 <s a0\n 19595: a0 = a1 if a5 == 0\n 19598: a1 = t1 ^ s1\n 19601: a1 = a1 | a5\n 19604: a3 = a0 if a1 != 0\n 19607: jump @621 if a3 == 0\n      : @618 (gas: 16)\n 19610: a0 = u64 [sp + 0x38]\n 19613: a0 = a0 + a4\n 19616: a1 = a0 <u a4\n 19619: a3 = u64 [sp + 0x28]\n 19622: a3 = a3 + a2\n 19625: a3 = a3 + a1\n 19628: a4 = a3 ^ a2\n 19631: a2 = a3 <u a2\n 19634: a2 = a1 if a4 == 0\n 19637: a1 = t1 + ra\n 19640: a2 = a2 + a1\n 19643: a4 = a2 <u a1\n 19646: a1 = a1 <u t1\n 19649: t0 = t0 + t2\n 19652: a1 = a1 + t0\n 19655: t0 = 726, jump @819\n      : @619 [@dyn 363] (gas: 1)\n 19661: ret\n      : @620 (gas: 1)\n 19663: trap\n      : @621 (gas: 7)\n 19664: a1 = 0x20260\n 19669: i32 a1 = a1 + 0\n 19671: a0 = 0x1\n 19674: a2 = 0\n 19676: ra = 0x2d8\n 19680: ecalli 8 // 'seal_return'\n 19682: fallthrough\n      : @622 [@dyn 364] (gas: 19)\n 19683: sp = sp + 0xffffffffffffff60\n 19687: u64 [sp + 0x98] = ra\n 19691: u64 [sp + 0x90] = s0\n 19695: u64 [sp + 0x88] = s1\n 19699: s0 = sp + 0xa0\n 19703: sp = sp & 0xffffffffffffffe0\n 19706: a3 = u64 [a2 + 0x10]\n 19709: a4 = u64 [a2 + 0x18]\n 19712: a5 = u64 [a2 + 0x8]\n 19715: a2 = u64 [a2]\n 19717: a4 = a4 | a5\n 19720: a5 = a2 | a3\n 19723: a5 = a5 | a4\n 19726: a5 = a5 >> 0x20\n 19729: a3 = a3 | a4\n 19732: a3 = a3 << 0x20\n 19735: a3 = a3 | a5\n 19738: u64 [sp + 0x20] = a0\n 19741: jump @630 if a3 != 0\n      : @623 (gas: 11)\n 19745: a0 = u64 [a1 + 0x18]\n 19748: u64 [sp + 0x38] = a0\n 19751: a0 = u64 [a1 + 0x10]\n 19754: u64 [sp + 0x30] = a0\n 19757: s1 = u64 [a1 + 0x8]\n 19760: a0 = u64 [a1]\n 19762: u64 [sp + 0x28] = a0\n 19765: i32 a1 = a2 + 0\n 19767: i32 a0 = sp + 0x40\n 19770: ecalli 1 // 'call_data_load'\n 19772: fallthrough\n      : @624 (gas: 51)\n 19773: a0 = 0x20248\n 19778: u64 [sp + 0x8] = a0\n 19781: a2 = u32 [0x20248]\n 19786: a0 = u64 [sp + 0x58]\n 19789: u64 [sp + 0x10] = a0\n 19792: t1 = u64 [sp + 0x50]\n 19795: a1 = u64 [sp + 0x28]\n 19798: a3 = a2 <u a1\n 19801: a4 = s1 >u 0\n 19803: a4 = a3 if s1 == 0\n 19806: t0 = u64 [sp + 0x30]\n 19809: t2 = -t0\n 19811: u64 [sp + 0x18] = s1\n 19814: a5 = s1 + a3\n 19817: a0 = -a5\n 19819: a2 = a2 - a1\n 19822: a3 = a2 + 0xffffffffffffffe1\n 19825: a2 = a3 <u a2\n 19828: a5 = a5 ^ 0xffffffffffffffff\n 19831: a5 = a5 + a2\n 19834: a1 = a5 ^ a0\n 19837: a0 = a5 <u a0\n 19840: a0 = a2 if a1 == 0\n 19843: a1 = t2 <u a4\n 19846: a2 = t0\n 19848: t0 = u64 [sp + 0x10]\n 19851: a2 = a2 >u 0\n 19853: s1 = u64 [sp + 0x38]\n 19856: a2 = a2 + s1\n 19859: a1 = a1 + a2\n 19862: a2 = u64 [sp + 0x48]\n 19865: s1 = t2 - a4\n 19868: a4 = s1 <u 0x1\n 19871: a1 = a1 + a4\n 19874: a4 = u64 [sp + 0x40]\n 19877: s1 = s1 + 0xffffffffffffffff\n 19880: a0 = a0 + s1\n 19883: s1 = a0 <u s1\n 19886: s1 = s1 - a1\n 19889: a1 = a2 ^ a5\n 19892: a5 = a2 <u a5\n 19895: a3 = a4 <u a3\n 19898: a3 = a5 if a1 != 0\n 19901: a1 = t1 <u a0\n 19904: a5 = t0 ^ s1\n 19907: s1 = t0 <s s1\n 19910: s1 = a1 if a5 == 0\n 19913: a0 = t1 ^ a0\n 19916: a0 = a0 | a5\n 19919: a3 = s1 if a0 != 0\n 19922: jump @631 if a3 == 0\n      : @625 (gas: 28)\n 19926: a0 = u64 [sp + 0x28]\n 19929: a5 = a4 + a0\n 19932: a0 = a5 <u a4\n 19935: s1 = u64 [sp + 0x18]\n 19938: s1 = s1 + a2\n 19941: s1 = s1 + a0\n 19944: a1 = s1 ^ a2\n 19947: a2 = s1 <u a2\n 19950: a2 = a0 if a1 == 0\n 19953: a0 = u64 [sp + 0x30]\n 19956: a0 = a0 + t1\n 19959: a3 = a0 + a2\n 19962: a1 = a3 <u a0\n 19965: a0 = a0 <u t1\n 19968: a2 = u64 [sp + 0x38]\n 19971: t0 = t0 + a2\n 19974: a0 = a0 + t0\n 19977: a1 = a1 + a0\n 19980: a0 = a5 | a3\n 19983: u64 [sp + 0x30] = a1\n 19986: a1 = a1 | s1\n 19989: a0 = a0 | a1\n 19992: a0 = a0 >> 0x20\n 19995: u64 [sp + 0x38] = a3\n 19998: a1 = a1 | a3\n 20001: a1 = a1 << 0x20\n 20004: a0 = a0 | a1\n 20007: jump @630 if a0 != 0\n      : @626 (gas: 5)\n 20011: u64 [sp + 0x28] = a5\n 20014: i32 a1 = a5 + 0\n 20016: i32 a0 = sp + 0x60\n 20019: ecalli 1 // 'call_data_load'\n 20021: fallthrough\n      : @627 (gas: 7)\n 20022: ra = u64 [sp + 0x78]\n 20025: a2 = u64 [sp + 0x70]\n 20028: a5 = u64 [sp + 0x68]\n 20031: a0 = a2 | ra\n 20034: a3 = a5 <u 0x1\n 20037: a3 = 0 if a0 != 0\n 20039: jump @632 if a3 == 0\n      : @628 (gas: 51)\n 20043: t1 = u64 [sp + 0x60]\n 20046: a0 = u64 [sp + 0x28]\n 20049: a1 = a0 + 0x20\n 20052: u64 [sp + 0x18] = a1\n 20055: a0 = a1 <u a0\n 20058: a1 = s1 + a0\n 20061: u64 [sp + 0x10] = a1\n 20064: a3 = a1 <u s1\n 20067: a3 = a0 if a0 == 0\n 20070: a0 = u64 [sp + 0x8]\n 20073: s1 = u32 [a0]\n 20075: a0 = u64 [sp + 0x38]\n 20078: a3 = a3 + a0\n 20081: a0 = a3 <u a0\n 20084: a1 = u64 [sp + 0x30]\n 20087: a0 = a0 + a1\n 20090: u64 [sp + 0x8] = a0\n 20093: a4 = s1 <u t1\n 20096: a1 = a5 >u 0\n 20098: a1 = a4 if a5 == 0\n 20101: t0 = -a2\n 20103: a0 = t0 <u a1\n 20106: u64 [sp + 0x28] = a0\n 20109: u64 [sp + 0x30] = a2\n 20112: t2 = a2 >u 0\n 20114: u64 [sp + 0x38] = ra\n 20117: t2 = t2 + ra\n 20120: ra = u64 [sp + 0x8]\n 20123: a0 = -t2\n 20125: a2 = u64 [sp + 0x28]\n 20128: a0 = a0 - a2\n 20131: a2 = u64 [sp + 0x10]\n 20134: a1 = t0 - a1\n 20137: u64 [sp + 0x28] = t1\n 20140: t2 = s1 - t1\n 20143: t1 = a5\n 20145: s1 = -a5\n 20147: s1 = s1 - a4\n 20150: a4 = a2 ^ s1\n 20153: s1 = s1 <u a2\n 20156: t0 = u64 [sp + 0x18]\n 20159: a5 = t2 <u t0\n 20162: a5 = s1 if a4 != 0\n 20165: a4 = a1 <u a3\n 20168: s1 = ra ^ a0\n 20171: a0 = a0 <s ra\n 20174: a0 = a4 if s1 == 0\n 20177: a1 = a1 ^ a3\n 20180: a1 = a1 | s1\n 20183: a5 = a0 if a1 != 0\n 20186: jump @633 if a5 != 0\n      : @629 (gas: 18)\n 20189: a0 = u64 [sp + 0x20]\n 20192: a1 = u64 [sp + 0x28]\n 20195: u64 [a0 + 0x20] = a1\n 20198: u64 [a0] = t0\n 20200: u64 [a0 + 0x28] = t1\n 20203: u64 [a0 + 0x8] = a2\n 20206: a1 = u64 [sp + 0x30]\n 20209: u64 [a0 + 0x30] = a1\n 20212: u64 [a0 + 0x10] = a3\n 20215: a1 = u64 [sp + 0x38]\n 20218: u64 [a0 + 0x38] = a1\n 20221: u64 [a0 + 0x18] = ra\n 20224: sp = s0 + 0xffffffffffffff60\n 20228: ra = u64 [sp + 0x98]\n 20232: s0 = u64 [sp + 0x90]\n 20236: s1 = u64 [sp + 0x88]\n 20240: sp = sp + 0xa0\n 20244: ret\n      : @630 (gas: 1)\n 20246: trap\n      : @631 (gas: 2)\n 20247: a1 = 0x20260\n 20252: jump @634\n      : @632 (gas: 2)\n 20254: a1 = 0x20260\n 20259: jump @634\n      : @633 (gas: 2)\n 20261: a1 = 0x20260\n 20266: fallthrough\n      : @634 (gas: 7)\n 20267: i32 a1 = a1 + 0\n 20269: a0 = 0x1\n 20272: a2 = 0\n 20274: ra = 0x2da\n 20278: ecalli 8 // 'seal_return'\n 20280: t0 = 0x2dc\n 20284: jump @795\n      : @635 [@dyn 365] (gas: 1)\n 20287: t0 = 732, jump @795\n      : @636 [@dyn 366] (gas: 1)\n 20293: jump @639 if a0 == 0\n      : @637 (gas: 1)\n 20296: t0 = 734, jump @810\n      : @638 [@dyn 367] (gas: 1)\n 20302: ret\n      : @639 (gas: 3)\n 20304: a0 = sp + 0xa0\n 20308: a1 = 0x40\n 20311: ra = 736, jump @2\n      : @640 [@dyn 368] (gas: 1)\n 20317: t0 = 738, jump @794\n      : @641 [@dyn 369] (gas: 1)\n 20323: jump @653 if a0 != 0\n      : @642 (gas: 1)\n 20326: t0 = 740, jump @798\n      : @643 [@dyn 370] (gas: 1)\n 20332: ra = 742, jump @4\n      : @644 [@dyn 371] (gas: 1)\n 20338: t0 = 744, jump @793\n      : @645 [@dyn 372] (gas: 1)\n 20344: jump @653 if a0 == 0\n      : @646 (gas: 1)\n 20347: t0 = 746, jump @803\n      : @647 [@dyn 373] (gas: 1)\n 20353: ra = 748, jump @4\n      : @648 [@dyn 374] (gas: 1)\n 20359: t0 = 750, jump @797\n      : @649 [@dyn 375] (gas: 1)\n 20365: jump @653 if a0 == 0\n      : @650 (gas: 8)\n 20368: s1 = u64 [sp + 0x18]\n 20371: i32 a0 = s1 + 0x24\n 20374: u64 [sp + 88] = 0\n 20377: u64 [sp + 80] = 0\n 20380: u64 [sp + 64] = 0x18\n 20384: a1 = sp + 0x40\n 20387: u64 [sp + 72] = 0\n 20390: ra = 752, jump @4\n      : @651 [@dyn 376] (gas: 1)\n 20396: t0 = 754, jump @796\n      : @652 [@dyn 377] (gas: 1)\n 20402: jump @654 if a0 != 0\n      : @653 (gas: 1)\n 20405: trap\n      : @654 (gas: 11)\n 20406: s1 = u64 [sp + 0x18]\n 20409: i32 a0 = s1 + 0x44\n 20412: a1 = u64 [0x201e0]\n 20417: a2 = u64 [0x201e8]\n 20422: a3 = u64 [0x201f0]\n 20427: u64 [sp + 0x38] = a1\n 20430: u64 [sp + 0x30] = a2\n 20433: u64 [sp + 0x28] = a3\n 20436: a1 = sp + 0x20\n 20439: u64 [sp + 32] = 0\n 20442: ra = 756, jump @4\n      : @655 [@dyn 378] (gas: 3)\n 20448: a1 = 0x64\n 20451: a0 = s1\n 20453: ra = 758, jump @14\n      : @656 [@dyn 379] (gas: 1)\n 20459: t0 = 760, jump @818\n      : @657 [@dyn 380] (gas: 4)\n 20465: ra = 0x2fa\n 20469: ecalli 8 // 'seal_return'\n 20471: t0 = 0x2fc\n 20475: jump @795\n      : @658 [@dyn 381] (gas: 1)\n 20478: t0 = 764, jump @795\n      : @659 [@dyn 382] (gas: 1)\n 20484: jump @662 if a0 == 0\n      : @660 (gas: 1)\n 20487: t0 = 766, jump @810\n      : @661 [@dyn 383] (gas: 1)\n 20493: ret\n      : @662 (gas: 3)\n 20495: a0 = sp + 0xa0\n 20499: a1 = 0x40\n 20502: ra = 768, jump @2\n      : @663 [@dyn 384] (gas: 1)\n 20508: t0 = 770, jump @794\n      : @664 [@dyn 385] (gas: 1)\n 20514: jump @676 if a0 != 0\n      : @665 (gas: 1)\n 20517: t0 = 772, jump @798\n      : @666 [@dyn 386] (gas: 1)\n 20523: ra = 774, jump @4\n      : @667 [@dyn 387] (gas: 1)\n 20529: t0 = 776, jump @793\n      : @668 [@dyn 388] (gas: 1)\n 20535: jump @676 if a0 == 0\n      : @669 (gas: 1)\n 20538: t0 = 778, jump @803\n      : @670 [@dyn 389] (gas: 1)\n 20544: ra = 780, jump @4\n      : @671 [@dyn 390] (gas: 1)\n 20550: t0 = 782, jump @797\n      : @672 [@dyn 391] (gas: 1)\n 20556: jump @676 if a0 == 0\n      : @673 (gas: 8)\n 20559: s1 = u64 [sp + 0x18]\n 20562: i32 a0 = s1 + 0x24\n 20565: u64 [sp + 88] = 0\n 20568: u64 [sp + 80] = 0\n 20571: u64 [sp + 72] = 0\n 20574: a1 = sp + 0x40\n 20577: u64 [sp + 64] = 0x19\n 20581: ra = 784, jump @4\n      : @674 [@dyn 392] (gas: 1)\n 20587: t0 = 786, jump @796\n      : @675 [@dyn 393] (gas: 1)\n 20593: jump @677 if a0 != 0\n      : @676 (gas: 1)\n 20596: trap\n      : @677 (gas: 12)\n 20597: s1 = u64 [sp + 0x18]\n 20600: i32 a0 = s1 + 0x44\n 20603: a1 = u64 [0x201f8]\n 20608: a2 = u64 [0x20200]\n 20613: a3 = u64 [0x20208]\n 20618: u64 [sp + 0x38] = a1\n 20621: u64 [sp + 0x30] = a2\n 20624: u64 [sp + 0x28] = a3\n 20627: a2 = 0x6400000000000000\n 20637: a1 = sp + 0x20\n 20640: u64 [sp + 0x20] = a2\n 20643: ra = 788, jump @4\n      : @678 [@dyn 394] (gas: 3)\n 20649: a1 = 0x64\n 20652: a0 = s1\n 20654: ra = 790, jump @14\n      : @679 [@dyn 395] (gas: 1)\n 20660: t0 = 792, jump @818\n      : @680 [@dyn 396] (gas: 4)\n 20666: ra = 0x31a\n 20670: ecalli 8 // 'seal_return'\n 20672: t0 = 0x31c\n 20676: jump @795\n      : @681 [@dyn 397] (gas: 1)\n 20679: t0 = 796, jump @795\n      : @682 [@dyn 398] (gas: 1)\n 20685: jump @685 if a0 == 0\n      : @683 (gas: 1)\n 20688: t0 = 798, jump @810\n      : @684 [@dyn 399] (gas: 1)\n 20694: ret\n      : @685 (gas: 3)\n 20696: a0 = sp + 0xa0\n 20700: a1 = 0x40\n 20703: ra = 800, jump @2\n      : @686 [@dyn 400] (gas: 1)\n 20709: t0 = 802, jump @794\n      : @687 [@dyn 401] (gas: 1)\n 20715: jump @700 if a0 != 0\n      : @688 (gas: 1)\n 20718: t0 = 804, jump @798\n      : @689 [@dyn 402] (gas: 1)\n 20724: ra = 806, jump @4\n      : @690 [@dyn 403] (gas: 1)\n 20730: t0 = 808, jump @793\n      : @691 [@dyn 404] (gas: 1)\n 20736: jump @700 if a0 == 0\n      : @692 (gas: 1)\n 20739: t0 = 810, jump @803\n      : @693 [@dyn 405] (gas: 1)\n 20745: ra = 812, jump @4\n      : @694 [@dyn 406] (gas: 1)\n 20751: t0 = 814, jump @797\n      : @695 [@dyn 407] (gas: 1)\n 20757: jump @700 if a0 == 0\n      : @696 (gas: 1)\n 20760: t0 = 816, jump @817\n      : @697 [@dyn 408] (gas: 1)\n 20766: ra = 818, jump @4\n      : @698 [@dyn 409] (gas: 1)\n 20772: t0 = 820, jump @796\n      : @699 [@dyn 410] (gas: 1)\n 20778: jump @701 if a0 != 0\n      : @700 (gas: 1)\n 20781: trap\n      : @701 (gas: 12)\n 20782: s1 = u64 [sp + 0x18]\n 20785: i32 a0 = s1 + 0x44\n 20788: a1 = u64 [0x20210]\n 20793: a2 = u64 [0x20218]\n 20798: a3 = u64 [0x20220]\n 20803: u64 [sp + 0x38] = a1\n 20806: u64 [sp + 0x30] = a2\n 20809: u64 [sp + 0x28] = a3\n 20812: a2 = 0x7569726564000000\n 20822: a1 = sp + 0x20\n 20825: u64 [sp + 0x20] = a2\n 20828: ra = 822, jump @4\n      : @702 [@dyn 411] (gas: 3)\n 20834: a1 = 0x64\n 20837: a0 = s1\n 20839: ra = 824, jump @14\n      : @703 [@dyn 412] (gas: 1)\n 20845: t0 = 826, jump @818\n      : @704 [@dyn 413] (gas: 4)\n 20851: ra = 0x33c\n 20855: ecalli 8 // 'seal_return'\n 20857: t0 = 0x33e\n 20861: jump @795\n      : @705 [@dyn 414] (gas: 1)\n 20864: t0 = 830, jump @795\n      : @706 [@dyn 415] (gas: 1)\n 20870: jump @709 if a0 == 0\n      : @707 (gas: 1)\n 20873: t0 = 832, jump @810\n      : @708 [@dyn 416] (gas: 1)\n 20879: ret\n      : @709 (gas: 3)\n 20881: a0 = sp + 0xa0\n 20885: a1 = 0x40\n 20888: ra = 834, jump @2\n      : @710 [@dyn 417] (gas: 1)\n 20894: t0 = 836, jump @794\n      : @711 [@dyn 418] (gas: 1)\n 20900: jump @723 if a0 != 0\n      : @712 (gas: 1)\n 20903: t0 = 838, jump @798\n      : @713 [@dyn 419] (gas: 1)\n 20909: ra = 840, jump @4\n      : @714 [@dyn 420] (gas: 1)\n 20915: t0 = 842, jump @793\n      : @715 [@dyn 421] (gas: 1)\n 20921: jump @723 if a0 == 0\n      : @716 (gas: 1)\n 20924: t0 = 844, jump @803\n      : @717 [@dyn 422] (gas: 1)\n 20930: ra = 846, jump @4\n      : @718 [@dyn 423] (gas: 1)\n 20936: t0 = 848, jump @797\n      : @719 [@dyn 424] (gas: 1)\n 20942: jump @723 if a0 == 0\n      : @720 (gas: 8)\n 20945: s1 = u64 [sp + 0x18]\n 20948: i32 a0 = s1 + 0x24\n 20951: u64 [sp + 88] = 0\n 20954: u64 [sp + 80] = 0\n 20957: u64 [sp + 64] = 0x1e\n 20961: a1 = sp + 0x40\n 20964: u64 [sp + 72] = 0\n 20967: ra = 850, jump @4\n      : @721 [@dyn 425] (gas: 1)\n 20973: t0 = 852, jump @796\n      : @722 [@dyn 426] (gas: 1)\n 20979: jump @724 if a0 != 0\n      : @723 (gas: 1)\n 20982: trap\n      : @724 (gas: 12)\n 20983: s1 = u64 [sp + 0x18]\n 20986: i32 a0 = s1 + 0x44\n 20989: a1 = u64 [0x20228]\n 20994: u64 [sp + 0x38] = a1\n 20997: a1 = u64 [0x20230]\n 21002: a2 = u64 [0x20238]\n 21007: a3 = u64 [0x20240]\n 21012: u64 [sp + 0x30] = a1\n 21015: u64 [sp + 0x28] = a2\n 21018: a1 = sp + 0x20\n 21021: u64 [sp + 0x20] = a3\n 21024: ra = 854, jump @4\n      : @725 [@dyn 427] (gas: 3)\n 21030: a1 = 0x64\n 21033: a0 = s1\n 21035: ra = 856, jump @14\n      : @726 [@dyn 428] (gas: 1)\n 21041: t0 = 858, jump @818\n      : @727 [@dyn 429] (gas: 3)\n 21047: ra = 0x35c\n 21051: ecalli 8 // 'seal_return'\n 21053: fallthrough\n      : @728 [@dyn 430] (gas: 16)\n 21054: a2 = u64 [a1]\n 21056: t0 = u64 [a1 + 0x18]\n 21059: a3 = u64 [a1 + 0x8]\n 21062: a5 = u64 [a1 + 0x10]\n 21065: a4 = a2 + 0x1\n 21068: a2 = a4 <u 0x1\n 21071: a2 = a2 + a3\n 21074: a3 = a4 | a2\n 21077: a3 = a3 <u 0x1\n 21080: a3 = a3 + a5\n 21083: a5 = a3 <u a5\n 21086: a5 = a5 + t0\n 21089: t0 = a2 | a5\n 21092: a1 = a4 | a3\n 21095: a1 = a1 | t0\n 21098: jump @730 if a1 == 0\n      : @729 (gas: 5)\n 21101: u64 [a0] = a4\n 21103: u64 [a0 + 0x8] = a2\n 21106: u64 [a0 + 0x10] = a3\n 21109: u64 [a0 + 0x18] = a5\n 21112: ret\n      : @730 (gas: 6)\n 21114: sp = sp + 0xffffffffffffffb0\n 21117: u64 [sp + 0x48] = ra\n 21120: u64 [sp + 0x40] = s0\n 21123: s0 = sp + 0x50\n 21126: sp = sp & 0xfffffffffffffff0\n 21129: t0 = 862, jump @825\n      : @731 [@dyn 431] (gas: 1)\n 21135: ra = 864, jump @4\n      : @732 [@dyn 432] (gas: 7)\n 21141: u64 [sp + 24] = 0\n 21144: u64 [sp + 16] = 0\n 21147: u64 [sp + 0] = 0x11\n 21150: a0 = 0x4\n 21153: a1 = sp\n 21155: u64 [sp + 8] = 0\n 21158: ra = 866, jump @4\n      : @733 [@dyn 433] (gas: 2)\n 21164: a1 = i32 [0x2024c]\n 21169: jump @735 if a1 >u 63\n      : @734 (gas: 2)\n 21173: u32 [0x2024c] = 0x40\n 21179: fallthrough\n      : @735 (gas: 7)\n 21180: a1 = 0x20260\n 21185: i32 a1 = a1 + 0\n 21187: a0 = 0x1\n 21190: a2 = 0x24\n 21193: ra = 0x364\n 21197: ecalli 8 // 'seal_return'\n 21199: fallthrough\n      : @736 [@dyn 434] (gas: 19)\n 21200: sp = sp + 0xffffffffffffff90\n 21203: u64 [sp + 0x68] = ra\n 21206: u64 [sp + 0x60] = s0\n 21209: s0 = sp + 0x70\n 21212: sp = sp & 0xfffffffffffffff0\n 21215: a2 = u64 [a0 + 0x18]\n 21218: t1 = u64 [a0 + 0x10]\n 21221: t0 = u64 [a0]\n 21223: a5 = u64 [a0 + 0x8]\n 21226: a0 = a2 >u 0\n 21228: a4 = t1 >u 0\n 21230: a4 = a0 if a2 != 0\n 21233: a0 = a5 >u 0\n 21235: a3 = t0 <u 0x6\n 21238: a3 = a3 ^ 0x1\n 21241: a3 = a0 if a5 != 0\n 21244: a0 = t1 | a2\n 21247: a3 = a4 if a0 != 0\n 21250: jump @741 if a3 != 0\n      : @737 (gas: 12)\n 21253: t2 = u64 [a1 + 0x18]\n 21256: a4 = u64 [a1 + 0x10]\n 21259: a0 = u64 [a1]\n 21261: a1 = u64 [a1 + 0x8]\n 21264: a3 = a0 | a4\n 21267: a1 = a1 | t2\n 21270: a3 = a3 | a1\n 21273: a3 = a3 >> 0x20\n 21276: a1 = a1 | a4\n 21279: a1 = a1 << 0x20\n 21282: a1 = a1 | a3\n 21285: jump @740 if a1 != 0\n      : @738 (gas: 6)\n 21288: u64 [sp + 0x40] = t0\n 21291: u64 [sp + 0x48] = a5\n 21294: u64 [sp + 0x50] = t1\n 21297: a1 = sp + 0x40\n 21300: u64 [sp + 0x58] = a2\n 21303: ra = 870, jump @4\n      : @739 [@dyn 435] (gas: 5)\n 21309: sp = s0 + 0xffffffffffffff90\n 21312: ra = u64 [sp + 0x68]\n 21315: s0 = u64 [sp + 0x60]\n 21318: sp = sp + 0x70\n 21321: ret\n      : @740 (gas: 1)\n 21323: trap\n      : @741 (gas: 1)\n 21324: t0 = 872, jump @825\n      : @742 [@dyn 436] (gas: 1)\n 21330: ra = 874, jump @4\n      : @743 [@dyn 437] (gas: 7)\n 21336: u64 [sp + 24] = 0\n 21339: u64 [sp + 16] = 0\n 21342: u64 [sp + 0] = 0x21\n 21345: a0 = 0x4\n 21348: a1 = sp\n 21350: u64 [sp + 8] = 0\n 21353: ra = 876, jump @4\n      : @744 [@dyn 438] (gas: 2)\n 21359: a1 = i32 [0x2024c]\n 21364: jump @746 if a1 >u 63\n      : @745 (gas: 2)\n 21368: u32 [0x2024c] = 0x40\n 21374: fallthrough\n      : @746 (gas: 7)\n 21375: a1 = 0x20260\n 21380: i32 a1 = a1 + 0\n 21382: a0 = 0x1\n 21385: a2 = 0x24\n 21388: ra = 0x36e\n 21392: ecalli 8 // 'seal_return'\n 21394: fallthrough\n      : @747 [@dyn 439] (gas: 22)\n 21395: sp = sp + 0xffffffffffffff40\n 21399: u64 [sp + 0xb8] = ra\n 21403: u64 [sp + 0xb0] = s0\n 21407: u64 [sp + 0xa8] = s1\n 21411: s0 = sp + 0xc0\n 21415: sp = sp & 0xfffffffffffffff0\n 21418: a5 = u64 [a3 + 0x10]\n 21421: a4 = u64 [a3 + 0x18]\n 21424: s1 = u64 [a3 + 0x8]\n 21427: t0 = u64 [a3]\n 21429: u64 [sp + 0x50] = a4\n 21432: u64 [sp + 0x40] = s1\n 21435: a3 = s1 | a4\n 21438: a4 = t0 | a5\n 21441: a4 = a4 | a3\n 21444: a4 = a4 >> 0x20\n 21447: u64 [sp + 0x58] = a5\n 21450: a3 = a3 | a5\n 21453: a3 = a3 << 0x20\n 21456: a3 = a3 | a4\n 21459: u64 [sp] = a0\n 21461: jump @757 if a3 != 0\n      : @748 (gas: 23)\n 21465: a0 = u64 [a2 + 0x18]\n 21468: a3 = u64 [a2 + 0x10]\n 21471: a4 = u64 [a2 + 0x8]\n 21474: a2 = u64 [a2]\n 21476: a5 = u64 [a1 + 0x18]\n 21479: u64 [sp + 0x18] = a5\n 21482: s1 = u64 [a1 + 0x10]\n 21485: a5 = u64 [a1 + 0x8]\n 21488: u64 [sp + 0x10] = a5\n 21491: a1 = u64 [a1]\n 21493: u64 [sp + 0x8] = a1\n 21496: u64 [sp + 0x20] = a2\n 21499: u64 [sp + 0x80] = a2\n 21503: u64 [sp + 0x28] = a4\n 21506: u64 [sp + 0x88] = a4\n 21510: u64 [sp + 0x30] = a3\n 21513: u64 [sp + 0x90] = a3\n 21517: a1 = sp + 0x80\n 21521: u64 [sp + 0x38] = a0\n 21524: u64 [sp + 0x98] = a0\n 21528: u64 [sp + 0x48] = t0\n 21531: a0 = t0\n 21533: ra = 880, jump @4\n      : @749 [@dyn 440] (gas: 11)\n 21539: t1 = u64 [sp + 0x8]\n 21542: a0 = t1 | s1\n 21545: a1 = u64 [sp + 0x18]\n 21548: a2 = u64 [sp + 0x10]\n 21551: a1 = a1 | a2\n 21554: a0 = a0 | a1\n 21557: a0 = a0 >> 0x20\n 21560: a1 = a1 | s1\n 21563: a1 = a1 << 0x20\n 21566: a0 = a0 | a1\n 21569: jump @757 if a0 != 0\n      : @750 (gas: 15)\n 21573: a2 = u64 [sp + 0x30]\n 21576: a4 = u64 [sp + 0x20]\n 21579: a0 = a4 | a2\n 21582: a1 = u64 [sp + 0x38]\n 21585: a3 = u64 [sp + 0x28]\n 21588: a1 = a1 | a3\n 21591: a0 = a0 | a1\n 21594: a0 = a0 >> 0x20\n 21597: a1 = a1 | a2\n 21600: a1 = a1 << 0x20\n 21603: a0 = a0 | a1\n 21606: a3 = u64 [sp + 0x58]\n 21609: a2 = u64 [sp + 0x50]\n 21612: s1 = u64 [sp + 0x40]\n 21615: jump @757 if a0 != 0\n      : @751 (gas: 9)\n 21619: a1 = a4\n 21621: a0 = a3 | a2\n 21624: a4 = 0xffffffe0\n 21634: a3 = u64 [sp + 0x48]\n 21637: u64 [sp + 0x18] = a4\n 21640: a4 = a3 <u a4\n 21643: a4 = 0 if s1 != 0\n 21645: a4 = 0 if a0 != 0\n 21647: jump @757 if a4 == 0\n      : @752 (gas: 5)\n 21651: i32 t1 = t1 + 0\n 21653: u64 [sp + 0x10] = t1\n 21656: i32 a0 = a3 + 0x20\n 21659: s1 = a1\n 21661: ra = 882, jump @14\n      : @753 [@dyn 441] (gas: 5)\n 21667: i32 a0 = a0 + 0\n 21669: i32 a1 = s1 + 0\n 21671: a2 = u64 [sp + 0x10]\n 21674: ecalli 0 // 'call_data_copy'\n 21675: fallthrough\n      : @754 (gas: 27)\n 21676: a1 = u64 [sp + 0x48]\n 21679: a0 = a1 + s1\n 21682: a1 = a0 <u a1\n 21685: a2 = u64 [sp + 0x28]\n 21688: s1 = u64 [sp + 0x40]\n 21691: a2 = a2 + s1\n 21694: a2 = a2 + a1\n 21697: a3 = a2 ^ s1\n 21700: a4 = a2 <u s1\n 21703: a4 = a1 if a3 == 0\n 21706: a3 = u64 [sp + 0x58]\n 21709: a1 = u64 [sp + 0x30]\n 21712: a1 = a1 + a3\n 21715: t0 = a1 <u a3\n 21718: a5 = u64 [sp + 0x38]\n 21721: a3 = u64 [sp + 0x50]\n 21724: a5 = a5 + a3\n 21727: a3 = a5 + t0\n 21730: a4 = a4 + a1\n 21733: a1 = a4 <u a1\n 21736: a1 = a1 + a3\n 21739: a1 = a1 | a4\n 21742: a3 = u64 [sp + 0x18]\n 21745: a3 = a0 <u a3\n 21748: a3 = 0 if a2 != 0\n 21750: a3 = 0 if a1 != 0\n 21752: jump @757 if a3 == 0\n      : @755 (gas: 7)\n 21756: i32 a0 = a0 + 0x20\n 21759: u64 [sp + 120] = 0\n 21762: u64 [sp + 112] = 0\n 21765: u64 [sp + 104] = 0\n 21768: a1 = sp + 0x60\n 21771: u64 [sp + 96] = 0\n 21774: ra = 884, jump @4\n      : @756 [@dyn 442] (gas: 34)\n 21780: a0 = u64 [sp + 0x20]\n 21783: a0 = a0 + 0x1f\n 21786: a1 = 0x1ffffffe0\n 21796: a0 = a0 & a1\n 21799: a1 = u64 [sp + 0x48]\n 21802: a0 = a0 + a1\n 21805: a1 = a0 <u a1\n 21808: a2 = s1 + a1\n 21811: a3 = a2 <u s1\n 21814: a3 = a1 if a1 == 0\n 21817: a1 = u64 [sp + 0x58]\n 21820: a3 = a3 + a1\n 21823: a1 = a3 <u a1\n 21826: a4 = u64 [sp + 0x50]\n 21829: a1 = a1 + a4\n 21832: a4 = a0 + 0x20\n 21835: a0 = a4 <u a0\n 21838: a5 = a2 + a0\n 21841: a2 = a5 <u a2\n 21844: a2 = a0 if a0 == 0\n 21847: a2 = a2 + a3\n 21850: a0 = a2 <u a3\n 21853: a0 = a0 + a1\n 21856: a1 = u64 [sp]\n 21858: u64 [a1] = a4\n 21860: u64 [a1 + 0x8] = a5\n 21863: u64 [a1 + 0x10] = a2\n 21866: u64 [a1 + 0x18] = a0\n 21869: sp = s0 + 0xffffffffffffff40\n 21873: ra = u64 [sp + 0xb8]\n 21877: s0 = u64 [sp + 0xb0]\n 21881: s1 = u64 [sp + 0xa8]\n 21885: sp = sp + 0xc0\n 21889: ret\n      : @757 (gas: 1)\n 21891: trap\n      : @758 (gas: 23)\n 21892: sp = sp + 0xfffffffffffffe60\n 21896: u64 [sp + 0x198] = ra\n 21900: u64 [sp + 0x190] = s0\n 21904: u64 [sp + 0x188] = s1\n 21908: s0 = sp + 0x1a0\n 21912: sp = sp & 0xfffffffffffffff0\n 21915: t1 = u64 [a1 + 0x10]\n 21918: t0 = u64 [a1 + 0x18]\n 21921: s1 = u64 [a1 + 0x8]\n 21924: a1 = u64 [a1]\n 21926: u64 [sp + 0x98] = s1\n 21930: u64 [sp + 0x80] = t0\n 21934: t0 = s1 | t0\n 21937: u64 [sp + 0x90] = a1\n 21941: s1 = a1 | t1\n 21944: s1 = s1 | t0\n 21947: s1 = s1 >> 0x20\n 21950: u64 [sp + 0x88] = t1\n 21954: a1 = t0 | t1\n 21957: a1 = a1 << 0x20\n 21960: a1 = a1 | s1\n 21963: u64 [sp + 0x78] = a0\n 21966: jump @767 if a1 != 0\n      : @759 (gas: 36)\n 21970: a0 = u64 [a5 + 0x18]\n 21973: u64 [sp + 0x8] = a0\n 21976: a0 = u64 [a5 + 0x10]\n 21979: u64 [sp + 0x10] = a0\n 21982: a0 = u64 [a5 + 0x8]\n 21985: u64 [sp + 0x18] = a0\n 21988: a0 = u64 [a5]\n 21990: u64 [sp + 0x20] = a0\n 21993: a0 = u64 [a4 + 0x18]\n 21996: u64 [sp + 0x28] = a0\n 21999: a0 = u64 [a4 + 0x10]\n 22002: u64 [sp + 0x30] = a0\n 22005: a0 = u64 [a4 + 0x8]\n 22008: u64 [sp + 0x38] = a0\n 22011: a0 = u64 [a4]\n 22013: u64 [sp + 0x40] = a0\n 22016: a0 = u64 [a3 + 0x18]\n 22019: u64 [sp + 0x70] = a0\n 22022: a0 = u64 [a3 + 0x10]\n 22025: u64 [sp + 0x68] = a0\n 22028: a0 = u64 [a3 + 0x8]\n 22031: u64 [sp + 0x60] = a0\n 22034: a0 = u64 [a3]\n 22036: u64 [sp + 0x58] = a0\n 22039: a0 = u64 [a2 + 0x18]\n 22042: a1 = u64 [a2 + 0x10]\n 22045: a3 = u64 [a2 + 0x8]\n 22048: a2 = u64 [a2]\n 22050: u64 [sp + 0x160] = a2\n 22054: u64 [sp + 0x168] = a3\n 22058: u64 [sp + 0x170] = a1\n 22062: a1 = sp + 0x160\n 22066: u64 [sp + 0x178] = a0\n 22070: s1 = u64 [sp + 0x90]\n 22074: a0 = s1\n 22076: ra = 886, jump @4\n      : @760 [@dyn 443] (gas: 12)\n 22082: a0 = u64 [sp + 0x88]\n 22086: a1 = u64 [sp + 0x80]\n 22090: a2 = a0 | a1\n 22093: a0 = 0x100000000\n 22103: u64 [sp + 0x48] = a0\n 22106: a0 = 0xffffffe0\n 22116: a0 = s1 <u a0\n 22119: a1 = u64 [sp + 0x98]\n 22123: a0 = 0 if a1 != 0\n 22125: u64 [sp + 0x50] = a2\n 22128: a0 = 0 if a2 != 0\n 22130: jump @767 if a0 == 0\n      : @761 (gas: 12)\n 22134: s1 = u64 [sp + 0x90]\n 22138: i32 a0 = s1 + 0x20\n 22141: a1 = u64 [sp + 0x58]\n 22144: u64 [sp + 0x140] = a1\n 22148: a1 = u64 [sp + 0x60]\n 22151: u64 [sp + 0x148] = a1\n 22155: a1 = u64 [sp + 0x68]\n 22158: u64 [sp + 0x150] = a1\n 22162: a1 = sp + 0x140\n 22166: a2 = u64 [sp + 0x70]\n 22169: u64 [sp + 0x158] = a2\n 22173: ra = 888, jump @4\n      : @762 [@dyn 444] (gas: 8)\n 22179: a0 = u64 [sp + 0x48]\n 22182: a0 = a0 + 0xffffffffffffffc0\n 22185: a0 = s1 <u a0\n 22188: a1 = u64 [sp + 0x98]\n 22192: a0 = 0 if a1 != 0\n 22194: a1 = u64 [sp + 0x50]\n 22197: a0 = 0 if a1 != 0\n 22199: jump @767 if a0 == 0\n      : @763 (gas: 8)\n 22203: s1 = u64 [sp + 0x90]\n 22207: i32 a0 = s1 + 0x40\n 22210: u64 [sp + 312] = 0\n 22214: u64 [sp + 304] = 0\n 22218: u64 [sp + 288] = 0x60\n 22223: a1 = sp + 0x120\n 22227: u64 [sp + 296] = 0\n 22231: ra = 890, jump @4\n      : @764 [@dyn 445] (gas: 4)\n 22237: a0 = s1 + 0x60\n 22240: a1 = a0 <u s1\n 22243: a3 = u64 [sp + 0x98]\n 22247: t0 = 892, jump @820\n      : @765 [@dyn 446] (gas: 30)\n 22253: a1 = u64 [sp + 0x88]\n 22257: a3 = a3 + a1\n 22260: a1 = a3 <u a1\n 22263: a4 = u64 [sp + 0x80]\n 22267: a4 = a4 + a1\n 22270: u64 [sp + 0xa8] = a2\n 22274: u64 [sp + 0xa0] = a0\n 22278: a0 = u64 [sp + 0x8]\n 22281: u64 [sp + 0xd8] = a0\n 22285: a0 = u64 [sp + 0x10]\n 22288: u64 [sp + 0xd0] = a0\n 22292: a0 = u64 [sp + 0x18]\n 22295: u64 [sp + 0xc8] = a0\n 22299: a0 = u64 [sp + 0x20]\n 22302: u64 [sp + 0xc0] = a0\n 22306: a0 = u64 [sp + 0x28]\n 22309: u64 [sp + 0xf8] = a0\n 22313: a0 = u64 [sp + 0x30]\n 22316: u64 [sp + 0xf0] = a0\n 22320: a0 = u64 [sp + 0x38]\n 22323: u64 [sp + 0xe8] = a0\n 22327: a0 = u64 [sp + 0x40]\n 22330: u64 [sp + 0xe0] = a0\n 22334: u64 [sp + 0xb0] = a3\n 22338: a0 = sp + 0x100\n 22342: a1 = sp + 0xe0\n 22346: a2 = sp + 0xc0\n 22350: a3 = sp + 0xa0\n 22354: u64 [sp + 0xb8] = a4\n 22358: ra = 894, jump @747\n      : @766 [@dyn 447] (gas: 15)\n 22364: a0 = u64 [sp + 0x110]\n 22368: a1 = u64 [sp + 0x118]\n 22372: a2 = u64 [sp + 0x100]\n 22376: a3 = u64 [sp + 0x108]\n 22380: a4 = u64 [sp + 0x78]\n 22383: u64 [a4 + 0x10] = a0\n 22386: u64 [a4 + 0x18] = a1\n 22389: u64 [a4] = a2\n 22391: u64 [a4 + 0x8] = a3\n 22394: sp = s0 + 0xfffffffffffffe60\n 22398: ra = u64 [sp + 0x198]\n 22402: s0 = u64 [sp + 0x190]\n 22406: s1 = u64 [sp + 0x188]\n 22410: sp = sp + 0x1a0\n 22414: ret\n      : @767 (gas: 1)\n 22416: trap\n      : @768 (gas: 23)\n 22417: sp = sp + 0xfffffffffffffc30\n 22421: u64 [sp + 0x3c8] = ra\n 22425: u64 [sp + 0x3c0] = s0\n 22429: u64 [sp + 0x3b8] = s1\n 22433: s0 = sp + 0x3d0\n 22437: sp = sp & 0xfffffffffffffff0\n 22440: t1 = u64 [a1 + 0x10]\n 22443: t2 = u64 [a1 + 0x18]\n 22446: t0 = u64 [a1 + 0x8]\n 22449: s1 = u64 [a1]\n 22451: u64 [sp + 0x128] = t0\n 22455: u64 [sp + 0x110] = t2\n 22459: a1 = t0 | t2\n 22462: u64 [sp + 0x120] = s1\n 22466: s1 = s1 | t1\n 22469: s1 = s1 | a1\n 22472: s1 = s1 >> 0x20\n 22475: u64 [sp + 0x118] = t1\n 22479: a1 = a1 | t1\n 22482: a1 = a1 << 0x20\n 22485: a1 = a1 | s1\n 22488: u64 [sp + 0x88] = a0\n 22492: jump @782 if a1 != 0\n      : @769 (gas: 77)\n 22496: a0 = u64 [s0 + 0x18]\n 22499: a1 = u64 [a0 + 0x18]\n 22502: u64 [sp + 0x38] = a1\n 22505: a1 = u64 [s0 + 0x10]\n 22508: s1 = u64 [a0 + 0x10]\n 22511: u64 [sp + 0x18] = s1\n 22514: s1 = u64 [a0 + 0x8]\n 22517: u64 [sp + 0x20] = s1\n 22520: a0 = u64 [a0]\n 22522: u64 [sp + 0x28] = a0\n 22525: a0 = u64 [a1 + 0x18]\n 22528: u64 [sp + 0x30] = a0\n 22531: a0 = u64 [s0 + 0x8]\n 22534: s1 = u64 [a1 + 0x10]\n 22537: u64 [sp + 0x8] = s1\n 22540: s1 = u64 [a1 + 0x8]\n 22543: u64 [sp + 0x10] = s1\n 22546: a1 = u64 [a1]\n 22548: u64 [sp + 0x40] = a1\n 22551: a1 = u64 [a0 + 0x18]\n 22554: u64 [sp + 0x78] = a1\n 22557: a1 = u64 [s0]\n 22559: s1 = u64 [a0 + 0x10]\n 22562: u64 [sp + 0x48] = s1\n 22565: s1 = u64 [a0 + 0x8]\n 22568: u64 [sp + 0x50] = s1\n 22571: a0 = u64 [a0]\n 22573: u64 [sp + 0x58] = a0\n 22576: a0 = u64 [a1 + 0x18]\n 22579: u64 [sp + 0x60] = a0\n 22582: a0 = u64 [a1 + 0x10]\n 22585: u64 [sp + 0x68] = a0\n 22588: a0 = u64 [a1 + 0x8]\n 22591: u64 [sp + 0x70] = a0\n 22594: a0 = u64 [a1]\n 22596: u64 [sp + 0x80] = a0\n 22600: a0 = u64 [a5 + 0x18]\n 22603: u64 [sp + 0x90] = a0\n 22607: a0 = u64 [a5 + 0x10]\n 22610: u64 [sp + 0x98] = a0\n 22614: a0 = u64 [a5 + 0x8]\n 22617: u64 [sp + 0xa0] = a0\n 22621: a0 = u64 [a5]\n 22623: u64 [sp + 0xa8] = a0\n 22627: a0 = u64 [a4 + 0x18]\n 22630: u64 [sp + 0xb0] = a0\n 22634: a0 = u64 [a4 + 0x10]\n 22637: u64 [sp + 0xb8] = a0\n 22641: a0 = u64 [a4 + 0x8]\n 22644: u64 [sp + 0xc0] = a0\n 22648: a0 = u64 [a4]\n 22650: u64 [sp + 0xc8] = a0\n 22654: a0 = u64 [a3 + 0x18]\n 22657: u64 [sp + 0xd0] = a0\n 22661: a0 = u64 [a3 + 0x10]\n 22664: u64 [sp + 0xd8] = a0\n 22668: a0 = u64 [a3 + 0x8]\n 22671: u64 [sp + 0xe0] = a0\n 22675: a0 = u64 [a3]\n 22677: u64 [sp + 0xe8] = a0\n 22681: a0 = u64 [a2 + 0x18]\n 22684: u64 [sp + 0xf0] = a0\n 22688: a0 = u64 [a2 + 0x10]\n 22691: u64 [sp + 0xf8] = a0\n 22695: a0 = u64 [a2 + 0x8]\n 22698: u64 [sp + 0x100] = a0\n 22702: a0 = u64 [a2]\n 22704: u64 [sp + 0x108] = a0\n 22708: a2 = sp + 0x300\n 22712: u64 [a2 + 168] = 0\n 22716: u64 [a2 + 160] = 0\n 22720: u64 [a2 + 152] = 0\n 22724: a1 = sp + 0x390\n 22728: u64 [a2 + 144] = 0x80\n 22734: s1 = u64 [sp + 0x120]\n 22738: a0 = s1\n 22740: ra = 896, jump @4\n      : @770 [@dyn 448] (gas: 4)\n 22746: a0 = s1 + 0x80\n 22750: a1 = a0 <u s1\n 22753: a3 = u64 [sp + 0x128]\n 22757: t0 = 898, jump @820\n      : @771 [@dyn 449] (gas: 31)\n 22763: a1 = u64 [sp + 0x118]\n 22767: a3 = a3 + a1\n 22770: a1 = a3 <u a1\n 22773: a4 = u64 [sp + 0x110]\n 22777: a4 = a4 + a1\n 22780: a5 = sp + 0x300\n 22784: u64 [a5 + 0x18] = a2\n 22787: u64 [a5 + 0x10] = a0\n 22790: a0 = u64 [sp + 0xd0]\n 22794: u64 [a5 + 0x48] = a0\n 22797: a0 = u64 [sp + 0xd8]\n 22801: u64 [a5 + 0x40] = a0\n 22804: a0 = u64 [sp + 0xe0]\n 22808: u64 [a5 + 0x38] = a0\n 22811: a0 = u64 [sp + 0xe8]\n 22815: u64 [a5 + 0x30] = a0\n 22818: a0 = u64 [sp + 0xf0]\n 22822: u64 [a5 + 0x68] = a0\n 22825: a0 = u64 [sp + 0xf8]\n 22829: u64 [a5 + 0x60] = a0\n 22832: a0 = u64 [sp + 0x100]\n 22836: u64 [a5 + 0x58] = a0\n 22839: a0 = u64 [sp + 0x108]\n 22843: u64 [a5 + 0x50] = a0\n 22846: u64 [a5 + 0x20] = a3\n 22849: a0 = sp + 0x370\n 22853: a1 = sp + 0x350\n 22857: a2 = sp + 0x330\n 22861: a3 = sp + 0x310\n 22865: u64 [a5 + 0x28] = a4\n 22868: ra = 900, jump @747\n      : @772 [@dyn 450] (gas: 12)\n 22874: a0 = u64 [sp + 0x118]\n 22878: a1 = u64 [sp + 0x110]\n 22882: a1 = a1 | a0\n 22885: a0 = 0x100000000\n 22895: u64 [sp + 0x100] = a0\n 22899: a0 = 0xffffffe0\n 22909: a0 = s1 <u a0\n 22912: a2 = u64 [sp + 0x128]\n 22916: a0 = 0 if a2 != 0\n 22918: u64 [sp + 0x108] = a1\n 22922: a0 = 0 if a1 != 0\n 22924: jump @782 if a0 == 0\n      : @773 (gas: 37)\n 22928: a0 = u64 [sp + 0x370]\n 22932: a1 = u64 [sp + 0x378]\n 22936: s1 = u64 [sp + 0x388]\n 22940: u64 [sp + 0xf0] = s1\n 22944: a4 = u64 [sp + 0x380]\n 22948: u64 [sp + 0xf8] = a4\n 22952: a5 = u64 [sp + 0x120]\n 22956: t0 = a0 <u a5\n 22959: t1 = a0\n 22961: u64 [sp + 0xe8] = a0\n 22965: a3 = u64 [sp + 0x128]\n 22969: a0 = a1\n 22971: a1 = a1 ^ a3\n 22974: a2 = a0 <u a3\n 22977: t2 = a0\n 22979: a0 = a3\n 22981: a2 = t0 if a1 == 0\n 22984: a3 = u64 [sp + 0x118]\n 22988: a1 = a4 - a3\n 22991: a3 = a4 <u a3\n 22994: a4 = u64 [sp + 0x110]\n 22998: a4 = s1 - a4\n 23001: a4 = a4 - a3\n 23004: a3 = a1 <u a2\n 23007: a4 = a4 - a3\n 23010: a1 = a1 - a2\n 23013: a2 = t2 - a0\n 23016: s1 = t2\n 23018: a2 = a2 - t0\n 23021: a3 = t1 - a5\n 23024: i32 a0 = a5 + 0x20\n 23027: u64 [sp + 0x2f0] = a3\n 23031: u64 [sp + 0x2f8] = a2\n 23035: u64 [sp + 0x300] = a1\n 23039: a1 = sp + 0x2f0\n 23043: u64 [sp + 0x308] = a4\n 23047: ra = 902, jump @4\n      : @774 [@dyn 451] (gas: 29)\n 23053: a0 = u64 [sp + 0xf0]\n 23057: a5 = sp + 0x200\n 23061: u64 [a5 + 0x88] = a0\n 23065: a0 = u64 [sp + 0xf8]\n 23069: u64 [a5 + 0x80] = a0\n 23073: u64 [a5 + 0x78] = s1\n 23076: a0 = u64 [sp + 0xe8]\n 23080: u64 [a5 + 0x70] = a0\n 23083: a0 = u64 [sp + 0x90]\n 23087: u64 [a5 + 0xa8] = a0\n 23091: a0 = u64 [sp + 0x98]\n 23095: u64 [a5 + 0xa0] = a0\n 23099: a0 = u64 [sp + 0xa0]\n 23103: u64 [a5 + 0x98] = a0\n 23107: a0 = u64 [sp + 0xa8]\n 23111: u64 [a5 + 0x90] = a0\n 23115: a0 = u64 [sp + 0xb0]\n 23119: u64 [a5 + 0xc8] = a0\n 23123: a0 = u64 [sp + 0xb8]\n 23127: u64 [a5 + 0xc0] = a0\n 23131: a0 = u64 [sp + 0xc0]\n 23135: u64 [a5 + 0xb8] = a0\n 23139: a0 = sp + 0x2d0\n 23143: a1 = sp + 0x2b0\n 23147: a2 = sp + 0x290\n 23151: a3 = sp + 0x270\n 23155: a4 = u64 [sp + 0xc8]\n 23159: u64 [a5 + 0xb0] = a4\n 23163: ra = 904, jump @747\n      : @775 [@dyn 452] (gas: 9)\n 23169: a0 = u64 [sp + 0x100]\n 23173: a0 = a0 + 0xffffffffffffffc0\n 23176: a1 = u64 [sp + 0x120]\n 23180: a0 = a1 <u a0\n 23183: a1 = u64 [sp + 0x128]\n 23187: a0 = 0 if a1 != 0\n 23189: a1 = u64 [sp + 0x108]\n 23193: a0 = 0 if a1 != 0\n 23195: jump @782 if a0 == 0\n      : @776 (gas: 38)\n 23199: a0 = u64 [sp + 0x2d0]\n 23203: a1 = u64 [sp + 0x2d8]\n 23207: s1 = u64 [sp + 0x2e8]\n 23211: u64 [sp + 0xf8] = s1\n 23215: a4 = u64 [sp + 0x2e0]\n 23219: u64 [sp + 0x100] = a4\n 23223: a5 = u64 [sp + 0x120]\n 23227: t0 = a0 <u a5\n 23230: t1 = a0\n 23232: u64 [sp + 0xf0] = a0\n 23236: a3 = u64 [sp + 0x128]\n 23240: a0 = a1\n 23242: a1 = a1 ^ a3\n 23245: a2 = a0 <u a3\n 23248: t2 = a0\n 23250: a0 = a3\n 23252: a2 = t0 if a1 == 0\n 23255: a3 = u64 [sp + 0x118]\n 23259: a1 = a4 - a3\n 23262: a3 = a4 <u a3\n 23265: a4 = u64 [sp + 0x110]\n 23269: a4 = s1 - a4\n 23272: a4 = a4 - a3\n 23275: a3 = a1 <u a2\n 23278: a4 = a4 - a3\n 23281: a1 = a1 - a2\n 23284: a2 = t2 - a0\n 23287: s1 = t2\n 23289: a2 = a2 - t0\n 23292: a3 = t1 - a5\n 23295: i32 a0 = a5 + 0x40\n 23298: a5 = sp + 0x200\n 23302: u64 [a5 + 0x50] = a3\n 23305: u64 [a5 + 0x58] = a2\n 23308: u64 [a5 + 0x60] = a1\n 23311: a1 = sp + 0x250\n 23315: u64 [a5 + 0x68] = a4\n 23318: ra = 906, jump @4\n      : @777 [@dyn 453] (gas: 29)\n 23324: a0 = u64 [sp + 0xf8]\n 23328: u64 [sp + 0x1e8] = a0\n 23332: a0 = u64 [sp + 0x100]\n 23336: u64 [sp + 0x1e0] = a0\n 23340: u64 [sp + 0x1d8] = s1\n 23344: a0 = u64 [sp + 0xf0]\n 23348: u64 [sp + 0x1d0] = a0\n 23352: a0 = u64 [sp + 0x78]\n 23355: a5 = sp + 0x200\n 23359: u64 [a5 + 0x8] = a0\n 23362: a0 = u64 [sp + 0x48]\n 23365: u64 [a5] = a0\n 23367: a0 = u64 [sp + 0x50]\n 23370: u64 [sp + 0x1f8] = a0\n 23374: a0 = u64 [sp + 0x58]\n 23377: u64 [sp + 0x1f0] = a0\n 23381: a0 = u64 [sp + 0x60]\n 23384: u64 [a5 + 0x28] = a0\n 23387: a0 = u64 [sp + 0x68]\n 23390: u64 [a5 + 0x20] = a0\n 23393: a0 = u64 [sp + 0x70]\n 23396: u64 [a5 + 0x18] = a0\n 23399: a0 = sp + 0x230\n 23403: a1 = sp + 0x210\n 23407: a2 = sp + 0x1f0\n 23411: a3 = sp + 0x1d0\n 23415: a4 = u64 [sp + 0x80]\n 23419: u64 [a5 + 0x10] = a4\n 23422: ra = 908, jump @747\n      : @778 [@dyn 454] (gas: 8)\n 23428: a0 = 0xffffffa0\n 23438: a1 = u64 [sp + 0x120]\n 23442: a0 = a1 <u a0\n 23445: a1 = u64 [sp + 0x128]\n 23449: a0 = 0 if a1 != 0\n 23451: a1 = u64 [sp + 0x108]\n 23455: a0 = 0 if a1 != 0\n 23457: jump @782 if a0 == 0\n      : @779 (gas: 37)\n 23461: a1 = sp + 0x200\n 23465: a0 = u64 [a1 + 0x30]\n 23468: a2 = u64 [a1 + 0x38]\n 23471: s1 = u64 [a1 + 0x48]\n 23474: u64 [sp + 0x100] = s1\n 23478: a4 = u64 [a1 + 0x40]\n 23481: u64 [sp + 0x108] = a4\n 23485: a5 = u64 [sp + 0x120]\n 23489: t0 = a0 <u a5\n 23492: t2 = a0\n 23494: u64 [sp + 0xf8] = a0\n 23498: a1 = u64 [sp + 0x128]\n 23502: a0 = a2\n 23504: a3 = a2 ^ a1\n 23507: a2 = a2 <u a1\n 23510: ra = a0\n 23512: a2 = t0 if a3 == 0\n 23515: a3 = u64 [sp + 0x118]\n 23519: a0 = a4 - a3\n 23522: a3 = a4 <u a3\n 23525: a4 = u64 [sp + 0x110]\n 23529: a4 = s1 - a4\n 23532: a4 = a4 - a3\n 23535: a3 = a0 <u a2\n 23538: t1 = a4 - a3\n 23541: a4 = a0 - a2\n 23544: a2 = ra - a1\n 23547: s1 = ra\n 23549: a2 = a2 - t0\n 23552: a3 = t2 - a5\n 23555: i32 a0 = a5 + 0x60\n 23558: u64 [sp + 0x1b0] = a3\n 23562: u64 [sp + 0x1b8] = a2\n 23566: u64 [sp + 0x1c0] = a4\n 23570: a1 = sp + 0x1b0\n 23574: u64 [sp + 0x1c8] = t1\n 23578: ra = 910, jump @4\n      : @780 [@dyn 455] (gas: 28)\n 23584: a0 = u64 [sp + 0x100]\n 23588: u64 [sp + 0x148] = a0\n 23592: a0 = u64 [sp + 0x108]\n 23596: u64 [sp + 0x140] = a0\n 23600: u64 [sp + 0x138] = s1\n 23604: a0 = u64 [sp + 0xf8]\n 23608: u64 [sp + 0x130] = a0\n 23612: a0 = u64 [sp + 0x38]\n 23615: u64 [sp + 0x168] = a0\n 23619: a0 = u64 [sp + 0x18]\n 23622: u64 [sp + 0x160] = a0\n 23626: a0 = u64 [sp + 0x20]\n 23629: u64 [sp + 0x158] = a0\n 23633: a0 = u64 [sp + 0x28]\n 23636: u64 [sp + 0x150] = a0\n 23640: a0 = u64 [sp + 0x30]\n 23643: u64 [sp + 0x188] = a0\n 23647: a0 = u64 [sp + 0x8]\n 23650: u64 [sp + 0x180] = a0\n 23654: a0 = u64 [sp + 0x10]\n 23657: u64 [sp + 0x178] = a0\n 23661: a0 = sp + 0x190\n 23665: a1 = sp + 0x170\n 23669: a2 = sp + 0x150\n 23673: a3 = sp + 0x130\n 23677: a4 = u64 [sp + 0x40]\n 23680: u64 [sp + 0x170] = a4\n 23684: ra = 912, jump @747\n      : @781 [@dyn 456] (gas: 16)\n 23690: a0 = u64 [sp + 0x1a0]\n 23694: a1 = u64 [sp + 0x1a8]\n 23698: a2 = u64 [sp + 0x190]\n 23702: a3 = u64 [sp + 0x198]\n 23706: a4 = u64 [sp + 0x88]\n 23710: u64 [a4 + 0x10] = a0\n 23713: u64 [a4 + 0x18] = a1\n 23716: u64 [a4] = a2\n 23718: u64 [a4 + 0x8] = a3\n 23721: sp = s0 + 0xfffffffffffffc30\n 23725: a0 = sp + 0x300\n 23729: ra = u64 [a0 + 0xc8]\n 23733: s0 = u64 [a0 + 0xc0]\n 23737: s1 = u64 [a0 + 0xb8]\n 23741: sp = sp + 0x3d0\n 23745: ret\n      : @782 (gas: 1)\n 23747: trap\n      : @783 [@dyn 457] (gas: 1)\n 23748: jump @789 if a3 != 0\n      : @784 (gas: 1)\n 23752: t0 = 916, jump @826\n      : @785 [@dyn 458] (gas: 2)\n 23758: ecalli 1 // 'call_data_load'\n 23760: fallthrough\n      : @786 (gas: 46)\n 23761: ra = u64 [sp + 0x18]\n 23764: t2 = u64 [sp + 0x20]\n 23767: a2 = u32 [0x20248]\n 23772: t0 = u64 [sp + 0x58]\n 23775: t1 = u64 [sp + 0x50]\n 23778: a1 = u64 [sp + 0x38]\n 23781: a3 = a2 <u a1\n 23784: a4 = s1 >u 0\n 23786: a4 = a3 if s1 == 0\n 23789: a0 = -ra\n 23791: u64 [sp + 0x28] = s1\n 23794: a5 = s1 + a3\n 23797: s1 = -a5\n 23799: a2 = a2 - a1\n 23802: a3 = a2 + 0xffffffffffffff21\n 23806: a2 = a3 <u a2\n 23809: a5 = a5 ^ 0xffffffffffffffff\n 23812: a5 = a5 + a2\n 23815: a1 = a5 ^ s1\n 23818: s1 = a5 <u s1\n 23821: s1 = a2 if a1 == 0\n 23824: a1 = a0 <u a4\n 23827: a2 = ra >u 0\n 23829: a2 = a2 + t2\n 23832: a1 = a1 + a2\n 23835: a2 = u64 [sp + 0x48]\n 23838: a0 = a0 - a4\n 23841: a4 = a0 <u 0x1\n 23844: a1 = a1 + a4\n 23847: a4 = u64 [sp + 0x40]\n 23850: a0 = a0 + 0xffffffffffffffff\n 23853: s1 = s1 + a0\n 23856: a0 = s1 <u a0\n 23859: a0 = a0 - a1\n 23862: a1 = a2 ^ a5\n 23865: a5 = a2 <u a5\n 23868: a3 = a4 <u a3\n 23871: a3 = a5 if a1 != 0\n 23874: a1 = t1 <u s1\n 23877: a5 = t0 ^ a0\n 23880: a0 = t0 <s a0\n 23883: a0 = a1 if a5 == 0\n 23886: a1 = t1 ^ s1\n 23889: a1 = a1 | a5\n 23892: a3 = a0 if a1 != 0\n 23895: jump @790 if a3 == 0\n      : @787 (gas: 16)\n 23898: a0 = u64 [sp + 0x38]\n 23901: a0 = a0 + a4\n 23904: a1 = a0 <u a4\n 23907: a3 = u64 [sp + 0x28]\n 23910: a3 = a3 + a2\n 23913: a3 = a3 + a1\n 23916: a4 = a3 ^ a2\n 23919: a2 = a3 <u a2\n 23922: a2 = a1 if a4 == 0\n 23925: a1 = t1 + ra\n 23928: a2 = a2 + a1\n 23931: a4 = a2 <u a1\n 23934: a1 = a1 <u t1\n 23937: t0 = t0 + t2\n 23940: a1 = a1 + t0\n 23943: t0 = 918, jump @819\n      : @788 [@dyn 459] (gas: 1)\n 23949: ret\n      : @789 (gas: 1)\n 23951: trap\n      : @790 (gas: 8)\n 23952: a1 = 0x20260\n 23957: i32 a1 = a1 + 0\n 23959: a0 = 0x1\n 23962: a2 = 0\n 23964: ecalli 8 // 'seal_return'\n 23966: a0 = 0\n 23968: ra = 0x398\n 23972: jump @20\n      : @791 [export #0: 'call'] (gas: 2)\n 23975: a0 = 0\n 23977: ra = 920, jump @20\n      : @792 [@dyn 460] [export #1: 'deploy'] (gas: 2)\n 23983: a0 = 0x1\n 23986: ra = 922, jump @20\n      : @793 [@dyn 461] (gas: 11)\n 23992: a2 = u64 [sp + 0x8]\n 23995: a2 = a2 | s1\n 23998: s1 = 0x100000000\n 24008: a0 = 0xfffffffc\n 24018: a1 = u64 [sp + 0x18]\n 24021: a0 = a1 <u a0\n 24024: a1 = u64 [sp + 0x10]\n 24027: a0 = 0 if a1 != 0\n 24029: u64 [sp + 0x8] = a2\n 24032: a0 = 0 if a2 != 0\n 24034: jump [t0]\n      : @794 (gas: 15)\n 24036: a2 = u64 [sp + 0xb8]\n 24040: s1 = u64 [sp + 0xb0]\n 24044: a0 = u64 [sp + 0xa8]\n 24048: a1 = u64 [sp + 0xa0]\n 24052: u64 [sp + 0x10] = a0\n 24055: u64 [sp + 0x8] = a2\n 24058: a0 = a0 | a2\n 24061: u64 [sp + 0x18] = a1\n 24064: a1 = a1 | s1\n 24067: a1 = a1 | a0\n 24070: a1 = a1 >> 0x20\n 24073: a0 = a0 | s1\n 24076: a0 = a0 << 0x20\n 24079: a0 = a0 | a1\n 24082: jump [t0]\n      : @795 (gas: 14)\n 24084: sp = sp + 0xffffffffffffff20\n 24088: u64 [sp + 0xd8] = ra\n 24092: u64 [sp + 0xd0] = s0\n 24096: u64 [sp + 0xc8] = s1\n 24100: s0 = sp + 0xe0\n 24104: sp = sp & 0xfffffffffffffff0\n 24107: a1 = u64 [a0 + 0x10]\n 24110: a2 = u64 [a0 + 0x18]\n 24113: a3 = u64 [a0 + 0x8]\n 24116: a0 = u64 [a0]\n 24118: a2 = a2 | a3\n 24121: a0 = a0 | a1\n 24124: a0 = a0 | a2\n 24127: jump [t0]\n      : @796 (gas: 7)\n 24129: a0 = 0xffffffbc\n 24139: a0 = s1 <u a0\n 24142: a1 = u64 [sp + 0x10]\n 24145: a0 = 0 if a1 != 0\n 24147: a1 = u64 [sp + 0x8]\n 24150: a0 = 0 if a1 != 0\n 24152: jump [t0]\n      : @797 (gas: 8)\n 24154: a0 = s1 + 0xffffffffffffffdc\n 24157: a1 = u64 [sp + 0x18]\n 24160: a0 = a1 <u a0\n 24163: a1 = u64 [sp + 0x10]\n 24166: a0 = 0 if a1 != 0\n 24168: a1 = u64 [sp + 0x8]\n 24171: a0 = 0 if a1 != 0\n 24173: jump [t0]\n      : @798 (gas: 8)\n 24175: u64 [sp + 144] = 0\n 24179: u64 [sp + 136] = 0\n 24183: u64 [sp + 128] = 0\n 24187: a0 = 0x8c379a000000000\n 24197: a1 = sp + 0x80\n 24201: u64 [sp + 0x98] = a0\n 24205: a0 = u64 [sp + 0x18]\n 24208: jump [t0]\n      : @799 (gas: 15)\n 24210: a0 = a1 <u a0\n 24213: a5 = a3 + a0\n 24216: a3 = a5 <u a3\n 24219: a3 = a0 if a0 == 0\n 24222: a3 = a3 + a4\n 24225: a0 = a3 <u a4\n 24228: a0 = a0 + a2\n 24231: a2 = a1 | a3\n 24234: a0 = a0 | a5\n 24237: a2 = a2 | a0\n 24240: a2 = a2 >> 0x20\n 24243: a0 = a0 | a3\n 24246: a0 = a0 << 0x20\n 24249: a0 = a0 | a2\n 24252: jump [t0]\n      : @800 (gas: 12)\n 24254: a5 = s1 + 0x100\n 24258: a1 = u64 [a5 + 0x58]\n 24261: a0 = u64 [a5 + 0x48]\n 24264: a3 = u64 [a5 + 0x40]\n 24267: a3 = a3 | a0\n 24270: a4 = 0x100000000\n 24280: a0 = 0xfffffffc\n 24290: a0 = a1 <u a0\n 24293: a2 = u64 [a5 + 0x50]\n 24296: a0 = 0 if a2 != 0\n 24298: a0 = 0 if a3 != 0\n 24300: jump [t0]\n      : @801 (gas: 7)\n 24302: a4 = 0x100000000\n 24312: a0 = 0xfffffffc\n 24322: a0 = a1 <u a0\n 24325: a2 = u64 [a5 + 0x50]\n 24328: a0 = 0 if a2 != 0\n 24330: a0 = 0 if a3 != 0\n 24332: jump [t0]\n      : @802 (gas: 10)\n 24334: a4 = s1 + 0x100\n 24338: a3 = u64 [a4 + 0x48]\n 24341: a2 = u64 [a4 + 0x50]\n 24344: a1 = u64 [a4 + 0x58]\n 24347: a0 = u64 [a4 + 0x40]\n 24350: a0 = a0 + 0xffffffffffffffdc\n 24353: a0 = a1 <u a0\n 24356: a0 = 0 if a2 != 0\n 24358: a0 = 0 if a3 != 0\n 24360: jump [t0]\n      : @803 (gas: 8)\n 24362: a0 = u64 [sp + 0x18]\n 24365: i32 a0 = a0 + 0x4\n 24368: u64 [sp + 120] = 0\n 24371: u64 [sp + 112] = 0\n 24374: u64 [sp + 96] = 0x20\n 24378: a1 = sp + 0x60\n 24381: u64 [sp + 104] = 0\n 24384: jump [t0]\n      : @804 (gas: 9)\n 24386: a2 = s1 + 0x100\n 24390: a3 = u64 [a2 + 0x58]\n 24393: a0 = 0xffffffbc\n 24403: a0 = a3 <u a0\n 24406: a1 = u64 [a2 + 0x50]\n 24409: a0 = 0 if a1 != 0\n 24411: a1 = u64 [a2 + 0x48]\n 24414: a0 = 0 if a1 != 0\n 24416: jump [t0]\n      : @805 (gas: 14)\n 24418: a0 = u64 [a2 + 0x8]\n 24421: a1 = i32 [a2 + 0x10]\n 24424: a2 = u64 [a2]\n 24426: a0 = reverse a0\n 24428: a3 = a0 << 0x20\n 24431: a1 = reverse a1\n 24433: a1 = a1 >> 0x20\n 24436: a3 = a3 | a1\n 24439: a0 = a0 >> 0x20\n 24442: a1 = reverse a2\n 24444: a2 = a1 << 0x20\n 24447: a0 = a0 | a2\n 24450: a1 = a1 >> 0x20\n 24453: jump [t0]\n      : @806 (gas: 14)\n 24455: a0 = u64 [a2 + 0x8]\n 24458: a1 = u64 [a2]\n 24460: a2 = i32 [a2 + 0x10]\n 24463: a0 = reverse a0\n 24465: a3 = a0 >> 0x20\n 24468: a1 = reverse a1\n 24470: a4 = a1 << 0x20\n 24473: a3 = a3 | a4\n 24476: a0 = a0 << 0x20\n 24479: a2 = reverse a2\n 24481: a2 = a2 >> 0x20\n 24484: a0 = a0 | a2\n 24487: a1 = a1 >> 0x20\n 24490: jump [t0]\n      : @807 (gas: 10)\n 24492: a0 = u64 [a3 + 0x18]\n 24495: a1 = u64 [a3 + 0x10]\n 24498: a2 = u64 [a3 + 0x8]\n 24501: a3 = u64 [a3]\n 24503: a0 = reverse a0\n 24505: a1 = reverse a1\n 24507: a2 = reverse a2\n 24509: a3 = reverse a3\n 24511: a4 = s1 + 0x28f8\n 24515: jump [t0]\n      : @808 (gas: 15)\n 24517: a3 = u64 [s1 + 0x138]\n 24521: a0 = u64 [a3 + 0x18]\n 24524: a1 = u64 [a3 + 0x10]\n 24527: a2 = u64 [a3 + 0x8]\n 24530: a3 = u64 [a3]\n 24532: a0 = reverse a0\n 24534: a4 = reverse a1\n 24536: a2 = reverse a2\n 24538: a3 = reverse a3\n 24540: a1 = u64 [s1 + 0x150]\n 24544: u64 [a1 + 0x18] = a3\n 24547: u64 [a1 + 0x10] = a2\n 24550: u64 [a1 + 0x8] = a4\n 24553: u64 [a1] = a0\n 24555: jump [t0]\n      : @809 (gas: 19)\n 24557: sp = sp + 0xffffffffffffff80\n 24560: u64 [sp + 0x78] = ra\n 24563: u64 [sp + 0x70] = s0\n 24566: u64 [sp + 0x68] = s1\n 24569: s0 = sp + 0x80\n 24573: sp = sp & 0xffffffffffffffe0\n 24576: a3 = u64 [a2 + 0x10]\n 24579: a4 = u64 [a2 + 0x18]\n 24582: a5 = u64 [a2 + 0x8]\n 24585: a2 = u64 [a2]\n 24587: a4 = a4 | a5\n 24590: a5 = a2 | a3\n 24593: a5 = a5 | a4\n 24596: a5 = a5 >> 0x20\n 24599: a3 = a3 | a4\n 24602: a3 = a3 << 0x20\n 24605: a3 = a3 | a5\n 24608: u64 [sp + 0x30] = a0\n 24611: jump [t0]\n      : @810 (gas: 6)\n 24613: sp = s0 + 0xffffffffffffff20\n 24617: ra = u64 [sp + 0xd8]\n 24621: s0 = u64 [sp + 0xd0]\n 24625: s1 = u64 [sp + 0xc8]\n 24629: sp = sp + 0xe0\n 24633: jump [t0]\n      : @811 (gas: 8)\n 24635: a1 = sp + 0xffffffffffffffe0\n 24638: a1 = a1 & 0xffffffffffffffe0\n 24641: u64 [s1 + 0x150] = a1\n 24645: sp = a1\n 24647: i32 a0 = a0 + 0\n 24649: i32 a2 = a1 + 0\n 24651: a1 = 0x40\n 24654: jump [t0]\n      : @812 (gas: 8)\n 24656: a1 = sp + 0xffffffffffffffe0\n 24659: a1 = a1 & 0xffffffffffffffe0\n 24662: u64 [s1 + 0x138] = a1\n 24666: sp = a1\n 24668: i32 a0 = a0 + 0\n 24670: i32 a2 = a1 + 0\n 24672: a1 = 0x40\n 24675: jump [t0]\n      : @813 (gas: 11)\n 24677: a0 = u64 [a3 + 0x18]\n 24680: a1 = u64 [a3 + 0x10]\n 24683: a2 = u64 [a3 + 0x8]\n 24686: a3 = u64 [a3]\n 24688: a0 = reverse a0\n 24690: a1 = reverse a1\n 24692: a2 = reverse a2\n 24694: a3 = reverse a3\n 24696: a4 = s1 + 0x28f8\n 24700: a5 = a4 + 0x200\n 24704: jump [t0]\n      : @814 (gas: 9)\n 24706: a3 = s1 + 0x100\n 24710: a2 = u64 [a3 + 0x58]\n 24713: a0 = 0xffffffbc\n 24723: a0 = a2 <u a0\n 24726: a1 = u64 [a3 + 0x50]\n 24729: a0 = 0 if a1 != 0\n 24731: a1 = u64 [a3 + 0x48]\n 24734: a0 = 0 if a1 != 0\n 24736: jump [t0]\n      : @815 (gas: 9)\n 24738: a0 = u64 [a5 + 0x18]\n 24741: a1 = u64 [a5 + 0x20]\n 24744: a2 = u64 [a5 + 0x10]\n 24747: a3 = u64 [a5 + 0x8]\n 24750: a1 = a1 | a2\n 24753: a0 = a0 | a3\n 24756: a0 = a0 | a1\n 24759: a0 = a0 >u 0\n 24761: jump [t0]\n      : @816 (gas: 12)\n 24763: a5 = a5 - a3\n 24766: a0 = a0 - a2\n 24769: a0 = a0 - a1\n 24772: a1 = t1 - t2\n 24775: a0 = a0 | a5\n 24778: a3 = a1 | ra\n 24781: a3 = a3 | a0\n 24784: a0 = a0 | ra\n 24787: a3 = a3 >> 0x20\n 24790: a0 = a0 << 0x20\n 24793: a0 = a0 | a3\n 24796: jump [t0]\n      : @817 (gas: 8)\n 24798: s1 = u64 [sp + 0x18]\n 24801: i32 a0 = s1 + 0x24\n 24804: u64 [sp + 88] = 0\n 24807: u64 [sp + 80] = 0\n 24810: u64 [sp + 64] = 0x1d\n 24814: a1 = sp + 0x40\n 24817: u64 [sp + 72] = 0\n 24820: jump [t0]\n      : @818 (gas: 4)\n 24822: i32 a1 = a0 + 0\n 24824: a0 = 0x1\n 24827: a2 = 0x64\n 24830: jump [t0]\n      : @819 (gas: 12)\n 24832: a1 = a1 + a4\n 24835: a4 = u64 [sp + 0x30]\n 24838: u64 [a4] = a0\n 24840: u64 [a4 + 0x8] = a3\n 24843: u64 [a4 + 0x10] = a2\n 24846: u64 [a4 + 0x18] = a1\n 24849: sp = s0 + 0xffffffffffffff80\n 24852: ra = u64 [sp + 0x78]\n 24855: s0 = u64 [sp + 0x70]\n 24858: s1 = u64 [sp + 0x68]\n 24861: sp = sp + 0x80\n 24865: jump [t0]\n      : @820 (gas: 4)\n 24867: a2 = a3 + a1\n 24870: a3 = a2 <u a3\n 24873: a3 = a1 if a1 == 0\n 24876: jump [t0]\n      : @821 (gas: 8)\n 24878: a2 = 0x100000000\n 24888: a2 = a2 ^ a0\n 24891: a2 = a2 | a1\n 24894: a3 = a0 >> 0x20\n 24897: a3 = a3 <u 0x1\n 24900: a3 = 0 if a1 != 0\n 24902: a3 = 0 if a2 == 0\n 24904: jump [t0]\n      : @822 (gas: 8)\n 24906: a1 = u64 [s1 + 0x158]\n 24910: a1 = a1 | a3\n 24913: a1 = a1 | a0\n 24916: a1 = a1 >> 0x20\n 24919: a0 = a0 | a3\n 24922: a0 = a0 << 0x20\n 24925: a0 = a0 | a1\n 24928: jump [t0]\n      : @823 (gas: 9)\n 24930: a0 = u64 [a3 + 0x18]\n 24933: a1 = u64 [a3 + 0x10]\n 24936: a2 = u64 [a3 + 0x8]\n 24939: a3 = u64 [a3]\n 24941: a0 = reverse a0\n 24943: a4 = reverse a1\n 24945: a2 = reverse a2\n 24947: a3 = reverse a3\n 24949: jump [t0]\n      : @824 (gas: 9)\n 24951: u64 [a2 + 0x28] = a0\n 24954: a0 = u64 [s1 + 0x118]\n 24958: u64 [a2 + 0x60] = a0\n 24961: a0 = u64 [s1 + 0x120]\n 24965: u64 [a2 + 0x58] = a0\n 24968: a0 = u64 [s1 + 0x128]\n 24972: u64 [a2 + 0x50] = a0\n 24975: a4 = a1\n 24977: jump [t0]\n      : @825 (gas: 8)\n 24979: u64 [sp + 48] = 0\n 24982: u64 [sp + 40] = 0\n 24985: u64 [sp + 32] = 0\n 24988: a0 = 0x4e487b7100000000\n 24998: a1 = sp + 0x20\n 25001: u64 [sp + 0x38] = a0\n 25004: a0 = 0\n 25006: jump [t0]\n      : @826 (gas: 10)\n 25008: a0 = u64 [a1 + 0x18]\n 25011: u64 [sp + 0x20] = a0\n 25014: a0 = u64 [a1 + 0x10]\n 25017: u64 [sp + 0x18] = a0\n 25020: s1 = u64 [a1 + 0x8]\n 25023: a0 = u64 [a1]\n 25025: u64 [sp + 0x38] = a0\n 25028: i32 a1 = a2 + 0\n 25030: i32 a0 = sp + 0x40\n 25033: jump [t0]\n      : @827 (gas: 8)\n 25035: a4 = s1 + 0x100\n 25039: a2 = u64 [a4 + 0x20]\n 25042: a0 = a2 <u a0\n 25045: a1 = u64 [a4 + 0x28]\n 25048: a0 = 0 if a1 != 0\n 25050: a1 = u64 [a4 + 0x30]\n 25053: a0 = 0 if a1 != 0\n 25055: jump [t0]\n      : @828 (gas: 7)\n 25057: a1 = a1 | a2\n 25060: a1 = a1 | a0\n 25063: a1 = a1 >> 0x20\n 25066: a0 = a0 | a2\n 25069: a0 = a0 << 0x20\n 25072: a0 = a0 | a1\n 25075: jump [t0]\n      : @829 (gas: 6)\n 25077: a1 = u64 [s1 + 0x150]\n 25081: a1 = a3 <u a1\n 25084: a1 = a0 if a0 == 0\n 25087: a0 = u64 [s1 + 0x130]\n 25091: a4 = a0 + a1\n 25094: jump [t0]\n      : @830 (gas: 4)\n 25096: a2 = u64 [s1 + 0x140]\n 25100: a0 = 0x20f0\n 25104: a4 = s1 + a0\n 25107: jump [t0]\n      : @831 (gas: 4)\n 25109: a0 = 0x28f8\n 25113: a3 = s1 + a0\n 25116: a4 = a3 + 0x300\n 25120: jump [t0]\n      : @832 (gas: 4)\n 25122: a0 = 0x28f8\n 25126: a3 = s1 + a0\n 25129: a4 = a3 + 0x500\n 25133: jump [t0]\n",
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "authorizeProvider(address)": "112ea262",
              "authorizedProviders(address)": "69dc3ae2",
              "createShipment((uint256,uint256,uint256,(string,string),(string,string),string,uint8))": "91e1d4f3",
              "nextShipmentId()": "b9a3a68c",
              "owner()": "8da5cb5b",
              "revokeProvider(address)": "ac1e8b8e",
              "transferOwnership(address)": "f2fde38b",
              "updateShipment(((uint256,uint256,uint256,(string,string),(string,string),string,uint8),bytes32,uint256))": "d44fadca"
            }
          },
          "irOptimized": "/// @use-src 0:\"contracts/LogisticsTracking.sol\"\nobject \"LogisticsEvents_544\" {\n    code {\n        {\n            /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n            let _1 := memoryguard(0x80)\n            mstore(64, _1)\n            if callvalue() { revert(0, 0) }\n            sstore(/** @src 0:368:386  \"owner = msg.sender\" */ 0x00, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ or(and(sload(/** @src 0:368:386  \"owner = msg.sender\" */ 0x00), /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ not(sub(shl(160, 1), 1))), /** @src 0:376:386  \"msg.sender\" */ caller()))\n            /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n            mstore(/** @src 0:368:386  \"owner = msg.sender\" */ 0x00, /** @src 0:376:386  \"msg.sender\" */ caller())\n            /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n            mstore(0x20, /** @src 0:430:434  \"true\" */ 0x01)\n            /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n            let dataSlot := keccak256(/** @src 0:368:386  \"owner = msg.sender\" */ 0x00, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ 64)\n            sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:430:434  \"true\" */ 0x01))\n            /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n            let _2 := datasize(\"LogisticsEvents_544_deployed\")\n            codecopy(_1, dataoffset(\"LogisticsEvents_544_deployed\"), _2)\n            return(_1, _2)\n        }\n    }\n    /// @use-src 0:\"contracts/LogisticsTracking.sol\"\n    object \"LogisticsEvents_544_deployed\" {\n        code {\n            {\n                /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                let _1 := 64\n                mstore(_1, memoryguard(0x80))\n                let _2 := 4\n                if iszero(lt(calldatasize(), _2))\n                {\n                    let _3 := 0\n                    switch shr(224, calldataload(_3))\n                    case 0x112ea262 {\n                        if callvalue() { revert(_3, _3) }\n                        let _4 := 32\n                        if slt(add(calldatasize(), not(3)), _4) { revert(_3, _3) }\n                        let value := calldataload(_2)\n                        let _5 := sub(shl(160, 1), 1)\n                        let _6 := and(value, _5)\n                        if iszero(eq(value, _6)) { revert(_3, _3) }\n                        /// @src 0:478:536  \"require(msg.sender == owner, \\\"Not authorized: owner only\\\")\"\n                        require_helper_stringliteral_ecad(/** @src 0:486:505  \"msg.sender == owner\" */ eq(/** @src 0:486:496  \"msg.sender\" */ caller(), /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ and(sload(_3), _5)))\n                        if /** @src 0:2424:2446  \"provider != address(0)\" */ iszero(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _6)\n                        {\n                            let memPtr := mload(_1)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, _2), _4)\n                            mstore(add(memPtr, 36), 24)\n                            mstore(add(memPtr, 68), \"Invalid provider address\")\n                            revert(memPtr, 100)\n                        }\n                        mstore(_3, _6)\n                        mstore(_4, /** @src 0:2494:2513  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        if iszero(/** @src 0:2493:2523  \"!authorizedProviders[provider]\" */ iszero(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff)))\n                        {\n                            let memPtr_1 := mload(_1)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, _2), _4)\n                            mstore(add(memPtr_1, 36), 27)\n                            mstore(add(memPtr_1, 68), \"Provider already authorized\")\n                            revert(memPtr_1, 100)\n                        }\n                        mstore(_3, _6)\n                        mstore(_4, /** @src 0:2494:2513  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let dataSlot := keccak256(_3, _1)\n                        sstore(dataSlot, or(and(sload(dataSlot), not(255)), /** @src 0:2494:2513  \"authorizedProviders\" */ 0x01))\n                        /// @src 0:2617:2662  \"ProviderAuthorized(provider, block.timestamp)\"\n                        let _7 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_7, /** @src 0:2646:2661  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2617:2662  \"ProviderAuthorized(provider, block.timestamp)\"\n                        log2(_7, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _4, /** @src 0:2617:2662  \"ProviderAuthorized(provider, block.timestamp)\" */ 0x5ee18bb17d127d4409f69ab086fffad6d93acf3010f7a646b731b79ada5d2cdf, _6)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0x69dc3ae2 {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_1 := calldataload(_2)\n                        let _8 := and(value_1, sub(shl(160, 1), 1))\n                        if iszero(eq(value_1, _8)) { revert(_3, _3) }\n                        mstore(_3, _8)\n                        mstore(32, /** @src 0:116:167  \"mapping(address => bool) public authorizedProviders\" */ 1)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let value_2 := and(sload(keccak256(_3, _1)), 0xff)\n                        let memPos := mload(_1)\n                        mstore(memPos, iszero(iszero(value_2)))\n                        return(memPos, 32)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let value_3 := and(sload(_3), sub(shl(160, 1), 1))\n                        let memPos_1 := mload(_1)\n                        mstore(memPos_1, value_3)\n                        return(memPos_1, 32)\n                    }\n                    case 0x91e1d4f3 {\n                        if callvalue() { revert(_3, _3) }\n                        let _9 := 32\n                        let _10 := not(3)\n                        if slt(add(calldatasize(), _10), _9) { revert(_3, _3) }\n                        let offset := calldataload(_2)\n                        if gt(offset, 0xffffffffffffffff) { revert(_3, _3) }\n                        let _11 := add(_2, offset)\n                        if slt(add(sub(calldatasize(), offset), _10), 224) { revert(_3, _3) }\n                        mstore(_3, /** @src 0:637:647  \"msg.sender\" */ caller())\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        mstore(_9, /** @src 0:617:636  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:596:703  \"require(...\"\n                        require_helper_stringliteral_7fd4(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        let value_4 := calldataload(_11)\n                        /// @src 0:3109:3166  \"require(data.weight > 0, \\\"Weight must be greater than 0\\\")\"\n                        require_helper_stringliteral_9e0c(/** @src 0:3117:3132  \"data.weight > 0\" */ iszero(iszero(value_4)))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let value_5 := calldataload(/** @src 0:3184:3194  \"data.price\" */ add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset, /** @src 0:3184:3194  \"data.price\" */ 36))\n                        /// @src 0:3176:3231  \"require(data.price > 0, \\\"Price must be greater than 0\\\")\"\n                        require_helper_stringliteral_f496(/** @src 0:3184:3198  \"data.price > 0\" */ iszero(iszero(value_5)))\n                        /// @src 0:3268:3279  \"data.origin\"\n                        let _12 := add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset, /** @src 0:3268:3279  \"data.origin\" */ 100)\n                        let expr_offset := access_calldata_tail_struct_Location_calldata(_11, _12)\n                        /// @src 0:3268:3287  \"data.origin.latitud\"\n                        let expr_offset_1, expr_length := access_calldata_tail_string_calldata(expr_offset, add(expr_offset, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _9))\n                        /// @src 0:3241:3349  \"require(...\"\n                        require_helper_stringliteral(/** @src 0:3262:3299  \"bytes(data.origin.latitud).length > 0\" */ iszero(iszero(/** @src 0:3262:3295  \"bytes(data.origin.latitud).length\" */ expr_length)))\n                        /// @src 0:3386:3397  \"data.origin\"\n                        let expr_offset_2 := access_calldata_tail_struct_Location_calldata(_11, _12)\n                        /// @src 0:3386:3406  \"data.origin.longitud\"\n                        let expr_offset_3, expr_length_1 := access_calldata_tail_string_calldata(expr_offset_2, expr_offset_2)\n                        /// @src 0:3359:3469  \"require(...\"\n                        require_helper_stringliteral_b4d8(/** @src 0:3380:3418  \"bytes(data.origin.longitud).length > 0\" */ iszero(iszero(/** @src 0:3380:3414  \"bytes(data.origin.longitud).length\" */ expr_length_1)))\n                        /// @src 0:3506:3522  \"data.destination\"\n                        let _13 := add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset, /** @src 0:3506:3522  \"data.destination\" */ 132)\n                        let expr_offset_4 := access_calldata_tail_struct_Location_calldata(_11, _13)\n                        /// @src 0:3506:3530  \"data.destination.latitud\"\n                        let expr_offset_5, expr_length_2 := access_calldata_tail_string_calldata(expr_offset_4, add(expr_offset_4, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _9))\n                        /// @src 0:3479:3597  \"require(...\"\n                        require_helper_stringliteral_581b(/** @src 0:3500:3542  \"bytes(data.destination.latitud).length > 0\" */ iszero(iszero(/** @src 0:3500:3538  \"bytes(data.destination.latitud).length\" */ expr_length_2)))\n                        /// @src 0:3634:3650  \"data.destination\"\n                        let expr_offset_6 := access_calldata_tail_struct_Location_calldata(_11, _13)\n                        /// @src 0:3634:3659  \"data.destination.longitud\"\n                        let expr_offset_7, expr_length_3 := access_calldata_tail_string_calldata(expr_offset_6, expr_offset_6)\n                        /// @src 0:3607:3727  \"require(...\"\n                        require_helper_stringliteral_87ab(/** @src 0:3628:3671  \"bytes(data.destination.longitud).length > 0\" */ iszero(iszero(/** @src 0:3628:3667  \"bytes(data.destination.longitud).length\" */ expr_length_3)))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let _14 := sload(/** @src 0:3743:3757  \"nextShipmentId\" */ 0x02)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        sstore(/** @src 0:3743:3757  \"nextShipmentId\" */ 0x02, /** @src 0:3767:3783  \"++nextShipmentId\" */ increment_uint256(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _14))\n                        let value_6 := calldataload(/** @src 0:3848:3858  \"data.stage\" */ add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset, /** @src 0:3848:3858  \"data.stage\" */ 196))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        if iszero(lt(value_6, 6)) { revert(_3, _3) }\n                        /// @src 0:3799:3859  \"ShipmentCreated(id, data.batch, block.timestamp, data.stage)\"\n                        let _15 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_15, /** @src 0:3831:3846  \"block.timestamp\" */ timestamp())\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        abi_encode_enum_ShipmentStage(value_6, add(_15, _9))\n                        /// @src 0:3799:3859  \"ShipmentCreated(id, data.batch, block.timestamp, data.stage)\"\n                        log3(_15, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _1, /** @src 0:3799:3859  \"ShipmentCreated(id, data.batch, block.timestamp, data.stage)\" */ 0xb118b853012c4ac72c351a1dbd3b9faaac7f8f06c66d8e93126c68ad5fbda25c, _14, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:3819:3829  \"data.batch\" */ add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset, /** @src 0:3819:3829  \"data.batch\" */ 68)))\n                        /// @src 0:3920:3936  \"data.description\"\n                        let expr_offset_8, expr_length_4 := access_calldata_tail_string_calldata(_11, add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset, /** @src 0:3920:3936  \"data.description\" */ 164))\n                        /// @src 0:3875:3937  \"ShipmentDetails(id, data.weight, data.price, data.description)\"\n                        let _16 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        /// @src 0:3875:3937  \"ShipmentDetails(id, data.weight, data.price, data.description)\"\n                        log2(_16, sub(abi_encode_uint256_uint256_string_calldata(_16, value_4, value_5, expr_offset_8, expr_length_4), _16), 0xd0dff245ef8064ea30e5fe4169f26b2627d985e0d75b7d4c0b286b6858a2e702, _14)\n                        /// @src 0:3999:4010  \"data.origin\"\n                        let expr_offset_9 := access_calldata_tail_struct_Location_calldata(_11, _12)\n                        /// @src 0:3999:4018  \"data.origin.latitud\"\n                        let expr_offset_10, expr_length_5 := access_calldata_tail_string_calldata(expr_offset_9, add(expr_offset_9, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _9))\n                        /// @src 0:4032:4043  \"data.origin\"\n                        let expr_offset_11 := access_calldata_tail_struct_Location_calldata(_11, _12)\n                        /// @src 0:4032:4052  \"data.origin.longitud\"\n                        let expr_offset_12, expr_length_6 := access_calldata_tail_string_calldata(expr_offset_11, expr_offset_11)\n                        /// @src 0:4066:4082  \"data.destination\"\n                        let expr_offset_13 := access_calldata_tail_struct_Location_calldata(_11, _13)\n                        /// @src 0:4066:4090  \"data.destination.latitud\"\n                        let expr_offset_14, expr_length_7 := access_calldata_tail_string_calldata(expr_offset_13, add(expr_offset_13, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _9))\n                        /// @src 0:4104:4120  \"data.destination\"\n                        let expr_offset_15 := access_calldata_tail_struct_Location_calldata(_11, _13)\n                        /// @src 0:4104:4129  \"data.destination.longitud\"\n                        let expr_offset_16, expr_length_8 := access_calldata_tail_string_calldata(expr_offset_15, expr_offset_15)\n                        /// @src 0:3953:4139  \"ShipmentLocation(...\"\n                        let _17 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        /// @src 0:3953:4139  \"ShipmentLocation(...\"\n                        log2(_17, sub(abi_encode_string_calldata_string_calldata_string_calldata_string_calldata(_17, expr_offset_10, expr_length_5, expr_offset_12, expr_length_6, expr_offset_14, expr_length_7, expr_offset_16, expr_length_8), _17), 0xe2ae1bbe20eb41ac95e45202700261faa3150e291d898b802257c5e330c80b38, _14)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let memPos_2 := mload(_1)\n                        mstore(memPos_2, _14)\n                        return(memPos_2, _9)\n                    }\n                    case 0xac1e8b8e {\n                        if callvalue() { revert(_3, _3) }\n                        let _18 := 32\n                        if slt(add(calldatasize(), not(3)), _18) { revert(_3, _3) }\n                        let value_7 := calldataload(_2)\n                        let _19 := sub(shl(160, 1), 1)\n                        let _20 := and(value_7, _19)\n                        if iszero(eq(value_7, _20)) { revert(_3, _3) }\n                        let cleaned := and(sload(_3), _19)\n                        /// @src 0:478:536  \"require(msg.sender == owner, \\\"Not authorized: owner only\\\")\"\n                        require_helper_stringliteral_ecad(/** @src 0:486:505  \"msg.sender == owner\" */ eq(/** @src 0:486:496  \"msg.sender\" */ caller(), /** @src 0:486:505  \"msg.sender == owner\" */ cleaned))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        if /** @src 0:2754:2771  \"provider != owner\" */ eq(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _20, /** @src 0:2754:2771  \"provider != owner\" */ cleaned)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        {\n                            let memPtr_2 := mload(_1)\n                            mstore(memPtr_2, shl(229, 4594637))\n                            mstore(add(memPtr_2, _2), _18)\n                            mstore(add(memPtr_2, 36), 19)\n                            mstore(add(memPtr_2, 68), \"Cannot revoke owner\")\n                            revert(memPtr_2, 100)\n                        }\n                        mstore(_3, _20)\n                        mstore(_18, /** @src 0:2813:2832  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        if iszero(and(sload(keccak256(_3, _1)), 0xff))\n                        {\n                            let memPtr_3 := mload(_1)\n                            mstore(memPtr_3, shl(229, 4594637))\n                            mstore(add(memPtr_3, _2), _18)\n                            mstore(add(memPtr_3, 36), 23)\n                            mstore(add(memPtr_3, 68), \"Provider not authorized\")\n                            revert(memPtr_3, 100)\n                        }\n                        mstore(_3, _20)\n                        mstore(_18, /** @src 0:2813:2832  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let dataSlot_1 := keccak256(_3, _1)\n                        sstore(dataSlot_1, and(sload(dataSlot_1), not(255)))\n                        /// @src 0:2933:2975  \"ProviderRevoked(provider, block.timestamp)\"\n                        let _21 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_21, /** @src 0:2959:2974  \"block.timestamp\" */ timestamp())\n                        /// @src 0:2933:2975  \"ProviderRevoked(provider, block.timestamp)\"\n                        log2(_21, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _18, /** @src 0:2933:2975  \"ProviderRevoked(provider, block.timestamp)\" */ 0x9bb673ad8a87cc3127dff95aacd54437e94c3262aca5f99a5ddc8a0e9ac71b19, _20)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                    case 0xb9a3a68c {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), _3) { revert(_3, _3) }\n                        let _22 := sload(/** @src 0:173:202  \"uint256 public nextShipmentId\" */ 2)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let memPos_3 := mload(_1)\n                        mstore(memPos_3, _22)\n                        return(memPos_3, 32)\n                    }\n                    case 0xd44fadca {\n                        if callvalue() { revert(_3, _3) }\n                        let _23 := 32\n                        let _24 := not(3)\n                        if slt(add(calldatasize(), _24), _23) { revert(_3, _3) }\n                        let offset_1 := calldataload(_2)\n                        if gt(offset_1, 0xffffffffffffffff) { revert(_3, _3) }\n                        let _25 := add(_2, offset_1)\n                        let _26 := 96\n                        if slt(add(sub(calldatasize(), offset_1), _24), _26) { revert(_3, _3) }\n                        mstore(_3, /** @src 0:637:647  \"msg.sender\" */ caller())\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        mstore(_23, /** @src 0:617:636  \"authorizedProviders\" */ 0x01)\n                        /// @src 0:596:703  \"require(...\"\n                        require_helper_stringliteral_7fd4(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ and(sload(keccak256(_3, _1)), 0xff))\n                        /// @src 0:4299:4365  \"require(data.shipment.weight > 0, \\\"Weight must be greater than 0\\\")\"\n                        require_helper_stringliteral_9e0c(/** @src 0:4307:4331  \"data.shipment.weight > 0\" */ iszero(iszero(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:4307:4320  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_25, _25)))))\n                        /// @src 0:4375:4439  \"require(data.shipment.price > 0, \\\"Price must be greater than 0\\\")\"\n                        require_helper_stringliteral_f496(/** @src 0:4383:4406  \"data.shipment.price > 0\" */ iszero(iszero(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ calldataload(/** @src 0:4383:4402  \"data.shipment.price\" */ add(/** @src 0:4383:4396  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_25, _25), /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _23)))))\n                        /// @src 0:4476:4489  \"data.shipment\"\n                        let expr_offset_17 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:4476:4496  \"data.shipment.origin\"\n                        let expr_offset_18 := access_calldata_tail_struct_Location_calldata(expr_offset_17, add(expr_offset_17, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _26))\n                        /// @src 0:4476:4504  \"data.shipment.origin.latitud\"\n                        let expr_offset_19, expr_length_9 := access_calldata_tail_string_calldata(expr_offset_18, add(expr_offset_18, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _23))\n                        /// @src 0:4449:4566  \"require(...\"\n                        require_helper_stringliteral(/** @src 0:4470:4516  \"bytes(data.shipment.origin.latitud).length > 0\" */ iszero(iszero(/** @src 0:4470:4512  \"bytes(data.shipment.origin.latitud).length\" */ expr_length_9)))\n                        /// @src 0:4603:4616  \"data.shipment\"\n                        let expr_offset_20 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:4603:4623  \"data.shipment.origin\"\n                        let expr_offset_21 := access_calldata_tail_struct_Location_calldata(expr_offset_20, add(expr_offset_20, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _26))\n                        /// @src 0:4603:4632  \"data.shipment.origin.longitud\"\n                        let expr_offset_22, expr_length_10 := access_calldata_tail_string_calldata(expr_offset_21, expr_offset_21)\n                        /// @src 0:4576:4695  \"require(...\"\n                        require_helper_stringliteral_b4d8(/** @src 0:4597:4644  \"bytes(data.shipment.origin.longitud).length > 0\" */ iszero(iszero(/** @src 0:4597:4640  \"bytes(data.shipment.origin.longitud).length\" */ expr_length_10)))\n                        /// @src 0:4732:4745  \"data.shipment\"\n                        let expr_offset_23 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:4732:4757  \"data.shipment.destination\"\n                        let expr_offset_24 := access_calldata_tail_struct_Location_calldata(expr_offset_23, add(expr_offset_23, 128))\n                        /// @src 0:4732:4765  \"data.shipment.destination.latitud\"\n                        let expr_offset_25, expr_length_11 := access_calldata_tail_string_calldata(expr_offset_24, add(expr_offset_24, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _23))\n                        /// @src 0:4705:4832  \"require(...\"\n                        require_helper_stringliteral_581b(/** @src 0:4726:4777  \"bytes(data.shipment.destination.latitud).length > 0\" */ iszero(iszero(/** @src 0:4726:4773  \"bytes(data.shipment.destination.latitud).length\" */ expr_length_11)))\n                        /// @src 0:4869:4882  \"data.shipment\"\n                        let expr_offset_26 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:4869:4894  \"data.shipment.destination\"\n                        let expr_offset_27 := access_calldata_tail_struct_Location_calldata(expr_offset_26, add(expr_offset_26, /** @src 0:4732:4757  \"data.shipment.destination\" */ 128))\n                        /// @src 0:4869:4903  \"data.shipment.destination.longitud\"\n                        let expr_offset_28, expr_length_12 := access_calldata_tail_string_calldata(expr_offset_27, expr_offset_27)\n                        /// @src 0:4842:4971  \"require(...\"\n                        require_helper_stringliteral_87ab(/** @src 0:4863:4915  \"bytes(data.shipment.destination.longitud).length > 0\" */ iszero(iszero(/** @src 0:4863:4911  \"bytes(data.shipment.destination.longitud).length\" */ expr_length_12)))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let _27 := sload(/** @src 0:4987:5001  \"nextShipmentId\" */ 0x02)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        sstore(/** @src 0:4987:5001  \"nextShipmentId\" */ 0x02, /** @src 0:5011:5027  \"++nextShipmentId\" */ increment_uint256(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _27))\n                        let value_8 := calldataload(/** @src 0:5088:5107  \"data.shipment.batch\" */ add(/** @src 0:5088:5101  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_25, _25), /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _1))\n                        let value_9 := calldataload(/** @src 0:5150:5169  \"data.shipment.stage\" */ add(/** @src 0:5150:5163  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_25, _25), /** @src 0:5150:5169  \"data.shipment.stage\" */ 192))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        if iszero(lt(value_9, 6)) { revert(_3, _3) }\n                        /// @src 0:5043:5252  \"ShipmentUpdated(...\"\n                        let _28 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        mstore(_28, /** @src 0:5121:5136  \"block.timestamp\" */ timestamp())\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        abi_encode_enum_ShipmentStage(value_9, add(_28, _23))\n                        mstore(add(_28, _1), calldataload(/** @src 0:5183:5205  \"data.previousBlockHash\" */ add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:5183:5205  \"data.previousBlockHash\" */ 36)))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        mstore(add(_28, _26), calldataload(/** @src 0:5219:5242  \"data.previousShipmentId\" */ add(/** @src 0:58:5985  \"contract LogisticsEvents {...\" */ offset_1, /** @src 0:5219:5242  \"data.previousShipmentId\" */ 68)))\n                        /// @src 0:5043:5252  \"ShipmentUpdated(...\"\n                        log3(_28, /** @src 0:4732:4757  \"data.shipment.destination\" */ 128, /** @src 0:5043:5252  \"ShipmentUpdated(...\" */ 0x3d933174f9ea309dc67a49b099037e7f6797742b5c96a5e24b494ec18bcdfc19, _27, value_8)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let value_10 := calldataload(/** @src 0:5319:5332  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_25, _25))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let value_11 := calldataload(/** @src 0:5353:5372  \"data.shipment.price\" */ add(/** @src 0:5353:5366  \"data.shipment\" */ access_calldata_tail_struct_ShipmentData_calldata(_25, _25), /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _23))\n                        /// @src 0:5386:5399  \"data.shipment\"\n                        let expr_offset_29 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:5386:5411  \"data.shipment.description\"\n                        let expr_offset_30, expr_length_13 := access_calldata_tail_string_calldata(expr_offset_29, add(expr_offset_29, 160))\n                        /// @src 0:5268:5421  \"ShipmentUpdateDetails(...\"\n                        let _29 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        /// @src 0:5268:5421  \"ShipmentUpdateDetails(...\"\n                        log2(_29, sub(abi_encode_uint256_uint256_string_calldata(_29, value_10, value_11, expr_offset_30, expr_length_13), _29), 0x577ece94246e906e2e310d275806cdac2eef04882c7befcb0818fc8b9eb5828a, _27)\n                        /// @src 0:5489:5502  \"data.shipment\"\n                        let expr_offset_31 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:5489:5509  \"data.shipment.origin\"\n                        let expr_offset_32 := access_calldata_tail_struct_Location_calldata(expr_offset_31, add(expr_offset_31, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _26))\n                        /// @src 0:5489:5517  \"data.shipment.origin.latitud\"\n                        let expr_offset_33, expr_length_14 := access_calldata_tail_string_calldata(expr_offset_32, add(expr_offset_32, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _23))\n                        /// @src 0:5531:5544  \"data.shipment\"\n                        let expr_offset_34 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:5531:5551  \"data.shipment.origin\"\n                        let expr_offset_35 := access_calldata_tail_struct_Location_calldata(expr_offset_34, add(expr_offset_34, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _26))\n                        /// @src 0:5531:5560  \"data.shipment.origin.longitud\"\n                        let expr_offset_36, expr_length_15 := access_calldata_tail_string_calldata(expr_offset_35, expr_offset_35)\n                        /// @src 0:5574:5587  \"data.shipment\"\n                        let expr_offset_37 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:5574:5599  \"data.shipment.destination\"\n                        let expr_offset_38 := access_calldata_tail_struct_Location_calldata(expr_offset_37, add(expr_offset_37, /** @src 0:4732:4757  \"data.shipment.destination\" */ 128))\n                        /// @src 0:5574:5607  \"data.shipment.destination.latitud\"\n                        let expr_offset_39, expr_length_16 := access_calldata_tail_string_calldata(expr_offset_38, add(expr_offset_38, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ _23))\n                        /// @src 0:5621:5634  \"data.shipment\"\n                        let expr_offset_40 := access_calldata_tail_struct_ShipmentData_calldata(_25, _25)\n                        /// @src 0:5621:5646  \"data.shipment.destination\"\n                        let expr_offset_41 := access_calldata_tail_struct_Location_calldata(expr_offset_40, add(expr_offset_40, /** @src 0:4732:4757  \"data.shipment.destination\" */ 128))\n                        /// @src 0:5621:5655  \"data.shipment.destination.longitud\"\n                        let expr_offset_42, expr_length_17 := access_calldata_tail_string_calldata(expr_offset_41, expr_offset_41)\n                        /// @src 0:5437:5665  \"ShipmentUpdateLocation(...\"\n                        let _30 := /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ mload(_1)\n                        /// @src 0:5437:5665  \"ShipmentUpdateLocation(...\"\n                        log2(_30, sub(abi_encode_string_calldata_string_calldata_string_calldata_string_calldata(_30, expr_offset_33, expr_length_14, expr_offset_36, expr_length_15, expr_offset_39, expr_length_16, expr_offset_42, expr_length_17), _30), 0xd3714fb6cf2960bb43fe730eda641301c962a3d12f1c10201fa1a77a0874ba83, _27)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let memPos_4 := mload(_1)\n                        mstore(memPos_4, _27)\n                        return(memPos_4, _23)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_3, _3) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_3, _3) }\n                        let value_12 := calldataload(_2)\n                        let _31 := sub(shl(160, 1), 1)\n                        let _32 := and(value_12, _31)\n                        if iszero(eq(value_12, _32)) { revert(_3, _3) }\n                        let _33 := sload(_3)\n                        let cleaned_1 := and(_33, _31)\n                        /// @src 0:478:536  \"require(msg.sender == owner, \\\"Not authorized: owner only\\\")\"\n                        require_helper_stringliteral_ecad(/** @src 0:486:505  \"msg.sender == owner\" */ eq(/** @src 0:486:496  \"msg.sender\" */ caller(), /** @src 0:486:505  \"msg.sender == owner\" */ cleaned_1))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        if /** @src 0:5780:5802  \"newOwner != address(0)\" */ iszero(_32)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        {\n                            let memPtr_4 := mload(_1)\n                            mstore(memPtr_4, shl(229, 4594637))\n                            mstore(add(memPtr_4, _2), 32)\n                            mstore(add(memPtr_4, 36), 25)\n                            mstore(add(memPtr_4, 68), \"Invalid new owner address\")\n                            revert(memPtr_4, 100)\n                        }\n                        if /** @src 0:5850:5867  \"newOwner != owner\" */ eq(_32, cleaned_1)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        {\n                            let memPtr_5 := mload(_1)\n                            mstore(memPtr_5, shl(229, 4594637))\n                            mstore(add(memPtr_5, _2), 32)\n                            mstore(add(memPtr_5, 36), 31)\n                            mstore(add(memPtr_5, 68), \"New owner same as current owner\")\n                            revert(memPtr_5, 100)\n                        }\n                        sstore(_3, or(and(_33, shl(160, 0xffffffffffffffffffffffff)), _32))\n                        mstore(_3, _32)\n                        mstore(32, /** @src 0:5972:5976  \"true\" */ 0x01)\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        let dataSlot_2 := keccak256(_3, _1)\n                        sstore(dataSlot_2, or(and(sload(dataSlot_2), not(255)), /** @src 0:5972:5976  \"true\" */ 0x01))\n                        /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                        return(_3, _3)\n                    }\n                }\n                revert(0, 0)\n            }\n            function require_helper_stringliteral_ecad(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 26)\n                    mstore(add(memPtr, 68), \"Not authorized: owner only\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_7fd4(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Not authorized: provider only\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_9e0c(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Weight must be greater than 0\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_f496(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 28)\n                    mstore(add(memPtr, 68), \"Price must be greater than 0\")\n                    revert(memPtr, 100)\n                }\n            }\n            function access_calldata_tail_struct_Location_calldata(base_ref, ptr_to_tail) -> addr\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(62)))) { revert(0, 0) }\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n            function access_calldata_tail_string_calldata(base_ref, ptr_to_tail) -> addr, length\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(0, 0) }\n                let addr_1 := add(base_ref, rel_offset_of_tail)\n                length := calldataload(addr_1)\n                if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n                addr := add(addr_1, 0x20)\n                if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n            }\n            function require_helper_stringliteral(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 24)\n                    mstore(add(memPtr, 68), \"Origin latitude required\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_b4d8(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 25)\n                    mstore(add(memPtr, 68), \"Origin longitude required\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_581b(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 29)\n                    mstore(add(memPtr, 68), \"Destination latitude required\")\n                    revert(memPtr, 100)\n                }\n            }\n            function require_helper_stringliteral_87ab(condition)\n            {\n                if iszero(condition)\n                {\n                    let memPtr := mload(64)\n                    mstore(memPtr, shl(229, 4594637))\n                    mstore(add(memPtr, 4), 32)\n                    mstore(add(memPtr, 36), 30)\n                    mstore(add(memPtr, 68), \"Destination longitude required\")\n                    revert(memPtr, 100)\n                }\n            }\n            function increment_uint256(value) -> ret\n            {\n                if eq(value, not(0))\n                {\n                    mstore(0, shl(224, 0x4e487b71))\n                    mstore(4, 0x11)\n                    revert(0, 0x24)\n                }\n                ret := add(value, 1)\n            }\n            function abi_encode_enum_ShipmentStage(value, pos)\n            {\n                if iszero(lt(value, 6))\n                {\n                    mstore(/** @src -1:-1:-1 */ 0, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ shl(224, 0x4e487b71))\n                    mstore(4, 0x21)\n                    revert(/** @src -1:-1:-1 */ 0, /** @src 0:58:5985  \"contract LogisticsEvents {...\" */ 0x24)\n                }\n                mstore(pos, value)\n            }\n            function abi_encode_string_calldata(start, length, pos) -> end\n            {\n                mstore(pos, length)\n                calldatacopy(add(pos, 0x20), start, length)\n                mstore(add(add(pos, length), 0x20), /** @src -1:-1:-1 */ 0)\n                /// @src 0:58:5985  \"contract LogisticsEvents {...\"\n                end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n            }\n            function abi_encode_uint256_uint256_string_calldata(headStart, value0, value1, value2, value3) -> tail\n            {\n                mstore(headStart, value0)\n                mstore(add(headStart, 32), value1)\n                mstore(add(headStart, 64), 96)\n                tail := abi_encode_string_calldata(value2, value3, add(headStart, 96))\n            }\n            function abi_encode_string_calldata_string_calldata_string_calldata_string_calldata(headStart, value0, value1, value2, value3, value4, value5, value6, value7) -> tail\n            {\n                mstore(headStart, 128)\n                let tail_1 := abi_encode_string_calldata(value0, value1, add(headStart, 128))\n                mstore(add(headStart, 32), sub(tail_1, headStart))\n                let tail_2 := abi_encode_string_calldata(value2, value3, tail_1)\n                mstore(add(headStart, 64), sub(tail_2, headStart))\n                let tail_3 := abi_encode_string_calldata(value4, value5, tail_2)\n                mstore(add(headStart, 96), sub(tail_3, headStart))\n                tail := abi_encode_string_calldata(value6, value7, tail_3)\n            }\n            function access_calldata_tail_struct_ShipmentData_calldata(base_ref, ptr_to_tail) -> addr\n            {\n                let rel_offset_of_tail := calldataload(ptr_to_tail)\n                if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(222)))) { revert(0, 0) }\n                addr := add(base_ref, rel_offset_of_tail)\n            }\n        }\n        data \".metadata\" hex\"a2646970667358221220b2ac26f9662e9fc0c2b7cc0f1263189ed2ab62236aebf12b0dba161602e3c55e64736f6c63430008140033\"\n    }\n}\n",
          "hash": "5ee26810471d2b8239e52e6293180bc524e0b21be604902c57acad9e0b360da7",
          "factoryDependencies": {}
        }
      }
    }
  }
}